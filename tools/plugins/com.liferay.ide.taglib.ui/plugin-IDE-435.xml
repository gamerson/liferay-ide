<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.4"?>
<plugin>
   <extension
         point="org.eclipse.wst.common.snippets.SnippetContributions">
      <category contenttypes="org.eclipse.jst.jsp.core.jspsource" description="Alloy Taglib" id="com.liferay.ide.ui.snippets.category.alloy" label="Alloy Taglib" smallicon="icons/snippets/alloy_tld_16x16.png" largeicon="icons/snippets/alloy_tld_32x32.png">
      <item class="com.liferay.ide.taglib.ui.snippets.AlloyTagSnippetInsertion" description="a-io" id="com.liferay.ide.ui.snippets.item.a-io" label="a-io" smallicon="icons/snippets/tag-generic.gif">
        <content>
          &lt;alloy:a-io&gt;&lt;/alloy:a-io&gt;
        </content>
      </item>
      <item class="com.liferay.ide.taglib.ui.snippets.AlloyTagSnippetInsertion" description="auto-complete" id="com.liferay.ide.ui.snippets.item.auto-complete" label="auto-complete" smallicon="icons/snippets/tag-generic.gif">
        <content>
          &lt;alloy:auto-complete${alwaysShowContainer}${applyLocalFilter}${autoHighlight}${boundingBox}${button}${contentBox}${cssClass}${dataSource}${dataSourceType}${delimChar}${destroyed}${disabled}${focused}${forceSelection}${height}${hideClass}${autocompleteId}${initialized}${input}${locale}${matchKey}${maxResultsDisplayed}${minQueryLength}${queryDelay}${queryInterval}${queryMatchCase}${queryMatchContains}${queryQuestionMark}${render}${rendered}${schema}${schemaType}${srcNode}${strings}${suppressInputUpdate}${tabIndex}${typeAhead}${typeAheadDelay}${uniqueName}${useARIA}${visible}${width}${afterAlwaysShowContainerChange}${afterApplyLocalFilterChange}${afterAutoHighlightChange}${afterBoundingBoxChange}${afterButtonChange}${afterContainerCollapse}${afterContainerExpand}${afterContainerPopulate}${afterContentBoxChange}${afterCssClassChange}${afterDataError}${afterDataRequest}${afterDataReturn}${afterDataSourceChange}${afterDataSourceTypeChange}${afterDelimCharChange}${afterDestroy}${afterDestroyedChange}${afterDisabledChange}${afterFocusedChange}${afterForceSelectionChange}${afterHeightChange}${afterHideClassChange}${afterIdChange}${afterInit}${afterInitializedChange}${afterInputChange}${afterItemArrowFrom}${afterItemArrowTo}${afterItemMouseOut}${afterItemMouseOver}${afterItemSelect}${afterLocaleChange}${afterMatchKeyChange}${afterMaxResultsDisplayedChange}${afterMinQueryLengthChange}${afterQueryDelayChange}${afterQueryIntervalChange}${afterQueryMatchCaseChange}${afterQueryMatchContainsChange}${afterQueryQuestionMarkChange}${afterRenderChange}${afterRenderedChange}${afterSchemaChange}${afterSchemaTypeChange}${afterSelectionEnforce}${afterSrcNodeChange}${afterStringsChange}${afterSuppressInputUpdateChange}${afterTabIndexChange}${afterTextboxBlur}${afterTextboxChange}${afterTextboxFocus}${afterTextboxKey}${afterTypeAhead}${afterTypeAheadChange}${afterTypeAheadDelayChange}${afterUniqueNameChange}${afterUnmatchedItemSelect}${afterUseARIAChange}${afterVisibleChange}${afterContentUpdate}${afterRender}${afterWidthChange}${onAlwaysShowContainerChange}${onApplyLocalFilterChange}${onAutoHighlightChange}${onBoundingBoxChange}${onButtonChange}${onContainerCollapse}${onContainerExpand}${onContainerPopulate}${onContentBoxChange}${onCssClassChange}${onDataError}${onDataRequest}${onDataReturn}${onDataSourceChange}${onDataSourceTypeChange}${onDelimCharChange}${onDestroy}${onDestroyedChange}${onDisabledChange}${onFocusedChange}${onForceSelectionChange}${onHeightChange}${onHideClassChange}${onIdChange}${onInit}${onInitializedChange}${onInputChange}${onItemArrowFrom}${onItemArrowTo}${onItemMouseOut}${onItemMouseOver}${onItemSelect}${onLocaleChange}${onMatchKeyChange}${onMaxResultsDisplayedChange}${onMinQueryLengthChange}${onQueryDelayChange}${onQueryIntervalChange}${onQueryMatchCaseChange}${onQueryMatchContainsChange}${onQueryQuestionMarkChange}${onRenderChange}${onRenderedChange}${onSchemaChange}${onSchemaTypeChange}${onSelectionEnforce}${onSrcNodeChange}${onStringsChange}${onSuppressInputUpdateChange}${onTabIndexChange}${onTextboxBlur}${onTextboxChange}${onTextboxFocus}${onTextboxKey}${onTypeAhead}${onTypeAheadChange}${onTypeAheadDelayChange}${onUniqueNameChange}${onUnmatchedItemSelect}${onUseARIAChange}${onVisibleChange}${onContentUpdate}${onRender}${onWidthChange}&gt;&lt;/alloy:auto-complete&gt;
        </content>
        <variable description="Always show the results container, instead of only showing when the&#10;user is requesting them.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="alwaysShowContainer" name="alwaysShowContainer"/>
        <variable description="If set to true, the &lt;a href=&quot;AutoComplete.html#method_filterResults&quot;&gt;filterResults&lt;/a&gt;&#10;method will be run on the response from the data source.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="applyLocalFilter" name="applyLocalFilter"/>
        <variable description="Automatically highlight the first item in the list when the results are&#10;made visible.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="autoHighlight" name="autoHighlight"/>
        <variable description="The outermost DOM node for the Widget, used for sizing and positioning&#10;of a Widget as well as a containing element for any decorator elements used&#10;for skinning.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="boundingBox" name="boundingBox"/>
        <variable description="To use a button&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="button" name="button"/>
        <variable description="A DOM node that is a direct descendant of a Widget's bounding box that&#10;houses its content.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="contentBox" name="contentBox"/>
        <variable description="CSS class to be automatically added to the &lt;code&gt;boundingBox&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="cssClass" name="cssClass"/>
        <variable description="The data source that results will be read from. This can either be&#10;an existing &lt;a href=&quot;DataSource.html&quot;&gt;DataSource&lt;/a&gt; object, or it can be a&#10;value that would be passed to &lt;a href=&quot;DataSource.html&quot;&gt;DataSource&lt;/a&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="dataSource" name="dataSource"/>
        <variable description="The type of the data source passed into &lt;a href=&quot;AutoComplete.html#config_dataSource&quot;&gt;dataSource&lt;/a&gt;.&#10;This can be used to explicitly declare what kind of &lt;a href=&quot;DataSource.html&quot;&gt;DataSource&lt;/a&gt; object will&#10;be created.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="dataSourceType" name="dataSourceType"/>
        <variable description="The character used to indicate the beginning or ending of a new value. Most commonly used&#10;is a &quot;,&quot;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="delimChar" name="delimChar"/>
        <variable description="Flag indicating whether or not this object&#10;has been through the destroy lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="destroyed" name="destroyed"/>
        <variable description="Boolean indicating if the Widget should be disabled. The disabled implementation&#10;is left to the specific classes extending widget.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="disabled" name="disabled"/>
        <variable description="Boolean indicating if the Widget, or one of its descendants,&#10;has focus.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="focused" name="focused"/>
        <variable description="If &lt;a href=&quot;AutoComplete.html#config_typeAhead&quot;&gt;typeAhead&lt;/a&gt; is true, this&#10;will clear a selection when the overlay closes unless a user explicitly selects an item.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="forceSelection" name="forceSelection"/>
        <variable description="String with units, or number, representing the height of the Widget. If a number is provided,&#10;the default unit, defined by the Widgets DEF_UNIT, property is used.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="height" name="height"/>
        <variable description="css class added to hide the &lt;code&gt;boundingBox&lt;/code&gt; when&#10;&lt;a href=&quot;Component.html#config_visible&quot;&gt;visible&lt;/a&gt; is set to&#10;&lt;code&gt;false&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="hideClass" name="hideClass"/>
        <variable description="&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="autocompleteId" name="autocompleteId"/>
        <variable description="Flag indicating whether or not this object&#10;has been through the init lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="initialized" name="initialized"/>
        <variable description="The input field which will recieve the users input.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="input" name="input"/>
        <variable description="The default locale for the widget. NOTE: Using get/set on the &quot;strings&quot; attribute will&#10;return/set strings for this locale.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="locale" name="locale"/>
        <variable description="The key or numeric index in the schema to match the result against.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="matchKey" name="matchKey"/>
        <variable description="The maximum number of results to display.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="maxResultsDisplayed" name="maxResultsDisplayed"/>
        <variable description="The minimum number of characters required to query the data source.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="minQueryLength" name="minQueryLength"/>
        <variable description="The amount of time in seconds to delay before submitting the query.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="queryDelay" name="queryDelay"/>
        <variable description="When IME usage is detected or interval detection is explicitly enabled,&#10;AutoComplete will detect the input value at the given interval and send a&#10;query if the value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="queryInterval" name="queryInterval"/>
        <variable description="When &lt;a href=&quot;AutoComplete.html#config_applyLocalFilter&quot;&gt;applyLocalFilter&lt;/a&gt; is true,&#10;setting this to true will match only results with the same case.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="queryMatchCase" name="queryMatchCase"/>
        <variable description="When &lt;a href=&quot;AutoComplete.html#config_applyLocalFilter&quot;&gt;applyLocalFilter&lt;/a&gt; is true,&#10;setting this to true will match results which contain the query anywhere in the text,&#10;instead of just matching just items that start with the query.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="queryMatchContains" name="queryMatchContains"/>
        <variable description="For IO DataSources, AutoComplete will automatically insert a &quot;?&quot; between the server URI and&#10;the encoded query string. To prevent this behavior, you can&#10;set this value to false. If you need to customize this even further, you&#10;can override the &lt;a href=&quot;AutoComplete.html#method_generateRequest&quot;&gt;generateRequest&lt;/a&gt; method.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="queryQuestionMark" name="queryQuestionMark"/>
        <variable description="If &lt;code&gt;true&lt;/code&gt; the render phase will be autimatically invoked&#10;preventing the &lt;code&gt;.render()&lt;/code&gt; manual call.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="render" name="render"/>
        <variable description="Flag indicating whether or not this Widget&#10;has been through the render lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="rendered" name="rendered"/>
        <variable description="A valid configuration object for any of &lt;a href=&quot;module_datasource.html&quot;&gt;DataSource&lt;/a&gt; schema plugins.&lt;!--{&quot;outputType&quot;:&quot;java.util.HashMap&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="schema" name="schema"/>
        <variable description="A valid type of &lt;a href=&quot;module_datasource.html&quot;&gt;DataSource&lt;/a&gt; schema plugin, such as array, json, xml, etc.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="schemaType" name="schemaType"/>
        <variable description="The DOM node to parse for configuration values, passed to the Widget's HTML_PARSER definition&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="srcNode" name="srcNode"/>
        <variable description="Collection of strings used to label elements of the Widget's UI.&lt;!--{&quot;outputType&quot;:&quot;java.util.HashMap&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="strings" name="strings"/>
        <variable description="Whether or not the input field should be updated with selections.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="suppressInputUpdate" name="suppressInputUpdate"/>
        <variable description="Number (between -32767 to 32767) indicating the widget's&#10;position in the default tab flow.  The value is used to set the&#10;&quot;tabIndex&quot; attribute on the widget's bounding box.  Negative values allow&#10;the widget to receive DOM focus programmatically (by calling the focus&#10;method), while being removed from the default tab flow.  A value of&#10;null removes the &quot;tabIndex&quot; attribute from the widget's bounding box.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="tabIndex" name="tabIndex"/>
        <variable description="If &lt;a href=&quot;AutoComplete.html#config_autoHighlight&quot;&gt;autoHighlight&lt;/a&gt; is enabled, whether or not the&#10;input field should be automatically updated with the first result as the user types,&#10;automatically selecting the portion of the text the user has not typed yet.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="typeAhead" name="typeAhead"/>
        <variable description="If &lt;a href=&quot;AutoComplete.html#config_typeAhead&quot;&gt;typeAhead&lt;/a&gt; is true, number of seconds&#10;to delay before updating the input. In order to prevent certain race conditions, this value must&#10;always be greater than the &lt;a href=&quot;AutoComplete.html#config_queryDelay&quot;&gt;queryDelay&lt;/a&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="typeAheadDelay" name="typeAheadDelay"/>
        <variable description="The unique ID of the input element.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="uniqueName" name="uniqueName"/>
        <variable description="Boolean indicating if use of the WAI-ARIA Roles and States should be&#10;enabled for the Widget.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="useARIA" name="useARIA"/>
        <variable description="Boolean indicating weather or not the Widget is visible.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="visible" name="visible"/>
        <variable description="String with units, or number, representing the width of the Widget. If a number is provided,&#10;the default unit, defined by the Widgets DEF_UNIT, property is used.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="width" name="width"/>
        <variable description="Fires when the value for the configuration attribute 'alwaysShowContainer' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterAlwaysShowContainerChange" name="afterAlwaysShowContainerChange"/>
        <variable description="Fires when the value for the configuration attribute 'applyLocalFilter' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterApplyLocalFilterChange" name="afterApplyLocalFilterChange"/>
        <variable description="Fires when the value for the configuration attribute 'autoHighlight' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterAutoHighlightChange" name="afterAutoHighlightChange"/>
        <variable description="Fires when the value for the configuration attribute 'boundingBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterBoundingBoxChange" name="afterBoundingBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'button' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterButtonChange" name="afterButtonChange"/>
        <variable description="Handles the containerCollapse event. Fired when the container is hidden.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterContainerCollapse" name="afterContainerCollapse"/>
        <variable description="Handles the containerExpand event. Fired when the container is shown.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterContainerExpand" name="afterContainerExpand"/>
        <variable description="Handles the containerPopulate event. Fired when the container is populated.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterContainerPopulate" name="afterContainerPopulate"/>
        <variable description="Fires when the value for the configuration attribute 'contentBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterContentBoxChange" name="afterContentBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'cssClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCssClassChange" name="afterCssClassChange"/>
        <variable description="Handles the dataError event. Fired when there is an error accessing the data.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDataError" name="afterDataError"/>
        <variable description="Handles the dataRequest event. Fired when ever a query is sent to the data source.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDataRequest" name="afterDataRequest"/>
        <variable description="Handles the dataReturn event. Fired when data successfully comes back from the data request.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDataReturn" name="afterDataReturn"/>
        <variable description="Fires when the value for the configuration attribute 'dataSource' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDataSourceChange" name="afterDataSourceChange"/>
        <variable description="Fires when the value for the configuration attribute 'dataSourceType' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDataSourceTypeChange" name="afterDataSourceTypeChange"/>
        <variable description="Fires when the value for the configuration attribute 'delimChar' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDelimCharChange" name="afterDelimCharChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroy" name="afterDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroyedChange" name="afterDestroyedChange"/>
        <variable description="Fires when the value for the configuration attribute 'disabled' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDisabledChange" name="afterDisabledChange"/>
        <variable description="Fires when the value for the configuration attribute 'focused' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterFocusedChange" name="afterFocusedChange"/>
        <variable description="Fires when the value for the configuration attribute 'forceSelection' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterForceSelectionChange" name="afterForceSelectionChange"/>
        <variable description="Fires when the value for the configuration attribute 'height' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHeightChange" name="afterHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHideClassChange" name="afterHideClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'id' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterIdChange" name="afterIdChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInit" name="afterInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInitializedChange" name="afterInitializedChange"/>
        <variable description="Fires when the value for the configuration attribute 'input' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInputChange" name="afterInputChange"/>
        <variable description="Handles the itemArrowFrom event. Fired when the user navigates via the keyboard away from&#10;a selected item.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterItemArrowFrom" name="afterItemArrowFrom"/>
        <variable description="Handles the itemArrowTo event. Fired when the user navigates via the keyboard to a selected item.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterItemArrowTo" name="afterItemArrowTo"/>
        <variable description="Handles the itemMouseOut event. Fired when the user mouses away from an item.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterItemMouseOut" name="afterItemMouseOut"/>
        <variable description="Handles the itemMouseOver event. Fired when the user mouses over an item.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterItemMouseOver" name="afterItemMouseOver"/>
        <variable description="Handles the itemSelect event. Fired when an item in the list is selected.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterItemSelect" name="afterItemSelect"/>
        <variable description="Fires when the value for the configuration attribute 'locale' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterLocaleChange" name="afterLocaleChange"/>
        <variable description="Fires when the value for the configuration attribute 'matchKey' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterMatchKeyChange" name="afterMatchKeyChange"/>
        <variable description="Fires when the value for the configuration attribute 'maxResultsDisplayed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterMaxResultsDisplayedChange" name="afterMaxResultsDisplayedChange"/>
        <variable description="Fires when the value for the configuration attribute 'minQueryLength' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterMinQueryLengthChange" name="afterMinQueryLengthChange"/>
        <variable description="Fires when the value for the configuration attribute 'queryDelay' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterQueryDelayChange" name="afterQueryDelayChange"/>
        <variable description="Fires when the value for the configuration attribute 'queryInterval' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterQueryIntervalChange" name="afterQueryIntervalChange"/>
        <variable description="Fires when the value for the configuration attribute 'queryMatchCase' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterQueryMatchCaseChange" name="afterQueryMatchCaseChange"/>
        <variable description="Fires when the value for the configuration attribute 'queryMatchContains' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterQueryMatchContainsChange" name="afterQueryMatchContainsChange"/>
        <variable description="Fires when the value for the configuration attribute 'queryQuestionMark' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterQueryQuestionMarkChange" name="afterQueryQuestionMarkChange"/>
        <variable description="Fires when the value for the configuration attribute 'render' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRenderChange" name="afterRenderChange"/>
        <variable description="Fires when the value for the configuration attribute 'rendered' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRenderedChange" name="afterRenderedChange"/>
        <variable description="Fires when the value for the configuration attribute 'schema' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterSchemaChange" name="afterSchemaChange"/>
        <variable description="Fires when the value for the configuration attribute 'schemaType' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterSchemaTypeChange" name="afterSchemaTypeChange"/>
        <variable description="Handles the selectionEnforce event. Fired if &lt;a href=&quot;Autocomplete.html#config_forceSelection&quot;&gt;forceSelection&lt;/a&gt;&#10;is enabled and the users input element has been cleared because it did not match one of the results.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterSelectionEnforce" name="afterSelectionEnforce"/>
        <variable description="Fires when the value for the configuration attribute 'srcNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterSrcNodeChange" name="afterSrcNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'strings' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterStringsChange" name="afterStringsChange"/>
        <variable description="Fires when the value for the configuration attribute 'suppressInputUpdate' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterSuppressInputUpdateChange" name="afterSuppressInputUpdateChange"/>
        <variable description="Fires when the value for the configuration attribute 'tabIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTabIndexChange" name="afterTabIndexChange"/>
        <variable description="Handles the textboxBlur event. Fired when the user leaves the input element.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTextboxBlur" name="afterTextboxBlur"/>
        <variable description="Handles the textboxChange event. Fired when the value in the input element is changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTextboxChange" name="afterTextboxChange"/>
        <variable description="Handles the textboxFocus event. Fired when user moves focus to the input element.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTextboxFocus" name="afterTextboxFocus"/>
        <variable description="Handles the textboxKey event. Fired when the input element receives key input.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTextboxKey" name="afterTextboxKey"/>
        <variable description="Handles the typeAhead event. Fired when the input element has been pre-filled by the type-ahead feature.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTypeAhead" name="afterTypeAhead"/>
        <variable description="Fires when the value for the configuration attribute 'typeAhead' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTypeAheadChange" name="afterTypeAheadChange"/>
        <variable description="Fires when the value for the configuration attribute 'typeAheadDelay' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTypeAheadDelayChange" name="afterTypeAheadDelayChange"/>
        <variable description="Fires when the value for the configuration attribute 'uniqueName' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterUniqueNameChange" name="afterUniqueNameChange"/>
        <variable description="Handles the unmatchedItemSelect event. Fired when a user selects something that does&#10;not match any of the displayed results.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterUnmatchedItemSelect" name="afterUnmatchedItemSelect"/>
        <variable description="Fires when the value for the configuration attribute 'useARIA' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterUseARIAChange" name="afterUseARIAChange"/>
        <variable description="Fires when the value for the configuration attribute 'visible' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterVisibleChange" name="afterVisibleChange"/>
        <variable description="Notification event, which widget implementations can fire, when&#10;they change the content of the widget. This event has no default&#10;behavior and cannot be prevented, so the &quot;on&quot; or &quot;after&quot;&#10;moments are effectively equivalent (with on listeners being invoked before&#10;after listeners).&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterContentUpdate" name="afterContentUpdate"/>
        <variable description="Lifecycle event for the render phase, fired prior to rendering the UI&#10;for the widget (prior to invoking the widget's renderer method).&#10;&lt;p&gt;&#10;Subscribers to the &quot;on&quot; moment of this event, will be notified&#10;before the widget is rendered.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after rendering is complete.&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRender" name="afterRender"/>
        <variable description="Fires when the value for the configuration attribute 'width' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterWidthChange" name="afterWidthChange"/>
        <variable description="Fires when the value for the configuration attribute 'alwaysShowContainer' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onAlwaysShowContainerChange" name="onAlwaysShowContainerChange"/>
        <variable description="Fires when the value for the configuration attribute 'applyLocalFilter' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onApplyLocalFilterChange" name="onApplyLocalFilterChange"/>
        <variable description="Fires when the value for the configuration attribute 'autoHighlight' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onAutoHighlightChange" name="onAutoHighlightChange"/>
        <variable description="Fires when the value for the configuration attribute 'boundingBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onBoundingBoxChange" name="onBoundingBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'button' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onButtonChange" name="onButtonChange"/>
        <variable description="Handles the containerCollapse event. Fired when the container is hidden.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onContainerCollapse" name="onContainerCollapse"/>
        <variable description="Handles the containerExpand event. Fired when the container is shown.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onContainerExpand" name="onContainerExpand"/>
        <variable description="Handles the containerPopulate event. Fired when the container is populated.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onContainerPopulate" name="onContainerPopulate"/>
        <variable description="Fires when the value for the configuration attribute 'contentBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onContentBoxChange" name="onContentBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'cssClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCssClassChange" name="onCssClassChange"/>
        <variable description="Handles the dataError event. Fired when there is an error accessing the data.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDataError" name="onDataError"/>
        <variable description="Handles the dataRequest event. Fired when ever a query is sent to the data source.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDataRequest" name="onDataRequest"/>
        <variable description="Handles the dataReturn event. Fired when data successfully comes back from the data request.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDataReturn" name="onDataReturn"/>
        <variable description="Fires when the value for the configuration attribute 'dataSource' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDataSourceChange" name="onDataSourceChange"/>
        <variable description="Fires when the value for the configuration attribute 'dataSourceType' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDataSourceTypeChange" name="onDataSourceTypeChange"/>
        <variable description="Fires when the value for the configuration attribute 'delimChar' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDelimCharChange" name="onDelimCharChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroy" name="onDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroyedChange" name="onDestroyedChange"/>
        <variable description="Fires when the value for the configuration attribute 'disabled' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDisabledChange" name="onDisabledChange"/>
        <variable description="Fires when the value for the configuration attribute 'focused' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onFocusedChange" name="onFocusedChange"/>
        <variable description="Fires when the value for the configuration attribute 'forceSelection' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onForceSelectionChange" name="onForceSelectionChange"/>
        <variable description="Fires when the value for the configuration attribute 'height' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHeightChange" name="onHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHideClassChange" name="onHideClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'id' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onIdChange" name="onIdChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInit" name="onInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInitializedChange" name="onInitializedChange"/>
        <variable description="Fires when the value for the configuration attribute 'input' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInputChange" name="onInputChange"/>
        <variable description="Handles the itemArrowFrom event. Fired when the user navigates via the keyboard away from&#10;a selected item.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onItemArrowFrom" name="onItemArrowFrom"/>
        <variable description="Handles the itemArrowTo event. Fired when the user navigates via the keyboard to a selected item.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onItemArrowTo" name="onItemArrowTo"/>
        <variable description="Handles the itemMouseOut event. Fired when the user mouses away from an item.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onItemMouseOut" name="onItemMouseOut"/>
        <variable description="Handles the itemMouseOver event. Fired when the user mouses over an item.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onItemMouseOver" name="onItemMouseOver"/>
        <variable description="Handles the itemSelect event. Fired when an item in the list is selected.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onItemSelect" name="onItemSelect"/>
        <variable description="Fires when the value for the configuration attribute 'locale' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onLocaleChange" name="onLocaleChange"/>
        <variable description="Fires when the value for the configuration attribute 'matchKey' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onMatchKeyChange" name="onMatchKeyChange"/>
        <variable description="Fires when the value for the configuration attribute 'maxResultsDisplayed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onMaxResultsDisplayedChange" name="onMaxResultsDisplayedChange"/>
        <variable description="Fires when the value for the configuration attribute 'minQueryLength' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onMinQueryLengthChange" name="onMinQueryLengthChange"/>
        <variable description="Fires when the value for the configuration attribute 'queryDelay' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onQueryDelayChange" name="onQueryDelayChange"/>
        <variable description="Fires when the value for the configuration attribute 'queryInterval' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onQueryIntervalChange" name="onQueryIntervalChange"/>
        <variable description="Fires when the value for the configuration attribute 'queryMatchCase' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onQueryMatchCaseChange" name="onQueryMatchCaseChange"/>
        <variable description="Fires when the value for the configuration attribute 'queryMatchContains' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onQueryMatchContainsChange" name="onQueryMatchContainsChange"/>
        <variable description="Fires when the value for the configuration attribute 'queryQuestionMark' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onQueryQuestionMarkChange" name="onQueryQuestionMarkChange"/>
        <variable description="Fires when the value for the configuration attribute 'render' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRenderChange" name="onRenderChange"/>
        <variable description="Fires when the value for the configuration attribute 'rendered' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRenderedChange" name="onRenderedChange"/>
        <variable description="Fires when the value for the configuration attribute 'schema' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onSchemaChange" name="onSchemaChange"/>
        <variable description="Fires when the value for the configuration attribute 'schemaType' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onSchemaTypeChange" name="onSchemaTypeChange"/>
        <variable description="Handles the selectionEnforce event. Fired if &lt;a href=&quot;Autocomplete.html#config_forceSelection&quot;&gt;forceSelection&lt;/a&gt;&#10;is enabled and the users input element has been cleared because it did not match one of the results.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onSelectionEnforce" name="onSelectionEnforce"/>
        <variable description="Fires when the value for the configuration attribute 'srcNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onSrcNodeChange" name="onSrcNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'strings' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onStringsChange" name="onStringsChange"/>
        <variable description="Fires when the value for the configuration attribute 'suppressInputUpdate' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onSuppressInputUpdateChange" name="onSuppressInputUpdateChange"/>
        <variable description="Fires when the value for the configuration attribute 'tabIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTabIndexChange" name="onTabIndexChange"/>
        <variable description="Handles the textboxBlur event. Fired when the user leaves the input element.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTextboxBlur" name="onTextboxBlur"/>
        <variable description="Handles the textboxChange event. Fired when the value in the input element is changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTextboxChange" name="onTextboxChange"/>
        <variable description="Handles the textboxFocus event. Fired when user moves focus to the input element.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTextboxFocus" name="onTextboxFocus"/>
        <variable description="Handles the textboxKey event. Fired when the input element receives key input.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTextboxKey" name="onTextboxKey"/>
        <variable description="Handles the typeAhead event. Fired when the input element has been pre-filled by the type-ahead feature.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTypeAhead" name="onTypeAhead"/>
        <variable description="Fires when the value for the configuration attribute 'typeAhead' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTypeAheadChange" name="onTypeAheadChange"/>
        <variable description="Fires when the value for the configuration attribute 'typeAheadDelay' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTypeAheadDelayChange" name="onTypeAheadDelayChange"/>
        <variable description="Fires when the value for the configuration attribute 'uniqueName' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onUniqueNameChange" name="onUniqueNameChange"/>
        <variable description="Handles the unmatchedItemSelect event. Fired when a user selects something that does&#10;not match any of the displayed results.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onUnmatchedItemSelect" name="onUnmatchedItemSelect"/>
        <variable description="Fires when the value for the configuration attribute 'useARIA' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onUseARIAChange" name="onUseARIAChange"/>
        <variable description="Fires when the value for the configuration attribute 'visible' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onVisibleChange" name="onVisibleChange"/>
        <variable description="Notification event, which widget implementations can fire, when&#10;they change the content of the widget. This event has no default&#10;behavior and cannot be prevented, so the &quot;on&quot; or &quot;after&quot;&#10;moments are effectively equivalent (with on listeners being invoked before&#10;after listeners).&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onContentUpdate" name="onContentUpdate"/>
        <variable description="Lifecycle event for the render phase, fired prior to rendering the UI&#10;for the widget (prior to invoking the widget's renderer method).&#10;&lt;p&gt;&#10;Subscribers to the &quot;on&quot; moment of this event, will be notified&#10;before the widget is rendered.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after rendering is complete.&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRender" name="onRender"/>
        <variable description="Fires when the value for the configuration attribute 'width' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onWidthChange" name="onWidthChange"/>
      </item>
      <item class="com.liferay.ide.taglib.ui.snippets.AlloyTagSnippetInsertion" description="button-item" id="com.liferay.ide.ui.snippets.item.button-item" label="button-item" smallicon="icons/snippets/tag-generic.gif">
        <content>
          &lt;alloy:button-item${activeState}${boundingBox}${classNames}${contentBox}${cssClass}${defaultState}${depth}${destroyed}${disabled}${focused}${handler}${height}${hideClass}${hoverState}${icon}${iconNode}${buttonitemId}${index}${initialized}${label}${labelNode}${locale}${buttonitemParent}${render}${rendered}${root}${selected}${srcNode}${strings}${tabIndex}${title}${useARIA}${visible}${width}${afterActiveStateChange}${afterBoundingBoxChange}${afterClassNamesChange}${afterContentBoxChange}${afterCssClassChange}${afterDefaultStateChange}${afterDepthChange}${afterDestroy}${afterDestroyedChange}${afterDisabledChange}${afterFocusedChange}${afterHandlerChange}${afterHeightChange}${afterHideClassChange}${afterHoverStateChange}${afterIconChange}${afterIconNodeChange}${afterIdChange}${afterIndexChange}${afterInit}${afterInitializedChange}${afterLabelChange}${afterLabelNodeChange}${afterLocaleChange}${afterParentChange}${afterRenderChange}${afterRenderedChange}${afterRootChange}${afterSelectedChange}${afterSrcNodeChange}${afterStringsChange}${afterTabIndexChange}${afterTitleChange}${afterUseARIAChange}${afterVisibleChange}${afterContentUpdate}${afterRender}${afterWidthChange}${onActiveStateChange}${onBoundingBoxChange}${onClassNamesChange}${onContentBoxChange}${onCssClassChange}${onDefaultStateChange}${onDepthChange}${onDestroy}${onDestroyedChange}${onDisabledChange}${onFocusedChange}${onHandlerChange}${onHeightChange}${onHideClassChange}${onHoverStateChange}${onIconChange}${onIconNodeChange}${onIdChange}${onIndexChange}${onInit}${onInitializedChange}${onLabelChange}${onLabelNodeChange}${onLocaleChange}${onParentChange}${onRenderChange}${onRenderedChange}${onRootChange}${onSelectedChange}${onSrcNodeChange}${onStringsChange}${onTabIndexChange}${onTitleChange}${onUseARIAChange}${onVisibleChange}${onContentUpdate}${onRender}${onWidthChange}&gt;&lt;/alloy:button-item&gt;
        </content>
        <variable description="Whether to track the active state of the button.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="activeState" name="activeState"/>
        <variable description="The outermost DOM node for the Widget, used for sizing and positioning&#10;of a Widget as well as a containing element for any decorator elements used&#10;for skinning.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="boundingBox" name="boundingBox"/>
        <variable description="An object map of the CSS class names to use for the different interaction states.&lt;!--{&quot;outputType&quot;:&quot;java.util.HashMap&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="classNames" name="classNames"/>
        <variable description="A DOM node that is a direct descendant of a Widget's bounding box that&#10;houses its content.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="contentBox" name="contentBox"/>
        <variable description="CSS class to be automatically added to the &lt;code&gt;boundingBox&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="cssClass" name="cssClass"/>
        <variable description="Whether to apply the default interaction state to the button&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="defaultState" name="defaultState"/>
        <variable description="Number representing the depth of this Widget relative to&#10;the root Widget in the object heirarchy.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="depth" name="depth"/>
        <variable description="Flag indicating whether or not this object&#10;has been through the destroy lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="destroyed" name="destroyed"/>
        <variable description="Boolean indicating if the Widget should be disabled. The disabled implementation&#10;is left to the specific classes extending widget.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="disabled" name="disabled"/>
        <variable description="Boolean indicating if the Widget, or one of its descendants,&#10;has focus.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="focused" name="focused"/>
        <variable description="An event callback to handle when a user interacts with the button.&#10;This can either be a function that will be attached on click, or&#10;an object map that accepts the following keys:&#10;&lt;code&gt;{fn: // The function to execute&#10;context: // The context to execute the function in&#10;type: // The type of event to listen for (defaults to &quot;click&quot;)&#10;}&lt;/code&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="handler" name="handler"/>
        <variable description="String with units, or number, representing the height of the Widget. If a number is provided,&#10;the default unit, defined by the Widgets DEF_UNIT, property is used.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="height" name="height"/>
        <variable description="css class added to hide the &lt;code&gt;boundingBox&lt;/code&gt; when&#10;&lt;a href=&quot;Component.html#config_visible&quot;&gt;visible&lt;/a&gt; is set to&#10;&lt;code&gt;false&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="hideClass" name="hideClass"/>
        <variable description="Whether to track the hover interaction state of the button.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="hoverState" name="hoverState"/>
        <variable description="The icon to use inside of the button. Possible values are:&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="icon" name="icon"/>
        <variable description="DOM Node to display the icon of the ButtonItem. If not&#10;specified try to query using HTML_PARSER an element inside&#10;boundingBox which matches &lt;code&gt;yui3-aui-button-icon&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="iconNode" name="iconNode"/>
        <variable description="&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="buttonitemId" name="buttonitemId"/>
        <variable description="Number representing the Widget's ordinal position in its&#10;parent Widget.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="index" name="index"/>
        <variable description="Flag indicating whether or not this object&#10;has been through the init lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="initialized" name="initialized"/>
        <variable description="Text to use inside of the button.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="label" name="label"/>
        <variable description="DOM Node to display the text of the ButtonItem. If not&#10;specified try to query using HTML_PARSER an element inside&#10;boundingBox which matches &lt;code&gt;yui3-aui-button-label&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="labelNode" name="labelNode"/>
        <variable description="The default locale for the widget. NOTE: Using get/set on the &quot;strings&quot; attribute will&#10;return/set strings for this locale.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="locale" name="locale"/>
        <variable description="Retrieves the parent of the Widget in the object hierarchy.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="buttonitemParent" name="buttonitemParent"/>
        <variable description="If &lt;code&gt;true&lt;/code&gt; the render phase will be autimatically invoked&#10;preventing the &lt;code&gt;.render()&lt;/code&gt; manual call.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="render" name="render"/>
        <variable description="Flag indicating whether or not this Widget&#10;has been through the render lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="rendered" name="rendered"/>
        <variable description="Returns the root Widget in the object hierarchy.  If the&#10;ROOT_TYPE property is set, the search for the root Widget will be&#10;constrained to parent Widgets of the specified type.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="root" name="root"/>
        <variable description="Number indicating if the Widget is selected.  Possible&#10;values are:&#10;&lt;dl&gt;&#10;&lt;dt&gt;0&lt;/dt&gt; &lt;dd&gt;(Default) Not selected&lt;/dd&gt;&#10;&lt;dt&gt;1&lt;/dt&gt; &lt;dd&gt;Fully selected&lt;/dd&gt;&#10;&lt;dt&gt;2&lt;/dt&gt; &lt;dd&gt;Partially selected&lt;/dd&gt;&#10;&lt;/dl&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="selected" name="selected"/>
        <variable description="The DOM node to parse for configuration values, passed to the Widget's HTML_PARSER definition&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="srcNode" name="srcNode"/>
        <variable description="Collection of strings used to label elements of the Widget's UI.&lt;!--{&quot;outputType&quot;:&quot;java.util.HashMap&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="strings" name="strings"/>
        <variable description="Number (between -32767 to 32767) indicating the widget's&#10;position in the default tab flow.  The value is used to set the&#10;&quot;tabIndex&quot; attribute on the widget's bounding box.  Negative values allow&#10;the widget to receive DOM focus programmatically (by calling the focus&#10;method), while being removed from the default tab flow.  A value of&#10;null removes the &quot;tabIndex&quot; attribute from the widget's bounding box.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="tabIndex" name="tabIndex"/>
        <variable description="Text to use as the title attribute of the button.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="title" name="title"/>
        <variable description="Boolean indicating if use of the WAI-ARIA Roles and States should be&#10;enabled for the Widget.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="useARIA" name="useARIA"/>
        <variable description="Boolean indicating weather or not the Widget is visible.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="visible" name="visible"/>
        <variable description="String with units, or number, representing the width of the Widget. If a number is provided,&#10;the default unit, defined by the Widgets DEF_UNIT, property is used.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="width" name="width"/>
        <variable description="Fires when the value for the configuration attribute 'activeState' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterActiveStateChange" name="afterActiveStateChange"/>
        <variable description="Fires when the value for the configuration attribute 'boundingBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterBoundingBoxChange" name="afterBoundingBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'classNames' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterClassNamesChange" name="afterClassNamesChange"/>
        <variable description="Fires when the value for the configuration attribute 'contentBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterContentBoxChange" name="afterContentBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'cssClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCssClassChange" name="afterCssClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'defaultState' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDefaultStateChange" name="afterDefaultStateChange"/>
        <variable description="Fires when the value for the configuration attribute 'depth' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDepthChange" name="afterDepthChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroy" name="afterDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroyedChange" name="afterDestroyedChange"/>
        <variable description="Fires when the value for the configuration attribute 'disabled' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDisabledChange" name="afterDisabledChange"/>
        <variable description="Fires when the value for the configuration attribute 'focused' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterFocusedChange" name="afterFocusedChange"/>
        <variable description="Fires when the value for the configuration attribute 'handler' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHandlerChange" name="afterHandlerChange"/>
        <variable description="Fires when the value for the configuration attribute 'height' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHeightChange" name="afterHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHideClassChange" name="afterHideClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'hoverState' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHoverStateChange" name="afterHoverStateChange"/>
        <variable description="Fires when the value for the configuration attribute 'icon' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterIconChange" name="afterIconChange"/>
        <variable description="Fires when the value for the configuration attribute 'iconNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterIconNodeChange" name="afterIconNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'id' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterIdChange" name="afterIdChange"/>
        <variable description="Fires when the value for the configuration attribute 'index' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterIndexChange" name="afterIndexChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInit" name="afterInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInitializedChange" name="afterInitializedChange"/>
        <variable description="Fires when the value for the configuration attribute 'label' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterLabelChange" name="afterLabelChange"/>
        <variable description="Fires when the value for the configuration attribute 'labelNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterLabelNodeChange" name="afterLabelNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'locale' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterLocaleChange" name="afterLocaleChange"/>
        <variable description="Fires when the value for the configuration attribute 'parent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterParentChange" name="afterParentChange"/>
        <variable description="Fires when the value for the configuration attribute 'render' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRenderChange" name="afterRenderChange"/>
        <variable description="Fires when the value for the configuration attribute 'rendered' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRenderedChange" name="afterRenderedChange"/>
        <variable description="Fires when the value for the configuration attribute 'root' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRootChange" name="afterRootChange"/>
        <variable description="Fires when the value for the configuration attribute 'selected' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterSelectedChange" name="afterSelectedChange"/>
        <variable description="Fires when the value for the configuration attribute 'srcNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterSrcNodeChange" name="afterSrcNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'strings' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterStringsChange" name="afterStringsChange"/>
        <variable description="Fires when the value for the configuration attribute 'tabIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTabIndexChange" name="afterTabIndexChange"/>
        <variable description="Fires when the value for the configuration attribute 'title' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTitleChange" name="afterTitleChange"/>
        <variable description="Fires when the value for the configuration attribute 'useARIA' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterUseARIAChange" name="afterUseARIAChange"/>
        <variable description="Fires when the value for the configuration attribute 'visible' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterVisibleChange" name="afterVisibleChange"/>
        <variable description="Notification event, which widget implementations can fire, when&#10;they change the content of the widget. This event has no default&#10;behavior and cannot be prevented, so the &quot;on&quot; or &quot;after&quot;&#10;moments are effectively equivalent (with on listeners being invoked before&#10;after listeners).&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterContentUpdate" name="afterContentUpdate"/>
        <variable description="Lifecycle event for the render phase, fired prior to rendering the UI&#10;for the widget (prior to invoking the widget's renderer method).&#10;&lt;p&gt;&#10;Subscribers to the &quot;on&quot; moment of this event, will be notified&#10;before the widget is rendered.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after rendering is complete.&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRender" name="afterRender"/>
        <variable description="Fires when the value for the configuration attribute 'width' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterWidthChange" name="afterWidthChange"/>
        <variable description="Fires when the value for the configuration attribute 'activeState' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onActiveStateChange" name="onActiveStateChange"/>
        <variable description="Fires when the value for the configuration attribute 'boundingBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onBoundingBoxChange" name="onBoundingBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'classNames' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onClassNamesChange" name="onClassNamesChange"/>
        <variable description="Fires when the value for the configuration attribute 'contentBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onContentBoxChange" name="onContentBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'cssClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCssClassChange" name="onCssClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'defaultState' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDefaultStateChange" name="onDefaultStateChange"/>
        <variable description="Fires when the value for the configuration attribute 'depth' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDepthChange" name="onDepthChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroy" name="onDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroyedChange" name="onDestroyedChange"/>
        <variable description="Fires when the value for the configuration attribute 'disabled' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDisabledChange" name="onDisabledChange"/>
        <variable description="Fires when the value for the configuration attribute 'focused' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onFocusedChange" name="onFocusedChange"/>
        <variable description="Fires when the value for the configuration attribute 'handler' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHandlerChange" name="onHandlerChange"/>
        <variable description="Fires when the value for the configuration attribute 'height' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHeightChange" name="onHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHideClassChange" name="onHideClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'hoverState' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHoverStateChange" name="onHoverStateChange"/>
        <variable description="Fires when the value for the configuration attribute 'icon' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onIconChange" name="onIconChange"/>
        <variable description="Fires when the value for the configuration attribute 'iconNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onIconNodeChange" name="onIconNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'id' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onIdChange" name="onIdChange"/>
        <variable description="Fires when the value for the configuration attribute 'index' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onIndexChange" name="onIndexChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInit" name="onInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInitializedChange" name="onInitializedChange"/>
        <variable description="Fires when the value for the configuration attribute 'label' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onLabelChange" name="onLabelChange"/>
        <variable description="Fires when the value for the configuration attribute 'labelNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onLabelNodeChange" name="onLabelNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'locale' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onLocaleChange" name="onLocaleChange"/>
        <variable description="Fires when the value for the configuration attribute 'parent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onParentChange" name="onParentChange"/>
        <variable description="Fires when the value for the configuration attribute 'render' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRenderChange" name="onRenderChange"/>
        <variable description="Fires when the value for the configuration attribute 'rendered' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRenderedChange" name="onRenderedChange"/>
        <variable description="Fires when the value for the configuration attribute 'root' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRootChange" name="onRootChange"/>
        <variable description="Fires when the value for the configuration attribute 'selected' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onSelectedChange" name="onSelectedChange"/>
        <variable description="Fires when the value for the configuration attribute 'srcNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onSrcNodeChange" name="onSrcNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'strings' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onStringsChange" name="onStringsChange"/>
        <variable description="Fires when the value for the configuration attribute 'tabIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTabIndexChange" name="onTabIndexChange"/>
        <variable description="Fires when the value for the configuration attribute 'title' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTitleChange" name="onTitleChange"/>
        <variable description="Fires when the value for the configuration attribute 'useARIA' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onUseARIAChange" name="onUseARIAChange"/>
        <variable description="Fires when the value for the configuration attribute 'visible' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onVisibleChange" name="onVisibleChange"/>
        <variable description="Notification event, which widget implementations can fire, when&#10;they change the content of the widget. This event has no default&#10;behavior and cannot be prevented, so the &quot;on&quot; or &quot;after&quot;&#10;moments are effectively equivalent (with on listeners being invoked before&#10;after listeners).&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onContentUpdate" name="onContentUpdate"/>
        <variable description="Lifecycle event for the render phase, fired prior to rendering the UI&#10;for the widget (prior to invoking the widget's renderer method).&#10;&lt;p&gt;&#10;Subscribers to the &quot;on&quot; moment of this event, will be notified&#10;before the widget is rendered.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after rendering is complete.&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRender" name="onRender"/>
        <variable description="Fires when the value for the configuration attribute 'width' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onWidthChange" name="onWidthChange"/>
      </item>
      <item class="com.liferay.ide.taglib.ui.snippets.AlloyTagSnippetInsertion" description="calendar" id="com.liferay.ide.ui.snippets.item.calendar" label="calendar" smallicon="icons/snippets/tag-generic.gif">
        <content>
          &lt;alloy:calendar${align}${allowNone}${blankDays}${calendarBodyContent}${boundingBox}${cancellableHide}${centered}${constrain}${contentBox}${cssClass}${currentDay}${currentMonth}${currentNode}${currentYear}${dateFormat}${dates}${destroyed}${disabled}${fillHeight}${firstDayOfWeek}${focused}${footerContent}${headerContent}${headerContentNode}${headerTitleNode}${height}${hideClass}${hideDelay}${hideOn}${hideOnDocumentClick}${iconNextNode}${iconPrevNode}${calendarId}${initialized}${locale}${maxDate}${minDate}${monthDays}${monthDaysNode}${noneLinkNode}${paddingDaysEnd}${paddingDaysStart}${preventOverlap}${render}${rendered}${selectMultipleDates}${setValue}${shim}${showDelay}${showOn}${showOtherMonth}${showToday}${srcNode}${strings}${tabIndex}${todayLinkNode}${trigger}${useARIA}${visible}${weekDays}${weekDaysNode}${width}${x}${xy}${y}${zIndex}${afterAlignChange}${afterAllowNoneChange}${afterBlankDaysChange}${afterBodyContentChange}${afterBoundingBoxChange}${afterCancellableHideChange}${afterCenteredChange}${afterConstrainChange}${afterContentBoxChange}${afterCssClassChange}${afterCurrentDayChange}${afterCurrentMonthChange}${afterCurrentNodeChange}${afterCurrentYearChange}${afterDateFormatChange}${afterDatesChange}${afterDestroy}${afterDestroyedChange}${afterDisabledChange}${afterFillHeightChange}${afterFirstDayOfWeekChange}${afterFocusedChange}${afterFooterContentChange}${afterHeaderContentChange}${afterHeaderContentNodeChange}${afterHeaderTitleNodeChange}${afterHeightChange}${afterHideClassChange}${afterHideDelayChange}${afterHideOnChange}${afterHideOnDocumentClickChange}${afterIconNextNodeChange}${afterIconPrevNodeChange}${afterIdChange}${afterInit}${afterInitializedChange}${afterLocaleChange}${afterMaxDateChange}${afterMinDateChange}${afterMonthDaysChange}${afterMonthDaysNodeChange}${afterNoneLinkNodeChange}${afterPaddingDaysEndChange}${afterPaddingDaysStartChange}${afterPreventOverlapChange}${afterRenderChange}${afterRenderedChange}${afterSelectMultipleDatesChange}${afterSetValueChange}${afterShimChange}${afterShowDelayChange}${afterShowOnChange}${afterShowOtherMonthChange}${afterShowTodayChange}${afterSrcNodeChange}${afterStringsChange}${afterTabIndexChange}${afterTodayLinkNodeChange}${afterTriggerChange}${afterUseARIAChange}${afterVisibleChange}${afterWeekDaysChange}${afterWeekDaysNodeChange}${afterContentUpdate}${afterRender}${afterWidthChange}${afterXChange}${afterXyChange}${afterYChange}${afterZIndexChange}${onAlignChange}${onAllowNoneChange}${onBlankDaysChange}${onBodyContentChange}${onBoundingBoxChange}${onCancellableHideChange}${onCenteredChange}${onConstrainChange}${onContentBoxChange}${onCssClassChange}${onCurrentDayChange}${onCurrentMonthChange}${onCurrentNodeChange}${onCurrentYearChange}${onDateFormatChange}${onDatesChange}${onDestroy}${onDestroyedChange}${onDisabledChange}${onFillHeightChange}${onFirstDayOfWeekChange}${onFocusedChange}${onFooterContentChange}${onHeaderContentChange}${onHeaderContentNodeChange}${onHeaderTitleNodeChange}${onHeightChange}${onHideClassChange}${onHideDelayChange}${onHideOnChange}${onHideOnDocumentClickChange}${onIconNextNodeChange}${onIconPrevNodeChange}${onIdChange}${onInit}${onInitializedChange}${onLocaleChange}${onMaxDateChange}${onMinDateChange}${onMonthDaysChange}${onMonthDaysNodeChange}${onNoneLinkNodeChange}${onPaddingDaysEndChange}${onPaddingDaysStartChange}${onPreventOverlapChange}${onRenderChange}${onRenderedChange}${onSelectMultipleDatesChange}${onSetValueChange}${onShimChange}${onShowDelayChange}${onShowOnChange}${onShowOtherMonthChange}${onShowTodayChange}${onSrcNodeChange}${onStringsChange}${onTabIndexChange}${onTodayLinkNodeChange}${onTriggerChange}${onUseARIAChange}${onVisibleChange}${onWeekDaysChange}${onWeekDaysNodeChange}${onContentUpdate}${onRender}${onWidthChange}${onXChange}${onXyChange}${onYChange}${onZIndexChange}&gt;&lt;/alloy:calendar&gt;
        </content>
        <variable description="Inherited from &lt;a href=&quot;Overlay.html#config_align&quot;&gt;Overlay&lt;/a&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.util.HashMap&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="align" name="align"/>
        <variable description="Wheather displays the &quot;none&quot; link on the Calendar footer.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="allowNone" name="allowNone"/>
        <variable description="... If not&#10;specified try to query using HTML_PARSER an element inside&#10;contentBox which matches &lt;code&gt;aui-calendar-day-blank&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="blankDays" name="blankDays"/>
        <variable description="The content to be added to the body section. This will replace any existing content&#10;in the body. If you want to append, or insert new content, use the &lt;a href=&quot;#method_setStdModContent&quot;&gt;setStdModContent&lt;/a&gt; method.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="calendarBodyContent" name="calendarBodyContent"/>
        <variable description="The outermost DOM node for the Widget, used for sizing and positioning&#10;of a Widget as well as a containing element for any decorator elements used&#10;for skinning.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="boundingBox" name="boundingBox"/>
        <variable description="Cancel auto hide delay if the user interact with the Overlay&#10;(focus, click, mouseover)&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="cancellableHide" name="cancellableHide"/>
        <variable description="A convenience attribute, which can be used as a shortcut for the align attribute.&#10;If set to true, the Widget is centered in the viewport. If set to a node reference or valid selector string,&#10;the Widget will be centered within the node. If set the false, no center positioning is applied.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="centered" name="centered"/>
        <variable description="The node to constrain the widget's bounding box to, when setting xy. Can also be&#10;set to true, to constrain to the viewport.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="constrain" name="constrain"/>
        <variable description="A DOM node that is a direct descendant of a Widget's bounding box that&#10;houses its content.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="contentBox" name="contentBox"/>
        <variable description="CSS class to be automatically added to the &lt;code&gt;boundingBox&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="cssClass" name="cssClass"/>
        <variable description="Current day number.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="currentDay" name="currentDay"/>
        <variable description="Current month number.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="currentMonth" name="currentMonth"/>
        <variable description="OverlayContext allow multiple elements to be the&#10;&lt;a href=&quot;OverlayContext.html#config_trigger&quot;&gt;trigger&lt;/a&gt;, the&#10;currentNode stores the current active one.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="currentNode" name="currentNode"/>
        <variable description="Current year number.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="currentYear" name="currentYear"/>
        <variable description="The default date format string which can be overriden for&#10;localization support. The format must be valid according to&#10;&lt;a href=&quot;DataType.Date.html&quot;&gt;A.DataType.Date.format&lt;/a&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="dateFormat" name="dateFormat"/>
        <variable description="Dates which the calendar will show as selected by default.&lt;!--{&quot;outputType&quot;:&quot;java.util.ArrayList&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="dates" name="dates"/>
        <variable description="Flag indicating whether or not this object&#10;has been through the destroy lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="destroyed" name="destroyed"/>
        <variable description="Boolean indicating if the Widget should be disabled. The disabled implementation&#10;is left to the specific classes extending widget.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="disabled" name="disabled"/>
        <variable description="The section (WidgetStdMod.HEADER, WidgetStdMod.BODY or WidgetStdMod.FOOTER) which should be resized to fill the height of the standard module, when a&#10;height is set on the Widget. If a height is not set on the widget, then all sections are sized based on&#10;their content.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="fillHeight" name="fillHeight"/>
        <variable description="First day of the week: Sunday is 0, Monday is 1.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="firstDayOfWeek" name="firstDayOfWeek"/>
        <variable description="Boolean indicating if the Widget, or one of its descendants,&#10;has focus.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="focused" name="focused"/>
        <variable description="The content to be added to the footer section. This will replace any existing content&#10;in the footer. If you want to append, or insert new content, use the &lt;a href=&quot;#method_setStdModContent&quot;&gt;setStdModContent&lt;/a&gt; method.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="footerContent" name="footerContent"/>
        <variable description="The content to be added to the header section. This will replace any existing content&#10;in the header. If you want to append, or insert new content, use the &lt;a href=&quot;#method_setStdModContent&quot;&gt;setStdModContent&lt;/a&gt; method.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="headerContent" name="headerContent"/>
        <variable description="... If not&#10;specified try to query using HTML_PARSER an element inside&#10;contentBox which matches &lt;code&gt;aui-calendar-hd&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="headerContentNode" name="headerContentNode"/>
        <variable description="... If not&#10;specified try to query using HTML_PARSER an element inside&#10;contentBox which matches &lt;code&gt;aui-calendar-title&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="headerTitleNode" name="headerTitleNode"/>
        <variable description="String with units, or number, representing the height of the Widget. If a number is provided,&#10;the default unit, defined by the Widgets DEF_UNIT, property is used.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="height" name="height"/>
        <variable description="css class added to hide the &lt;code&gt;boundingBox&lt;/code&gt; when&#10;&lt;a href=&quot;Component.html#config_visible&quot;&gt;visible&lt;/a&gt; is set to&#10;&lt;code&gt;false&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="hideClass" name="hideClass"/>
        <variable description="Number of milliseconds after the hide method is invoked to hide the&#10;OverlayContext.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="hideDelay" name="hideDelay"/>
        <variable description="The event which is responsible to hide the OverlayContext.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="hideOn" name="hideOn"/>
        <variable description="If true the instance is registered on the&#10;&lt;a href=&quot;OverlayContextManager.html&quot;&gt;OverlayContextManager&lt;/a&gt; static&#10;class and will be hide when the user click on document.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="hideOnDocumentClick" name="hideOnDocumentClick"/>
        <variable description="... If not&#10;specified try to query using HTML_PARSER an element inside&#10;contentBox which matches &lt;code&gt;aui-calendar-prev&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="iconNextNode" name="iconNextNode"/>
        <variable description="... If not&#10;specified try to query using HTML_PARSER an element inside&#10;contentBox which matches &lt;code&gt;aui-calendar-prev&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="iconPrevNode" name="iconPrevNode"/>
        <variable description="&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="calendarId" name="calendarId"/>
        <variable description="Flag indicating whether or not this object&#10;has been through the init lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="initialized" name="initialized"/>
        <variable description="The default locale for the widget. NOTE: Using get/set on the &quot;strings&quot; attribute will&#10;return/set strings for this locale.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="locale" name="locale"/>
        <variable description="Maximum allowable date. Values supported by the Date&#10;constructor are supported.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="maxDate" name="maxDate"/>
        <variable description="Minimum allowable date. Values supported by the Date&#10;constructor are supported.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="minDate" name="minDate"/>
        <variable description="... If not&#10;specified try to query using HTML_PARSER an element inside&#10;contentBox which matches &lt;code&gt;aui-calendar-day&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="monthDays" name="monthDays"/>
        <variable description="... If not&#10;specified try to query using HTML_PARSER an element inside&#10;contentBox which matches &lt;code&gt;aui-calendar-monthdays&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="monthDaysNode" name="monthDaysNode"/>
        <variable description="DOM node reference to be the &quot;none&quot; link of the Calendar. If not&#10;specified try to query using HTML_PARSER an element inside&#10;contentBox which matches &lt;code&gt;yui3-aui-calendar-title&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="noneLinkNode" name="noneLinkNode"/>
        <variable description="NodeList containing all the DOM elements for&#10;each blank day. If not specified try to query using HTML_PARSER&#10;an element inside contentBox which matches&#10;&lt;code&gt;yui3-aui-calendar-day-blank&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="paddingDaysEnd" name="paddingDaysEnd"/>
        <variable description="NodeList containing all the DOM elements for&#10;each blank day. If not specified try to query using HTML_PARSER&#10;an element inside contentBox which matches&#10;&lt;code&gt;yui3-aui-calendar-day-blank&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="paddingDaysStart" name="paddingDaysStart"/>
        <variable description="If set to true, and WidgetPositionAlign is also added to the Widget,&#10;constrained positioning will attempt to prevent the widget's bounding box from overlapping&#10;the element to which it has been aligned, by flipping the orientation of the alignment&#10;for corner based alignments&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="preventOverlap" name="preventOverlap"/>
        <variable description="If &lt;code&gt;true&lt;/code&gt; the render phase will be autimatically invoked&#10;preventing the &lt;code&gt;.render()&lt;/code&gt; manual call.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="render" name="render"/>
        <variable description="Flag indicating whether or not this Widget&#10;has been through the render lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="rendered" name="rendered"/>
        <variable description="Wether accepts to select multiple dates.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="selectMultipleDates" name="selectMultipleDates"/>
        <variable description="If true set the selected date with the correct&#10;&lt;a href=&quot;Calendar.html#config_dateFormat&quot;&gt;dateFormat&lt;/a&gt; to the&#10;value of the input field which is hosting the Calendar.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="setValue" name="setValue"/>
        <variable description="Boolean flag to indicate whether or not a shim should be added to the Widgets&#10;boundingBox, to protect it from select box bleedthrough.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="shim" name="shim"/>
        <variable description="Number of milliseconds after the show method is invoked to show the&#10;OverlayContext.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="showDelay" name="showDelay"/>
        <variable description="The event which is responsible to show the OverlayContext.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="showOn" name="showOn"/>
        <variable description="Wheather displays the days for the other months.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="showOtherMonth" name="showOtherMonth"/>
        <variable description="Wheather displays the &quot;today&quot; link on the Calendar footer.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="showToday" name="showToday"/>
        <variable description="The DOM node to parse for configuration values, passed to the Widget's HTML_PARSER definition&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="srcNode" name="srcNode"/>
        <variable description="Collection of strings used to label elements of the Widget's UI.&lt;!--{&quot;outputType&quot;:&quot;java.util.HashMap&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="strings" name="strings"/>
        <variable description="Number (between -32767 to 32767) indicating the widget's&#10;position in the default tab flow.  The value is used to set the&#10;&quot;tabIndex&quot; attribute on the widget's bounding box.  Negative values allow&#10;the widget to receive DOM focus programmatically (by calling the focus&#10;method), while being removed from the default tab flow.  A value of&#10;null removes the &quot;tabIndex&quot; attribute from the widget's bounding box.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="tabIndex" name="tabIndex"/>
        <variable description="DOM node reference to be the &quot;today&quot; link of the Calendar. If not&#10;specified try to query using HTML_PARSER an element inside&#10;contentBox which matches &lt;code&gt;yui3-aui-calendar-title&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="todayLinkNode" name="todayLinkNode"/>
        <variable description="Node, NodeList or Selector which will be used as trigger elements&#10;to show or hide the OverlayContext.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="trigger" name="trigger"/>
        <variable description="True if Overlay should use ARIA plugin&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="useARIA" name="useARIA"/>
        <variable description="If true the OverlayContext is visible by default after the render phase.&#10;Inherited from &lt;a href=&quot;Overlay.html&quot;&gt;Overlay&lt;/a&gt;.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="visible" name="visible"/>
        <variable description="... If not&#10;specified try to query using HTML_PARSER an element inside&#10;contentBox which matches &lt;code&gt;aui-calendar-week&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="weekDays" name="weekDays"/>
        <variable description="... If not&#10;specified try to query using HTML_PARSER an element inside&#10;contentBox which matches &lt;code&gt;aui-calendar-weekdays&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="weekDaysNode" name="weekDaysNode"/>
        <variable description="String with units, or number, representing the width of the Widget. If a number is provided,&#10;the default unit, defined by the Widgets DEF_UNIT, property is used.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="width" name="width"/>
        <variable description="Page X co-ordinate for the widget. This attribute acts as a facade for the&#10;xy attribute. Changes in position can be monitored by listening for xyChange events.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="x" name="x"/>
        <variable description="Page XY co-ordinate pair for the widget.&lt;!--{&quot;outputType&quot;:&quot;java.util.ArrayList&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="xy" name="xy"/>
        <variable description="Page Y co-ordinate for the widget. This attribute acts as a facade for the&#10;xy attribute. Changes in position can be monitored by listening for xyChange events.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="y" name="y"/>
        <variable description="The z-index to apply to the Widgets boundingBox. Non-numerical values for&#10;zIndex will be converted to 0&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="zIndex" name="zIndex"/>
        <variable description="Fires when the value for the configuration attribute 'align' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterAlignChange" name="afterAlignChange"/>
        <variable description="Fires when the value for the configuration attribute 'allowNone' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterAllowNoneChange" name="afterAllowNoneChange"/>
        <variable description="Fires when the value for the configuration attribute 'blankDays' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterBlankDaysChange" name="afterBlankDaysChange"/>
        <variable description="Fires when the value for the configuration attribute 'bodyContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterBodyContentChange" name="afterBodyContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'boundingBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterBoundingBoxChange" name="afterBoundingBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'cancellableHide' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCancellableHideChange" name="afterCancellableHideChange"/>
        <variable description="Fires when the value for the configuration attribute 'centered' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCenteredChange" name="afterCenteredChange"/>
        <variable description="Fires when the value for the configuration attribute 'constrain' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterConstrainChange" name="afterConstrainChange"/>
        <variable description="Fires when the value for the configuration attribute 'contentBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterContentBoxChange" name="afterContentBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'cssClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCssClassChange" name="afterCssClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'currentDay' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCurrentDayChange" name="afterCurrentDayChange"/>
        <variable description="Fires when the value for the configuration attribute 'currentMonth' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCurrentMonthChange" name="afterCurrentMonthChange"/>
        <variable description="Fires when the value for the configuration attribute 'currentNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCurrentNodeChange" name="afterCurrentNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'currentYear' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCurrentYearChange" name="afterCurrentYearChange"/>
        <variable description="Fires when the value for the configuration attribute 'dateFormat' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDateFormatChange" name="afterDateFormatChange"/>
        <variable description="Fires when the value for the configuration attribute 'dates' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDatesChange" name="afterDatesChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroy" name="afterDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroyedChange" name="afterDestroyedChange"/>
        <variable description="Fires when the value for the configuration attribute 'disabled' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDisabledChange" name="afterDisabledChange"/>
        <variable description="Fires when the value for the configuration attribute 'fillHeight' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterFillHeightChange" name="afterFillHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'firstDayOfWeek' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterFirstDayOfWeekChange" name="afterFirstDayOfWeekChange"/>
        <variable description="Fires when the value for the configuration attribute 'focused' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterFocusedChange" name="afterFocusedChange"/>
        <variable description="Fires when the value for the configuration attribute 'footerContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterFooterContentChange" name="afterFooterContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'headerContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHeaderContentChange" name="afterHeaderContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'headerContentNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHeaderContentNodeChange" name="afterHeaderContentNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'headerTitleNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHeaderTitleNodeChange" name="afterHeaderTitleNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'height' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHeightChange" name="afterHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHideClassChange" name="afterHideClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideDelay' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHideDelayChange" name="afterHideDelayChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideOn' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHideOnChange" name="afterHideOnChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideOnDocumentClick' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHideOnDocumentClickChange" name="afterHideOnDocumentClickChange"/>
        <variable description="Fires when the value for the configuration attribute 'iconNextNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterIconNextNodeChange" name="afterIconNextNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'iconPrevNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterIconPrevNodeChange" name="afterIconPrevNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'id' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterIdChange" name="afterIdChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInit" name="afterInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInitializedChange" name="afterInitializedChange"/>
        <variable description="Fires when the value for the configuration attribute 'locale' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterLocaleChange" name="afterLocaleChange"/>
        <variable description="Fires when the value for the configuration attribute 'maxDate' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterMaxDateChange" name="afterMaxDateChange"/>
        <variable description="Fires when the value for the configuration attribute 'minDate' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterMinDateChange" name="afterMinDateChange"/>
        <variable description="Fires when the value for the configuration attribute 'monthDays' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterMonthDaysChange" name="afterMonthDaysChange"/>
        <variable description="Fires when the value for the configuration attribute 'monthDaysNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterMonthDaysNodeChange" name="afterMonthDaysNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'noneLinkNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterNoneLinkNodeChange" name="afterNoneLinkNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'paddingDaysEnd' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterPaddingDaysEndChange" name="afterPaddingDaysEndChange"/>
        <variable description="Fires when the value for the configuration attribute 'paddingDaysStart' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterPaddingDaysStartChange" name="afterPaddingDaysStartChange"/>
        <variable description="Fires when the value for the configuration attribute 'preventOverlap' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterPreventOverlapChange" name="afterPreventOverlapChange"/>
        <variable description="Fires when the value for the configuration attribute 'render' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRenderChange" name="afterRenderChange"/>
        <variable description="Fires when the value for the configuration attribute 'rendered' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRenderedChange" name="afterRenderedChange"/>
        <variable description="Fires when the value for the configuration attribute 'selectMultipleDates' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterSelectMultipleDatesChange" name="afterSelectMultipleDatesChange"/>
        <variable description="Fires when the value for the configuration attribute 'setValue' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterSetValueChange" name="afterSetValueChange"/>
        <variable description="Fires when the value for the configuration attribute 'shim' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterShimChange" name="afterShimChange"/>
        <variable description="Fires when the value for the configuration attribute 'showDelay' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterShowDelayChange" name="afterShowDelayChange"/>
        <variable description="Fires when the value for the configuration attribute 'showOn' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterShowOnChange" name="afterShowOnChange"/>
        <variable description="Fires when the value for the configuration attribute 'showOtherMonth' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterShowOtherMonthChange" name="afterShowOtherMonthChange"/>
        <variable description="Fires when the value for the configuration attribute 'showToday' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterShowTodayChange" name="afterShowTodayChange"/>
        <variable description="Fires when the value for the configuration attribute 'srcNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterSrcNodeChange" name="afterSrcNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'strings' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterStringsChange" name="afterStringsChange"/>
        <variable description="Fires when the value for the configuration attribute 'tabIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTabIndexChange" name="afterTabIndexChange"/>
        <variable description="Fires when the value for the configuration attribute 'todayLinkNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTodayLinkNodeChange" name="afterTodayLinkNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'trigger' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTriggerChange" name="afterTriggerChange"/>
        <variable description="Fires when the value for the configuration attribute 'useARIA' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterUseARIAChange" name="afterUseARIAChange"/>
        <variable description="Fires when the value for the configuration attribute 'visible' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterVisibleChange" name="afterVisibleChange"/>
        <variable description="Fires when the value for the configuration attribute 'weekDays' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterWeekDaysChange" name="afterWeekDaysChange"/>
        <variable description="Fires when the value for the configuration attribute 'weekDaysNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterWeekDaysNodeChange" name="afterWeekDaysNodeChange"/>
        <variable description="Notification event, which widget implementations can fire, when&#10;they change the content of the widget. This event has no default&#10;behavior and cannot be prevented, so the &quot;on&quot; or &quot;after&quot;&#10;moments are effectively equivalent (with on listeners being invoked before&#10;after listeners).&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterContentUpdate" name="afterContentUpdate"/>
        <variable description="Lifecycle event for the render phase, fired prior to rendering the UI&#10;for the widget (prior to invoking the widget's renderer method).&#10;&lt;p&gt;&#10;Subscribers to the &quot;on&quot; moment of this event, will be notified&#10;before the widget is rendered.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after rendering is complete.&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRender" name="afterRender"/>
        <variable description="Fires when the value for the configuration attribute 'width' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterWidthChange" name="afterWidthChange"/>
        <variable description="Fires when the value for the configuration attribute 'x' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterXChange" name="afterXChange"/>
        <variable description="Fires when the value for the configuration attribute 'xy' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterXyChange" name="afterXyChange"/>
        <variable description="Fires when the value for the configuration attribute 'y' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterYChange" name="afterYChange"/>
        <variable description="Fires when the value for the configuration attribute 'zIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterZIndexChange" name="afterZIndexChange"/>
        <variable description="Fires when the value for the configuration attribute 'align' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onAlignChange" name="onAlignChange"/>
        <variable description="Fires when the value for the configuration attribute 'allowNone' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onAllowNoneChange" name="onAllowNoneChange"/>
        <variable description="Fires when the value for the configuration attribute 'blankDays' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onBlankDaysChange" name="onBlankDaysChange"/>
        <variable description="Fires when the value for the configuration attribute 'bodyContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onBodyContentChange" name="onBodyContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'boundingBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onBoundingBoxChange" name="onBoundingBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'cancellableHide' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCancellableHideChange" name="onCancellableHideChange"/>
        <variable description="Fires when the value for the configuration attribute 'centered' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCenteredChange" name="onCenteredChange"/>
        <variable description="Fires when the value for the configuration attribute 'constrain' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onConstrainChange" name="onConstrainChange"/>
        <variable description="Fires when the value for the configuration attribute 'contentBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onContentBoxChange" name="onContentBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'cssClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCssClassChange" name="onCssClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'currentDay' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCurrentDayChange" name="onCurrentDayChange"/>
        <variable description="Fires when the value for the configuration attribute 'currentMonth' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCurrentMonthChange" name="onCurrentMonthChange"/>
        <variable description="Fires when the value for the configuration attribute 'currentNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCurrentNodeChange" name="onCurrentNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'currentYear' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCurrentYearChange" name="onCurrentYearChange"/>
        <variable description="Fires when the value for the configuration attribute 'dateFormat' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDateFormatChange" name="onDateFormatChange"/>
        <variable description="Fires when the value for the configuration attribute 'dates' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDatesChange" name="onDatesChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroy" name="onDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroyedChange" name="onDestroyedChange"/>
        <variable description="Fires when the value for the configuration attribute 'disabled' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDisabledChange" name="onDisabledChange"/>
        <variable description="Fires when the value for the configuration attribute 'fillHeight' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onFillHeightChange" name="onFillHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'firstDayOfWeek' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onFirstDayOfWeekChange" name="onFirstDayOfWeekChange"/>
        <variable description="Fires when the value for the configuration attribute 'focused' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onFocusedChange" name="onFocusedChange"/>
        <variable description="Fires when the value for the configuration attribute 'footerContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onFooterContentChange" name="onFooterContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'headerContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHeaderContentChange" name="onHeaderContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'headerContentNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHeaderContentNodeChange" name="onHeaderContentNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'headerTitleNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHeaderTitleNodeChange" name="onHeaderTitleNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'height' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHeightChange" name="onHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHideClassChange" name="onHideClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideDelay' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHideDelayChange" name="onHideDelayChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideOn' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHideOnChange" name="onHideOnChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideOnDocumentClick' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHideOnDocumentClickChange" name="onHideOnDocumentClickChange"/>
        <variable description="Fires when the value for the configuration attribute 'iconNextNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onIconNextNodeChange" name="onIconNextNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'iconPrevNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onIconPrevNodeChange" name="onIconPrevNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'id' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onIdChange" name="onIdChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInit" name="onInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInitializedChange" name="onInitializedChange"/>
        <variable description="Fires when the value for the configuration attribute 'locale' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onLocaleChange" name="onLocaleChange"/>
        <variable description="Fires when the value for the configuration attribute 'maxDate' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onMaxDateChange" name="onMaxDateChange"/>
        <variable description="Fires when the value for the configuration attribute 'minDate' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onMinDateChange" name="onMinDateChange"/>
        <variable description="Fires when the value for the configuration attribute 'monthDays' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onMonthDaysChange" name="onMonthDaysChange"/>
        <variable description="Fires when the value for the configuration attribute 'monthDaysNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onMonthDaysNodeChange" name="onMonthDaysNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'noneLinkNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onNoneLinkNodeChange" name="onNoneLinkNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'paddingDaysEnd' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onPaddingDaysEndChange" name="onPaddingDaysEndChange"/>
        <variable description="Fires when the value for the configuration attribute 'paddingDaysStart' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onPaddingDaysStartChange" name="onPaddingDaysStartChange"/>
        <variable description="Fires when the value for the configuration attribute 'preventOverlap' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onPreventOverlapChange" name="onPreventOverlapChange"/>
        <variable description="Fires when the value for the configuration attribute 'render' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRenderChange" name="onRenderChange"/>
        <variable description="Fires when the value for the configuration attribute 'rendered' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRenderedChange" name="onRenderedChange"/>
        <variable description="Fires when the value for the configuration attribute 'selectMultipleDates' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onSelectMultipleDatesChange" name="onSelectMultipleDatesChange"/>
        <variable description="Fires when the value for the configuration attribute 'setValue' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onSetValueChange" name="onSetValueChange"/>
        <variable description="Fires when the value for the configuration attribute 'shim' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onShimChange" name="onShimChange"/>
        <variable description="Fires when the value for the configuration attribute 'showDelay' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onShowDelayChange" name="onShowDelayChange"/>
        <variable description="Fires when the value for the configuration attribute 'showOn' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onShowOnChange" name="onShowOnChange"/>
        <variable description="Fires when the value for the configuration attribute 'showOtherMonth' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onShowOtherMonthChange" name="onShowOtherMonthChange"/>
        <variable description="Fires when the value for the configuration attribute 'showToday' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onShowTodayChange" name="onShowTodayChange"/>
        <variable description="Fires when the value for the configuration attribute 'srcNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onSrcNodeChange" name="onSrcNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'strings' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onStringsChange" name="onStringsChange"/>
        <variable description="Fires when the value for the configuration attribute 'tabIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTabIndexChange" name="onTabIndexChange"/>
        <variable description="Fires when the value for the configuration attribute 'todayLinkNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTodayLinkNodeChange" name="onTodayLinkNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'trigger' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTriggerChange" name="onTriggerChange"/>
        <variable description="Fires when the value for the configuration attribute 'useARIA' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onUseARIAChange" name="onUseARIAChange"/>
        <variable description="Fires when the value for the configuration attribute 'visible' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onVisibleChange" name="onVisibleChange"/>
        <variable description="Fires when the value for the configuration attribute 'weekDays' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onWeekDaysChange" name="onWeekDaysChange"/>
        <variable description="Fires when the value for the configuration attribute 'weekDaysNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onWeekDaysNodeChange" name="onWeekDaysNodeChange"/>
        <variable description="Notification event, which widget implementations can fire, when&#10;they change the content of the widget. This event has no default&#10;behavior and cannot be prevented, so the &quot;on&quot; or &quot;after&quot;&#10;moments are effectively equivalent (with on listeners being invoked before&#10;after listeners).&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onContentUpdate" name="onContentUpdate"/>
        <variable description="Lifecycle event for the render phase, fired prior to rendering the UI&#10;for the widget (prior to invoking the widget's renderer method).&#10;&lt;p&gt;&#10;Subscribers to the &quot;on&quot; moment of this event, will be notified&#10;before the widget is rendered.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after rendering is complete.&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRender" name="onRender"/>
        <variable description="Fires when the value for the configuration attribute 'width' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onWidthChange" name="onWidthChange"/>
        <variable description="Fires when the value for the configuration attribute 'x' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onXChange" name="onXChange"/>
        <variable description="Fires when the value for the configuration attribute 'xy' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onXyChange" name="onXyChange"/>
        <variable description="Fires when the value for the configuration attribute 'y' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onYChange" name="onYChange"/>
        <variable description="Fires when the value for the configuration attribute 'zIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onZIndexChange" name="onZIndexChange"/>
      </item>
      <item class="com.liferay.ide.taglib.ui.snippets.AlloyTagSnippetInsertion" description="char-counter" id="com.liferay.ide.ui.snippets.item.char-counter" label="char-counter" smallicon="icons/snippets/tag-generic.gif">
        <content>
          &lt;alloy:char-counter${counter}${destroyed}${initialized}${input}${maxLength}${afterCounterChange}${afterDestroy}${afterDestroyedChange}${afterInit}${afterInitializedChange}${afterInputChange}${afterMaxLengthChange}${onCounterChange}${onDestroy}${onDestroyedChange}${onInit}${onInitializedChange}${onInputChange}${onMaxLengthChange}&gt;&lt;/alloy:char-counter&gt;
        </content>
        <variable description="Node or Selector to display the information of the counter.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="counter" name="counter"/>
        <variable description="Flag indicating whether or not this object&#10;has been through the destroy lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="destroyed" name="destroyed"/>
        <variable description="Flag indicating whether or not this object&#10;has been through the init lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="initialized" name="initialized"/>
        <variable description="Node or Selector for the input field. Required.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="input" name="input"/>
        <variable description="Max number of characters the &lt;a&#10;href=&quot;CharCounter.html#config_input&quot;&gt;input&lt;/a&gt; can have.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="maxLength" name="maxLength"/>
        <variable description="Fires when the value for the configuration attribute 'counter' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCounterChange" name="afterCounterChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroy" name="afterDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroyedChange" name="afterDestroyedChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInit" name="afterInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInitializedChange" name="afterInitializedChange"/>
        <variable description="Fires when the value for the configuration attribute 'input' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInputChange" name="afterInputChange"/>
        <variable description="Fires when the value for the configuration attribute 'maxLength' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterMaxLengthChange" name="afterMaxLengthChange"/>
        <variable description="Fires when the value for the configuration attribute 'counter' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCounterChange" name="onCounterChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroy" name="onDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroyedChange" name="onDestroyedChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInit" name="onInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInitializedChange" name="onInitializedChange"/>
        <variable description="Fires when the value for the configuration attribute 'input' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInputChange" name="onInputChange"/>
        <variable description="Fires when the value for the configuration attribute 'maxLength' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onMaxLengthChange" name="onMaxLengthChange"/>
      </item>
      <item class="com.liferay.ide.taglib.ui.snippets.AlloyTagSnippetInsertion" description="color-picker" id="com.liferay.ide.ui.snippets.item.color-picker" label="color-picker" smallicon="icons/snippets/tag-generic.gif">
        <content>
          &lt;alloy:color-picker${align}${colorpickerBodyContent}${boundingBox}${cancellableHide}${centered}${constrain}${contentBox}${cssClass}${currentNode}${destroyed}${disabled}${fillHeight}${focused}${footerContent}${headerContent}${height}${hideClass}${hideDelay}${hideOn}${hideOnDocumentClick}${colorpickerId}${initialized}${locale}${preventOverlap}${render}${rendered}${shim}${showDelay}${showOn}${srcNode}${strings}${tabIndex}${trigger}${useARIA}${visible}${width}${x}${xy}${y}${zIndex}${afterAlignChange}${afterBodyContentChange}${afterBoundingBoxChange}${afterCancellableHideChange}${afterCenteredChange}${afterConstrainChange}${afterContentBoxChange}${afterCssClassChange}${afterCurrentNodeChange}${afterDestroy}${afterDestroyedChange}${afterDisabledChange}${afterFillHeightChange}${afterFocusedChange}${afterFooterContentChange}${afterHeaderContentChange}${afterHeightChange}${afterHideClassChange}${afterHideDelayChange}${afterHideOnChange}${afterHideOnDocumentClickChange}${afterIdChange}${afterInit}${afterInitializedChange}${afterLocaleChange}${afterPreventOverlapChange}${afterRenderChange}${afterRenderedChange}${afterShimChange}${afterShowDelayChange}${afterShowOnChange}${afterSrcNodeChange}${afterStringsChange}${afterTabIndexChange}${afterTriggerChange}${afterUseARIAChange}${afterVisibleChange}${afterContentUpdate}${afterRender}${afterWidthChange}${afterXChange}${afterXyChange}${afterYChange}${afterZIndexChange}${onAlignChange}${onBodyContentChange}${onBoundingBoxChange}${onCancellableHideChange}${onCenteredChange}${onConstrainChange}${onContentBoxChange}${onCssClassChange}${onCurrentNodeChange}${onDestroy}${onDestroyedChange}${onDisabledChange}${onFillHeightChange}${onFocusedChange}${onFooterContentChange}${onHeaderContentChange}${onHeightChange}${onHideClassChange}${onHideDelayChange}${onHideOnChange}${onHideOnDocumentClickChange}${onIdChange}${onInit}${onInitializedChange}${onLocaleChange}${onPreventOverlapChange}${onRenderChange}${onRenderedChange}${onShimChange}${onShowDelayChange}${onShowOnChange}${onSrcNodeChange}${onStringsChange}${onTabIndexChange}${onTriggerChange}${onUseARIAChange}${onVisibleChange}${onContentUpdate}${onRender}${onWidthChange}${onXChange}${onXyChange}${onYChange}${onZIndexChange}&gt;&lt;/alloy:color-picker&gt;
        </content>
        <variable description="Inherited from &lt;a href=&quot;Overlay.html#config_align&quot;&gt;Overlay&lt;/a&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.util.HashMap&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="align" name="align"/>
        <variable description="The content to be added to the body section. This will replace any existing content&#10;in the body. If you want to append, or insert new content, use the &lt;a href=&quot;#method_setStdModContent&quot;&gt;setStdModContent&lt;/a&gt; method.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="colorpickerBodyContent" name="colorpickerBodyContent"/>
        <variable description="The outermost DOM node for the Widget, used for sizing and positioning&#10;of a Widget as well as a containing element for any decorator elements used&#10;for skinning.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="boundingBox" name="boundingBox"/>
        <variable description="Cancel auto hide delay if the user interact with the Overlay&#10;(focus, click, mouseover)&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="cancellableHide" name="cancellableHide"/>
        <variable description="A convenience attribute, which can be used as a shortcut for the align attribute.&#10;If set to true, the Widget is centered in the viewport. If set to a node reference or valid selector string,&#10;the Widget will be centered within the node. If set the false, no center positioning is applied.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="centered" name="centered"/>
        <variable description="The node to constrain the widget's bounding box to, when setting xy. Can also be&#10;set to true, to constrain to the viewport.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="constrain" name="constrain"/>
        <variable description="A DOM node that is a direct descendant of a Widget's bounding box that&#10;houses its content.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="contentBox" name="contentBox"/>
        <variable description="CSS class to be automatically added to the &lt;code&gt;boundingBox&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="cssClass" name="cssClass"/>
        <variable description="OverlayContext allow multiple elements to be the&#10;&lt;a href=&quot;OverlayContext.html#config_trigger&quot;&gt;trigger&lt;/a&gt;, the&#10;currentNode stores the current active one.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="currentNode" name="currentNode"/>
        <variable description="Flag indicating whether or not this object&#10;has been through the destroy lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="destroyed" name="destroyed"/>
        <variable description="Boolean indicating if the Widget should be disabled. The disabled implementation&#10;is left to the specific classes extending widget.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="disabled" name="disabled"/>
        <variable description="The section (WidgetStdMod.HEADER, WidgetStdMod.BODY or WidgetStdMod.FOOTER) which should be resized to fill the height of the standard module, when a&#10;height is set on the Widget. If a height is not set on the widget, then all sections are sized based on&#10;their content.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="fillHeight" name="fillHeight"/>
        <variable description="Boolean indicating if the Widget, or one of its descendants,&#10;has focus.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="focused" name="focused"/>
        <variable description="The content to be added to the footer section. This will replace any existing content&#10;in the footer. If you want to append, or insert new content, use the &lt;a href=&quot;#method_setStdModContent&quot;&gt;setStdModContent&lt;/a&gt; method.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="footerContent" name="footerContent"/>
        <variable description="The content to be added to the header section. This will replace any existing content&#10;in the header. If you want to append, or insert new content, use the &lt;a href=&quot;#method_setStdModContent&quot;&gt;setStdModContent&lt;/a&gt; method.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="headerContent" name="headerContent"/>
        <variable description="String with units, or number, representing the height of the Widget. If a number is provided,&#10;the default unit, defined by the Widgets DEF_UNIT, property is used.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="height" name="height"/>
        <variable description="css class added to hide the &lt;code&gt;boundingBox&lt;/code&gt; when&#10;&lt;a href=&quot;Component.html#config_visible&quot;&gt;visible&lt;/a&gt; is set to&#10;&lt;code&gt;false&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="hideClass" name="hideClass"/>
        <variable description="Number of milliseconds after the hide method is invoked to hide the&#10;OverlayContext.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="hideDelay" name="hideDelay"/>
        <variable description="The event which is responsible to hide the OverlayContext.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="hideOn" name="hideOn"/>
        <variable description="If true the instance is registered on the&#10;&lt;a href=&quot;OverlayContextManager.html&quot;&gt;OverlayContextManager&lt;/a&gt; static&#10;class and will be hide when the user click on document.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="hideOnDocumentClick" name="hideOnDocumentClick"/>
        <variable description="&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="colorpickerId" name="colorpickerId"/>
        <variable description="Flag indicating whether or not this object&#10;has been through the init lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="initialized" name="initialized"/>
        <variable description="The default locale for the widget. NOTE: Using get/set on the &quot;strings&quot; attribute will&#10;return/set strings for this locale.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="locale" name="locale"/>
        <variable description="If set to true, and WidgetPositionAlign is also added to the Widget,&#10;constrained positioning will attempt to prevent the widget's bounding box from overlapping&#10;the element to which it has been aligned, by flipping the orientation of the alignment&#10;for corner based alignments&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="preventOverlap" name="preventOverlap"/>
        <variable description="If &lt;code&gt;true&lt;/code&gt; the render phase will be autimatically invoked&#10;preventing the &lt;code&gt;.render()&lt;/code&gt; manual call.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="render" name="render"/>
        <variable description="Flag indicating whether or not this Widget&#10;has been through the render lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="rendered" name="rendered"/>
        <variable description="Boolean flag to indicate whether or not a shim should be added to the Widgets&#10;boundingBox, to protect it from select box bleedthrough.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="shim" name="shim"/>
        <variable description="Number of milliseconds after the show method is invoked to show the&#10;OverlayContext.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="showDelay" name="showDelay"/>
        <variable description="The event which is responsible to show the OverlayContext.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="showOn" name="showOn"/>
        <variable description="The DOM node to parse for configuration values, passed to the Widget's HTML_PARSER definition&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="srcNode" name="srcNode"/>
        <variable description="Collection of strings used to label elements of the Widget's UI.&lt;!--{&quot;outputType&quot;:&quot;java.util.HashMap&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="strings" name="strings"/>
        <variable description="Number (between -32767 to 32767) indicating the widget's&#10;position in the default tab flow.  The value is used to set the&#10;&quot;tabIndex&quot; attribute on the widget's bounding box.  Negative values allow&#10;the widget to receive DOM focus programmatically (by calling the focus&#10;method), while being removed from the default tab flow.  A value of&#10;null removes the &quot;tabIndex&quot; attribute from the widget's bounding box.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="tabIndex" name="tabIndex"/>
        <variable description="Node, NodeList or Selector which will be used as trigger elements&#10;to show or hide the OverlayContext.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="trigger" name="trigger"/>
        <variable description="True if Overlay should use ARIA plugin&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="useARIA" name="useARIA"/>
        <variable description="If true the OverlayContext is visible by default after the render phase.&#10;Inherited from &lt;a href=&quot;Overlay.html&quot;&gt;Overlay&lt;/a&gt;.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="visible" name="visible"/>
        <variable description="String with units, or number, representing the width of the Widget. If a number is provided,&#10;the default unit, defined by the Widgets DEF_UNIT, property is used.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="width" name="width"/>
        <variable description="Page X co-ordinate for the widget. This attribute acts as a facade for the&#10;xy attribute. Changes in position can be monitored by listening for xyChange events.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="x" name="x"/>
        <variable description="Page XY co-ordinate pair for the widget.&lt;!--{&quot;outputType&quot;:&quot;java.util.ArrayList&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="xy" name="xy"/>
        <variable description="Page Y co-ordinate for the widget. This attribute acts as a facade for the&#10;xy attribute. Changes in position can be monitored by listening for xyChange events.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="y" name="y"/>
        <variable description="The z-index to apply to the Widgets boundingBox. Non-numerical values for&#10;zIndex will be converted to 0&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="zIndex" name="zIndex"/>
        <variable description="Fires when the value for the configuration attribute 'align' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterAlignChange" name="afterAlignChange"/>
        <variable description="Fires when the value for the configuration attribute 'bodyContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterBodyContentChange" name="afterBodyContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'boundingBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterBoundingBoxChange" name="afterBoundingBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'cancellableHide' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCancellableHideChange" name="afterCancellableHideChange"/>
        <variable description="Fires when the value for the configuration attribute 'centered' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCenteredChange" name="afterCenteredChange"/>
        <variable description="Fires when the value for the configuration attribute 'constrain' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterConstrainChange" name="afterConstrainChange"/>
        <variable description="Fires when the value for the configuration attribute 'contentBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterContentBoxChange" name="afterContentBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'cssClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCssClassChange" name="afterCssClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'currentNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCurrentNodeChange" name="afterCurrentNodeChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroy" name="afterDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroyedChange" name="afterDestroyedChange"/>
        <variable description="Fires when the value for the configuration attribute 'disabled' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDisabledChange" name="afterDisabledChange"/>
        <variable description="Fires when the value for the configuration attribute 'fillHeight' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterFillHeightChange" name="afterFillHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'focused' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterFocusedChange" name="afterFocusedChange"/>
        <variable description="Fires when the value for the configuration attribute 'footerContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterFooterContentChange" name="afterFooterContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'headerContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHeaderContentChange" name="afterHeaderContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'height' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHeightChange" name="afterHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHideClassChange" name="afterHideClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideDelay' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHideDelayChange" name="afterHideDelayChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideOn' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHideOnChange" name="afterHideOnChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideOnDocumentClick' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHideOnDocumentClickChange" name="afterHideOnDocumentClickChange"/>
        <variable description="Fires when the value for the configuration attribute 'id' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterIdChange" name="afterIdChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInit" name="afterInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInitializedChange" name="afterInitializedChange"/>
        <variable description="Fires when the value for the configuration attribute 'locale' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterLocaleChange" name="afterLocaleChange"/>
        <variable description="Fires when the value for the configuration attribute 'preventOverlap' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterPreventOverlapChange" name="afterPreventOverlapChange"/>
        <variable description="Fires when the value for the configuration attribute 'render' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRenderChange" name="afterRenderChange"/>
        <variable description="Fires when the value for the configuration attribute 'rendered' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRenderedChange" name="afterRenderedChange"/>
        <variable description="Fires when the value for the configuration attribute 'shim' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterShimChange" name="afterShimChange"/>
        <variable description="Fires when the value for the configuration attribute 'showDelay' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterShowDelayChange" name="afterShowDelayChange"/>
        <variable description="Fires when the value for the configuration attribute 'showOn' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterShowOnChange" name="afterShowOnChange"/>
        <variable description="Fires when the value for the configuration attribute 'srcNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterSrcNodeChange" name="afterSrcNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'strings' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterStringsChange" name="afterStringsChange"/>
        <variable description="Fires when the value for the configuration attribute 'tabIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTabIndexChange" name="afterTabIndexChange"/>
        <variable description="Fires when the value for the configuration attribute 'trigger' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTriggerChange" name="afterTriggerChange"/>
        <variable description="Fires when the value for the configuration attribute 'useARIA' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterUseARIAChange" name="afterUseARIAChange"/>
        <variable description="Fires when the value for the configuration attribute 'visible' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterVisibleChange" name="afterVisibleChange"/>
        <variable description="Notification event, which widget implementations can fire, when&#10;they change the content of the widget. This event has no default&#10;behavior and cannot be prevented, so the &quot;on&quot; or &quot;after&quot;&#10;moments are effectively equivalent (with on listeners being invoked before&#10;after listeners).&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterContentUpdate" name="afterContentUpdate"/>
        <variable description="Lifecycle event for the render phase, fired prior to rendering the UI&#10;for the widget (prior to invoking the widget's renderer method).&#10;&lt;p&gt;&#10;Subscribers to the &quot;on&quot; moment of this event, will be notified&#10;before the widget is rendered.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after rendering is complete.&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRender" name="afterRender"/>
        <variable description="Fires when the value for the configuration attribute 'width' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterWidthChange" name="afterWidthChange"/>
        <variable description="Fires when the value for the configuration attribute 'x' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterXChange" name="afterXChange"/>
        <variable description="Fires when the value for the configuration attribute 'xy' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterXyChange" name="afterXyChange"/>
        <variable description="Fires when the value for the configuration attribute 'y' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterYChange" name="afterYChange"/>
        <variable description="Fires when the value for the configuration attribute 'zIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterZIndexChange" name="afterZIndexChange"/>
        <variable description="Fires when the value for the configuration attribute 'align' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onAlignChange" name="onAlignChange"/>
        <variable description="Fires when the value for the configuration attribute 'bodyContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onBodyContentChange" name="onBodyContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'boundingBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onBoundingBoxChange" name="onBoundingBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'cancellableHide' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCancellableHideChange" name="onCancellableHideChange"/>
        <variable description="Fires when the value for the configuration attribute 'centered' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCenteredChange" name="onCenteredChange"/>
        <variable description="Fires when the value for the configuration attribute 'constrain' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onConstrainChange" name="onConstrainChange"/>
        <variable description="Fires when the value for the configuration attribute 'contentBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onContentBoxChange" name="onContentBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'cssClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCssClassChange" name="onCssClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'currentNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCurrentNodeChange" name="onCurrentNodeChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroy" name="onDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroyedChange" name="onDestroyedChange"/>
        <variable description="Fires when the value for the configuration attribute 'disabled' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDisabledChange" name="onDisabledChange"/>
        <variable description="Fires when the value for the configuration attribute 'fillHeight' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onFillHeightChange" name="onFillHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'focused' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onFocusedChange" name="onFocusedChange"/>
        <variable description="Fires when the value for the configuration attribute 'footerContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onFooterContentChange" name="onFooterContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'headerContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHeaderContentChange" name="onHeaderContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'height' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHeightChange" name="onHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHideClassChange" name="onHideClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideDelay' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHideDelayChange" name="onHideDelayChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideOn' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHideOnChange" name="onHideOnChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideOnDocumentClick' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHideOnDocumentClickChange" name="onHideOnDocumentClickChange"/>
        <variable description="Fires when the value for the configuration attribute 'id' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onIdChange" name="onIdChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInit" name="onInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInitializedChange" name="onInitializedChange"/>
        <variable description="Fires when the value for the configuration attribute 'locale' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onLocaleChange" name="onLocaleChange"/>
        <variable description="Fires when the value for the configuration attribute 'preventOverlap' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onPreventOverlapChange" name="onPreventOverlapChange"/>
        <variable description="Fires when the value for the configuration attribute 'render' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRenderChange" name="onRenderChange"/>
        <variable description="Fires when the value for the configuration attribute 'rendered' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRenderedChange" name="onRenderedChange"/>
        <variable description="Fires when the value for the configuration attribute 'shim' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onShimChange" name="onShimChange"/>
        <variable description="Fires when the value for the configuration attribute 'showDelay' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onShowDelayChange" name="onShowDelayChange"/>
        <variable description="Fires when the value for the configuration attribute 'showOn' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onShowOnChange" name="onShowOnChange"/>
        <variable description="Fires when the value for the configuration attribute 'srcNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onSrcNodeChange" name="onSrcNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'strings' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onStringsChange" name="onStringsChange"/>
        <variable description="Fires when the value for the configuration attribute 'tabIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTabIndexChange" name="onTabIndexChange"/>
        <variable description="Fires when the value for the configuration attribute 'trigger' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTriggerChange" name="onTriggerChange"/>
        <variable description="Fires when the value for the configuration attribute 'useARIA' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onUseARIAChange" name="onUseARIAChange"/>
        <variable description="Fires when the value for the configuration attribute 'visible' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onVisibleChange" name="onVisibleChange"/>
        <variable description="Notification event, which widget implementations can fire, when&#10;they change the content of the widget. This event has no default&#10;behavior and cannot be prevented, so the &quot;on&quot; or &quot;after&quot;&#10;moments are effectively equivalent (with on listeners being invoked before&#10;after listeners).&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onContentUpdate" name="onContentUpdate"/>
        <variable description="Lifecycle event for the render phase, fired prior to rendering the UI&#10;for the widget (prior to invoking the widget's renderer method).&#10;&lt;p&gt;&#10;Subscribers to the &quot;on&quot; moment of this event, will be notified&#10;before the widget is rendered.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after rendering is complete.&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRender" name="onRender"/>
        <variable description="Fires when the value for the configuration attribute 'width' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onWidthChange" name="onWidthChange"/>
        <variable description="Fires when the value for the configuration attribute 'x' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onXChange" name="onXChange"/>
        <variable description="Fires when the value for the configuration attribute 'xy' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onXyChange" name="onXyChange"/>
        <variable description="Fires when the value for the configuration attribute 'y' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onYChange" name="onYChange"/>
        <variable description="Fires when the value for the configuration attribute 'zIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onZIndexChange" name="onZIndexChange"/>
      </item>
      <item class="com.liferay.ide.taglib.ui.snippets.AlloyTagSnippetInsertion" description="date-picker-select" id="com.liferay.ide.ui.snippets.item.date-picker-select" label="date-picker-select" smallicon="icons/snippets/tag-generic.gif">
        <content>
          &lt;alloy:date-picker-select${appendOrder}${boundingBox}${buttonNode}${calendar}${contentBox}${cssClass}${dayNode}${dayNodeName}${destroyed}${disabled}${focused}${formatter}${height}${hideClass}${datepickerselectId}${initialized}${locale}${monthNode}${monthNodeName}${populateDay}${populateMonth}${populateYear}${render}${rendered}${selectWrapperNode}${setValue}${srcNode}${stack}${strings}${tabIndex}${trigger}${useARIA}${visible}${width}${yearNode}${yearNodeName}${yearRange}${afterAppendOrderChange}${afterBoundingBoxChange}${afterButtonNodeChange}${afterCalendarChange}${afterContentBoxChange}${afterCssClassChange}${afterDayNodeChange}${afterDayNodeNameChange}${afterDestroy}${afterDestroyedChange}${afterDisabledChange}${afterFocusedChange}${afterFormatterChange}${afterHeightChange}${afterHideClassChange}${afterIdChange}${afterInit}${afterInitializedChange}${afterLocaleChange}${afterMonthNodeChange}${afterMonthNodeNameChange}${afterPopulateDayChange}${afterPopulateMonthChange}${afterPopulateYearChange}${afterRenderChange}${afterRenderedChange}${afterSelectWrapperNodeChange}${afterSetValueChange}${afterSrcNodeChange}${afterStackChange}${afterStringsChange}${afterTabIndexChange}${afterTriggerChange}${afterUseARIAChange}${afterVisibleChange}${afterContentUpdate}${afterRender}${afterWidthChange}${afterYearNodeChange}${afterYearNodeNameChange}${afterYearRangeChange}${onAppendOrderChange}${onBoundingBoxChange}${onButtonNodeChange}${onCalendarChange}${onContentBoxChange}${onCssClassChange}${onDayNodeChange}${onDayNodeNameChange}${onDestroy}${onDestroyedChange}${onDisabledChange}${onFocusedChange}${onFormatterChange}${onHeightChange}${onHideClassChange}${onIdChange}${onInit}${onInitializedChange}${onLocaleChange}${onMonthNodeChange}${onMonthNodeNameChange}${onPopulateDayChange}${onPopulateMonthChange}${onPopulateYearChange}${onRenderChange}${onRenderedChange}${onSelectWrapperNodeChange}${onSetValueChange}${onSrcNodeChange}${onStackChange}${onStringsChange}${onTabIndexChange}${onTriggerChange}${onUseARIAChange}${onVisibleChange}${onContentUpdate}${onRender}${onWidthChange}${onYearNodeChange}${onYearNodeNameChange}${onYearRangeChange}&gt;&lt;/alloy:date-picker-select&gt;
        </content>
        <variable description="The order the selects elements are appended to the&#10;&lt;a href=&quot;DatePickerSelect.html#config_srcNode&quot;&gt;srcNode&lt;/a&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.util.ArrayList&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="appendOrder" name="appendOrder"/>
        <variable description="The outermost DOM node for the Widget, used for sizing and positioning&#10;of a Widget as well as a containing element for any decorator elements used&#10;for skinning.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="boundingBox" name="boundingBox"/>
        <variable description="DOM Node to display the button of the DatePickerSelect. If not&#10;specified try to query using HTML_PARSER an element inside&#10;contentBox which matches &lt;code&gt;yui3-aui-buttonitem&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="buttonNode" name="buttonNode"/>
        <variable description="&lt;a href=&quot;Calendar.html&quot;&gt;Calendar&lt;/a&gt; configuration Object.&lt;/a&gt;&lt;!--{&quot;outputType&quot;:&quot;java.util.HashMap&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="calendar" name="calendar"/>
        <variable description="A DOM node that is a direct descendant of a Widget's bounding box that&#10;houses its content.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="contentBox" name="contentBox"/>
        <variable description="CSS class to be automatically added to the &lt;code&gt;boundingBox&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="cssClass" name="cssClass"/>
        <variable description="DOM Node to display the day of the DatePickerSelect. If not&#10;specified try to query using HTML_PARSER an element inside&#10;contentBox which matches &lt;code&gt;yui3-aui-datepicker-year&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="dayNode" name="dayNode"/>
        <variable description="Name attribute used on the&#10;&lt;a href=&quot;DatePickerSelect.html#config_dayNode&quot;&gt;dayNode&lt;/a&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="dayNodeName" name="dayNodeName"/>
        <variable description="Flag indicating whether or not this object&#10;has been through the destroy lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="destroyed" name="destroyed"/>
        <variable description="Boolean indicating if the Widget should be disabled. The disabled implementation&#10;is left to the specific classes extending widget.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="disabled" name="disabled"/>
        <variable description="Boolean indicating if the Widget, or one of its descendants,&#10;has focus.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="focused" name="focused"/>
        <variable description="Function to format the array of the selected dates before set the&#10;value of the input.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="formatter" name="formatter"/>
        <variable description="String with units, or number, representing the height of the Widget. If a number is provided,&#10;the default unit, defined by the Widgets DEF_UNIT, property is used.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="height" name="height"/>
        <variable description="css class added to hide the &lt;code&gt;boundingBox&lt;/code&gt; when&#10;&lt;a href=&quot;Component.html#config_visible&quot;&gt;visible&lt;/a&gt; is set to&#10;&lt;code&gt;false&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="hideClass" name="hideClass"/>
        <variable description="&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="datepickerselectId" name="datepickerselectId"/>
        <variable description="Flag indicating whether or not this object&#10;has been through the init lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="initialized" name="initialized"/>
        <variable description="The default locale for the widget. NOTE: Using get/set on the &quot;strings&quot; attribute will&#10;return/set strings for this locale.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="locale" name="locale"/>
        <variable description="DOM Node to display the month of the DatePickerSelect. If not&#10;specified try to query using HTML_PARSER an element inside&#10;contentBox which matches &lt;code&gt;yui3-aui-datepicker-year&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="monthNode" name="monthNode"/>
        <variable description="Name attribute used on the&#10;&lt;a href=&quot;DatePickerSelect.html#config_monthNode&quot;&gt;monthNode&lt;/a&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="monthNodeName" name="monthNodeName"/>
        <variable description="If true the select element for the days will be automatic&#10;populated.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="populateDay" name="populateDay"/>
        <variable description="If true the select element for the month will be automatic&#10;populated.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="populateMonth" name="populateMonth"/>
        <variable description="If true the select element for the year will be automatic&#10;populated.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="populateYear" name="populateYear"/>
        <variable description="If &lt;code&gt;true&lt;/code&gt; the render phase will be autimatically invoked&#10;preventing the &lt;code&gt;.render()&lt;/code&gt; manual call.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="render" name="render"/>
        <variable description="Flag indicating whether or not this Widget&#10;has been through the render lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="rendered" name="rendered"/>
        <variable description="DOM Node to display the selects of the DatePickerSelect. If not&#10;specified try to query using HTML_PARSER an element inside&#10;contentBox which matches &lt;code&gt;yui3-aui-datepicker-select-wrapper&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="selectWrapperNode" name="selectWrapperNode"/>
        <variable description="If true set the selected date with the correct&#10;&lt;a href=&quot;Calendar.html#config_dateFormat&quot;&gt;dateFormat&lt;/a&gt; to the&#10;value of the input field which is hosting the Calendar.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="setValue" name="setValue"/>
        <variable description="The DOM node to parse for configuration values, passed to the Widget's HTML_PARSER definition&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="srcNode" name="srcNode"/>
        <variable description="If true is able to do stacking with another overlays.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="stack" name="stack"/>
        <variable description="Collection of strings used to label elements of the Widget's UI.&lt;!--{&quot;outputType&quot;:&quot;java.util.HashMap&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="strings" name="strings"/>
        <variable description="Number (between -32767 to 32767) indicating the widget's&#10;position in the default tab flow.  The value is used to set the&#10;&quot;tabIndex&quot; attribute on the widget's bounding box.  Negative values allow&#10;the widget to receive DOM focus programmatically (by calling the focus&#10;method), while being removed from the default tab flow.  A value of&#10;null removes the &quot;tabIndex&quot; attribute from the widget's bounding box.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="tabIndex" name="tabIndex"/>
        <variable description="Trigger element to open the calendar. Inherited from&#10;&lt;a href=&quot;OverlayContext.html#config_trigger&quot;&gt;OverlayContext&lt;/a&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="trigger" name="trigger"/>
        <variable description="Boolean indicating if use of the WAI-ARIA Roles and States should be&#10;enabled for the Widget.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="useARIA" name="useARIA"/>
        <variable description="Boolean indicating weather or not the Widget is visible.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="visible" name="visible"/>
        <variable description="String with units, or number, representing the width of the Widget. If a number is provided,&#10;the default unit, defined by the Widgets DEF_UNIT, property is used.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="width" name="width"/>
        <variable description="DOM Node to display the year of the DatePickerSelect. If not&#10;specified try to query using HTML_PARSER an element inside&#10;contentBox which matches &lt;code&gt;yui3-aui-datepicker-year&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="yearNode" name="yearNode"/>
        <variable description="Name attribute used on the&#10;&lt;a href=&quot;DatePickerSelect.html#config_yearNode&quot;&gt;yearNode&lt;/a&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="yearNodeName" name="yearNodeName"/>
        <variable description="Year range to be displayed on the year select element. By default&#10;it displays from -10 to +10 years from the current year.&lt;!--{&quot;outputType&quot;:&quot;java.util.ArrayList&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="yearRange" name="yearRange"/>
        <variable description="Fires when the value for the configuration attribute 'appendOrder' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterAppendOrderChange" name="afterAppendOrderChange"/>
        <variable description="Fires when the value for the configuration attribute 'boundingBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterBoundingBoxChange" name="afterBoundingBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'buttonNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterButtonNodeChange" name="afterButtonNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'calendar' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCalendarChange" name="afterCalendarChange"/>
        <variable description="Fires when the value for the configuration attribute 'contentBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterContentBoxChange" name="afterContentBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'cssClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCssClassChange" name="afterCssClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'dayNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDayNodeChange" name="afterDayNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'dayNodeName' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDayNodeNameChange" name="afterDayNodeNameChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroy" name="afterDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroyedChange" name="afterDestroyedChange"/>
        <variable description="Fires when the value for the configuration attribute 'disabled' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDisabledChange" name="afterDisabledChange"/>
        <variable description="Fires when the value for the configuration attribute 'focused' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterFocusedChange" name="afterFocusedChange"/>
        <variable description="Fires when the value for the configuration attribute 'formatter' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterFormatterChange" name="afterFormatterChange"/>
        <variable description="Fires when the value for the configuration attribute 'height' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHeightChange" name="afterHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHideClassChange" name="afterHideClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'id' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterIdChange" name="afterIdChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInit" name="afterInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInitializedChange" name="afterInitializedChange"/>
        <variable description="Fires when the value for the configuration attribute 'locale' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterLocaleChange" name="afterLocaleChange"/>
        <variable description="Fires when the value for the configuration attribute 'monthNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterMonthNodeChange" name="afterMonthNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'monthNodeName' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterMonthNodeNameChange" name="afterMonthNodeNameChange"/>
        <variable description="Fires when the value for the configuration attribute 'populateDay' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterPopulateDayChange" name="afterPopulateDayChange"/>
        <variable description="Fires when the value for the configuration attribute 'populateMonth' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterPopulateMonthChange" name="afterPopulateMonthChange"/>
        <variable description="Fires when the value for the configuration attribute 'populateYear' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterPopulateYearChange" name="afterPopulateYearChange"/>
        <variable description="Fires when the value for the configuration attribute 'render' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRenderChange" name="afterRenderChange"/>
        <variable description="Fires when the value for the configuration attribute 'rendered' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRenderedChange" name="afterRenderedChange"/>
        <variable description="Fires when the value for the configuration attribute 'selectWrapperNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterSelectWrapperNodeChange" name="afterSelectWrapperNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'setValue' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterSetValueChange" name="afterSetValueChange"/>
        <variable description="Fires when the value for the configuration attribute 'srcNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterSrcNodeChange" name="afterSrcNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'stack' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterStackChange" name="afterStackChange"/>
        <variable description="Fires when the value for the configuration attribute 'strings' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterStringsChange" name="afterStringsChange"/>
        <variable description="Fires when the value for the configuration attribute 'tabIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTabIndexChange" name="afterTabIndexChange"/>
        <variable description="Fires when the value for the configuration attribute 'trigger' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTriggerChange" name="afterTriggerChange"/>
        <variable description="Fires when the value for the configuration attribute 'useARIA' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterUseARIAChange" name="afterUseARIAChange"/>
        <variable description="Fires when the value for the configuration attribute 'visible' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterVisibleChange" name="afterVisibleChange"/>
        <variable description="Notification event, which widget implementations can fire, when&#10;they change the content of the widget. This event has no default&#10;behavior and cannot be prevented, so the &quot;on&quot; or &quot;after&quot;&#10;moments are effectively equivalent (with on listeners being invoked before&#10;after listeners).&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterContentUpdate" name="afterContentUpdate"/>
        <variable description="Lifecycle event for the render phase, fired prior to rendering the UI&#10;for the widget (prior to invoking the widget's renderer method).&#10;&lt;p&gt;&#10;Subscribers to the &quot;on&quot; moment of this event, will be notified&#10;before the widget is rendered.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after rendering is complete.&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRender" name="afterRender"/>
        <variable description="Fires when the value for the configuration attribute 'width' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterWidthChange" name="afterWidthChange"/>
        <variable description="Fires when the value for the configuration attribute 'yearNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterYearNodeChange" name="afterYearNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'yearNodeName' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterYearNodeNameChange" name="afterYearNodeNameChange"/>
        <variable description="Fires when the value for the configuration attribute 'yearRange' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterYearRangeChange" name="afterYearRangeChange"/>
        <variable description="Fires when the value for the configuration attribute 'appendOrder' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onAppendOrderChange" name="onAppendOrderChange"/>
        <variable description="Fires when the value for the configuration attribute 'boundingBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onBoundingBoxChange" name="onBoundingBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'buttonNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onButtonNodeChange" name="onButtonNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'calendar' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCalendarChange" name="onCalendarChange"/>
        <variable description="Fires when the value for the configuration attribute 'contentBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onContentBoxChange" name="onContentBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'cssClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCssClassChange" name="onCssClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'dayNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDayNodeChange" name="onDayNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'dayNodeName' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDayNodeNameChange" name="onDayNodeNameChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroy" name="onDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroyedChange" name="onDestroyedChange"/>
        <variable description="Fires when the value for the configuration attribute 'disabled' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDisabledChange" name="onDisabledChange"/>
        <variable description="Fires when the value for the configuration attribute 'focused' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onFocusedChange" name="onFocusedChange"/>
        <variable description="Fires when the value for the configuration attribute 'formatter' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onFormatterChange" name="onFormatterChange"/>
        <variable description="Fires when the value for the configuration attribute 'height' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHeightChange" name="onHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHideClassChange" name="onHideClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'id' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onIdChange" name="onIdChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInit" name="onInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInitializedChange" name="onInitializedChange"/>
        <variable description="Fires when the value for the configuration attribute 'locale' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onLocaleChange" name="onLocaleChange"/>
        <variable description="Fires when the value for the configuration attribute 'monthNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onMonthNodeChange" name="onMonthNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'monthNodeName' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onMonthNodeNameChange" name="onMonthNodeNameChange"/>
        <variable description="Fires when the value for the configuration attribute 'populateDay' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onPopulateDayChange" name="onPopulateDayChange"/>
        <variable description="Fires when the value for the configuration attribute 'populateMonth' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onPopulateMonthChange" name="onPopulateMonthChange"/>
        <variable description="Fires when the value for the configuration attribute 'populateYear' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onPopulateYearChange" name="onPopulateYearChange"/>
        <variable description="Fires when the value for the configuration attribute 'render' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRenderChange" name="onRenderChange"/>
        <variable description="Fires when the value for the configuration attribute 'rendered' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRenderedChange" name="onRenderedChange"/>
        <variable description="Fires when the value for the configuration attribute 'selectWrapperNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onSelectWrapperNodeChange" name="onSelectWrapperNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'setValue' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onSetValueChange" name="onSetValueChange"/>
        <variable description="Fires when the value for the configuration attribute 'srcNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onSrcNodeChange" name="onSrcNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'stack' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onStackChange" name="onStackChange"/>
        <variable description="Fires when the value for the configuration attribute 'strings' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onStringsChange" name="onStringsChange"/>
        <variable description="Fires when the value for the configuration attribute 'tabIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTabIndexChange" name="onTabIndexChange"/>
        <variable description="Fires when the value for the configuration attribute 'trigger' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTriggerChange" name="onTriggerChange"/>
        <variable description="Fires when the value for the configuration attribute 'useARIA' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onUseARIAChange" name="onUseARIAChange"/>
        <variable description="Fires when the value for the configuration attribute 'visible' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onVisibleChange" name="onVisibleChange"/>
        <variable description="Notification event, which widget implementations can fire, when&#10;they change the content of the widget. This event has no default&#10;behavior and cannot be prevented, so the &quot;on&quot; or &quot;after&quot;&#10;moments are effectively equivalent (with on listeners being invoked before&#10;after listeners).&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onContentUpdate" name="onContentUpdate"/>
        <variable description="Lifecycle event for the render phase, fired prior to rendering the UI&#10;for the widget (prior to invoking the widget's renderer method).&#10;&lt;p&gt;&#10;Subscribers to the &quot;on&quot; moment of this event, will be notified&#10;before the widget is rendered.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after rendering is complete.&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRender" name="onRender"/>
        <variable description="Fires when the value for the configuration attribute 'width' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onWidthChange" name="onWidthChange"/>
        <variable description="Fires when the value for the configuration attribute 'yearNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onYearNodeChange" name="onYearNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'yearNodeName' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onYearNodeNameChange" name="onYearNodeNameChange"/>
        <variable description="Fires when the value for the configuration attribute 'yearRange' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onYearRangeChange" name="onYearRangeChange"/>
      </item>
      <item class="com.liferay.ide.taglib.ui.snippets.AlloyTagSnippetInsertion" description="dialog" id="com.liferay.ide.ui.snippets.item.dialog" label="dialog" smallicon="icons/snippets/tag-generic.gif">
        <content>
          &lt;alloy:dialog${align}${dialogBodyContent}${boundingBox}${buttons}${centered}${close}${collapsed}${collapsible}${constrain}${constrain2view}${contentBox}${cssClass}${destroyOnClose}${destroyed}${disabled}${dragConfig}${dragInstance}${draggable}${fillHeight}${focused}${footerContent}${headerContent}${height}${hideClass}${icons}${dialogId}${initialized}${locale}${modal}${preventOverlap}${render}${rendered}${resizable}${resizableConfig}${resizableInstance}${shim}${srcNode}${stack}${strings}${tabIndex}${title}${useARIA}${visible}${width}${x}${xy}${y}${zIndex}${afterAlignChange}${afterBodyContentChange}${afterBoundingBoxChange}${afterButtonsChange}${afterCenteredChange}${afterCloseChange}${afterCollapsedChange}${afterCollapsibleChange}${afterConstrain2viewChange}${afterConstrainChange}${afterContentBoxChange}${afterCssClassChange}${afterDestroy}${afterDestroyOnCloseChange}${afterDestroyedChange}${afterDisabledChange}${afterDragConfigChange}${afterDragInstanceChange}${afterDraggableChange}${afterFillHeightChange}${afterFocusedChange}${afterFooterContentChange}${afterHeaderContentChange}${afterHeightChange}${afterHideClassChange}${afterIconsChange}${afterIdChange}${afterInit}${afterInitializedChange}${afterLocaleChange}${afterModalChange}${afterPreventOverlapChange}${afterRenderChange}${afterRenderedChange}${afterResizableChange}${afterResizableConfigChange}${afterResizableInstanceChange}${afterShimChange}${afterSrcNodeChange}${afterStackChange}${afterStringsChange}${afterTabIndexChange}${afterTitleChange}${afterUseARIAChange}${afterVisibleChange}${afterContentUpdate}${afterRender}${afterWidthChange}${afterXChange}${afterXyChange}${afterYChange}${afterZIndexChange}${onAlignChange}${onBodyContentChange}${onBoundingBoxChange}${onButtonsChange}${onCenteredChange}${onCloseChange}${onCollapsedChange}${onCollapsibleChange}${onConstrain2viewChange}${onConstrainChange}${onContentBoxChange}${onCssClassChange}${onDestroy}${onDestroyOnCloseChange}${onDestroyedChange}${onDisabledChange}${onDragConfigChange}${onDragInstanceChange}${onDraggableChange}${onFillHeightChange}${onFocusedChange}${onFooterContentChange}${onHeaderContentChange}${onHeightChange}${onHideClassChange}${onIconsChange}${onIdChange}${onInit}${onInitializedChange}${onLocaleChange}${onModalChange}${onPreventOverlapChange}${onRenderChange}${onRenderedChange}${onResizableChange}${onResizableConfigChange}${onResizableInstanceChange}${onShimChange}${onSrcNodeChange}${onStackChange}${onStringsChange}${onTabIndexChange}${onTitleChange}${onUseARIAChange}${onVisibleChange}${onContentUpdate}${onRender}${onWidthChange}${onXChange}${onXyChange}${onYChange}${onZIndexChange}&gt;&lt;/alloy:dialog&gt;
        </content>
        <variable description="&lt;!--{&quot;outputType&quot;:&quot;java.util.HashMap&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="align" name="align"/>
        <variable description="See &lt;a href=&quot;WidgetStdMod.html#config_bodyContent&quot;&gt;WidgetStdMod bodyContent&lt;/a&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="dialogBodyContent" name="dialogBodyContent"/>
        <variable description="The outermost DOM node for the Widget, used for sizing and positioning&#10;of a Widget as well as a containing element for any decorator elements used&#10;for skinning.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="boundingBox" name="boundingBox"/>
        <variable description="&lt;p&gt;Array of object literals, each containing a set of properties&#10;defining a button to be appended into the Dialog's footer. Each&#10;button object in the buttons array can have two properties:&lt;/p&gt;&#10;&lt;dl&gt;&#10;&lt;dt&gt;text:&lt;/dt&gt;&#10;&lt;dd&gt;&#10;The text that will display on the face of the button. The text can include&#10;HTML, as long as it is compliant with HTML Button specifications.&#10;&lt;/dd&gt;&#10;&lt;dt&gt;handler:&lt;/dt&gt;&#10;&lt;dd&gt;&#10;A reference to a function that should fire when the button is clicked.&#10;(In this case scope of this function is always its Dialog instance.)&#10;&lt;/dd&gt;&#10;&lt;/dl&gt;&lt;!--{&quot;outputType&quot;:&quot;java.util.ArrayList&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="buttons" name="buttons"/>
        <variable description="A convenience attribute, which can be used as a shortcut for the align attribute.&#10;If set to true, the Widget is centered in the viewport. If set to a node reference or valid selector string,&#10;the Widget will be centered within the node. If set the false, no center positioning is applied.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="centered" name="centered"/>
        <variable description="If &lt;code&gt;true&lt;/code&gt; the close icon will be displayed on the&#10;Dialog header.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="close" name="close"/>
        <variable description="Whether the panel is displayed collapsed.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="collapsed" name="collapsed"/>
        <variable description="Whether the panel is able to be collapsed.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="collapsible" name="collapsible"/>
        <variable description="The node to constrain the widget's bounding box to, when setting xy. Can also be&#10;set to true, to constrain to the viewport.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="constrain" name="constrain"/>
        <variable description="Will attempt to constrain the dialog to the boundaries of the&#10;viewport region.&lt;!--{&quot;outputType&quot;:&quot;java.util.HashMap&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="constrain2view" name="constrain2view"/>
        <variable description="A DOM node that is a direct descendant of a Widget's bounding box that&#10;houses its content.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="contentBox" name="contentBox"/>
        <variable description="CSS class to be automatically added to the &lt;code&gt;boundingBox&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="cssClass" name="cssClass"/>
        <variable description="Invoke the &lt;a href=&quot;Dialog.html#method_destroy&quot;&gt;destroy&lt;/a&gt;&#10;method when the dialog is closed (i.e., remove the Dialog&#10;&lt;code&gt;boundingBox&lt;/code&gt; from the body, purge events etc).&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="destroyOnClose" name="destroyOnClose"/>
        <variable description="Flag indicating whether or not this object&#10;has been through the destroy lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="destroyed" name="destroyed"/>
        <variable description="Boolean indicating if the Widget should be disabled. The disabled implementation&#10;is left to the specific classes extending widget.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="disabled" name="disabled"/>
        <variable description="Drag configuration.&lt;!--{&quot;outputType&quot;:&quot;java.util.HashMap&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="dragConfig" name="dragConfig"/>
        <variable description="Stores the Drag instance for the &lt;code&gt;A.DD.Drag&lt;/code&gt; used by&#10;this Dialog.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="dragInstance" name="dragInstance"/>
        <variable description="Boolean specifying if the Panel should be draggable.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="draggable" name="draggable"/>
        <variable description="The section (WidgetStdMod.HEADER, WidgetStdMod.BODY or WidgetStdMod.FOOTER) which should be resized to fill the height of the standard module, when a&#10;height is set on the Widget. If a height is not set on the widget, then all sections are sized based on&#10;their content.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="fillHeight" name="fillHeight"/>
        <variable description="Boolean indicating if the Widget, or one of its descendants,&#10;has focus.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="focused" name="focused"/>
        <variable description="The content to be added to the footer section. This will replace any existing content&#10;in the footer. If you want to append, or insert new content, use the &lt;a href=&quot;#method_setStdModContent&quot;&gt;setStdModContent&lt;/a&gt; method.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="footerContent" name="footerContent"/>
        <variable description="The content to be added to the header section. This will replace any existing content&#10;in the header. If you want to append, or insert new content, use the &lt;a href=&quot;#method_setStdModContent&quot;&gt;setStdModContent&lt;/a&gt; method.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="headerContent" name="headerContent"/>
        <variable description="String with units, or number, representing the height of the Widget. If a number is provided,&#10;the default unit, defined by the Widgets DEF_UNIT, property is used.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="height" name="height"/>
        <variable description="css class added to hide the &lt;code&gt;boundingBox&lt;/code&gt; when&#10;&lt;a href=&quot;Component.html#config_visible&quot;&gt;visible&lt;/a&gt; is set to&#10;&lt;code&gt;false&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="hideClass" name="hideClass"/>
        <variable description="&lt;p&gt;Array of &lt;a href=&quot;ButtonItem.html&quot;&gt;ButtonItem&lt;/a&gt; configuration objects to be displayed as icons&#10;on the Panel title.&lt;/p&gt;&#10;Example:&#10;&lt;pre&gt;&lt;code&gt;icons: [ { icon: 'close', id: 'close' } ]&lt;/code&gt;&lt;/pre&gt;&#10;For more information how to use this option see&#10;&lt;a href=&quot;ButtonItem.html&quot;&gt;ButtonItem&lt;/a&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.util.ArrayList&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="icons" name="icons"/>
        <variable description="&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="dialogId" name="dialogId"/>
        <variable description="Flag indicating whether or not this object&#10;has been through the init lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="initialized" name="initialized"/>
        <variable description="The default locale for the widget. NOTE: Using get/set on the &quot;strings&quot; attribute will&#10;return/set strings for this locale.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="locale" name="locale"/>
        <variable description="True if the Panel should be displayed in a modal fashion,&#10;automatically creating a transparent mask over the document that&#10;will not be removed until the Dialog is dismissed. Uses&#10;&lt;a href=&quot;OverlayMask.html&quot;&gt;OverlayMask&lt;/a&gt;.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="modal" name="modal"/>
        <variable description="If set to true, and WidgetPositionAlign is also added to the Widget,&#10;constrained positioning will attempt to prevent the widget's bounding box from overlapping&#10;the element to which it has been aligned, by flipping the orientation of the alignment&#10;for corner based alignments&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="preventOverlap" name="preventOverlap"/>
        <variable description="If &lt;code&gt;true&lt;/code&gt; the render phase will be autimatically invoked&#10;preventing the &lt;code&gt;.render()&lt;/code&gt; manual call.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="render" name="render"/>
        <variable description="Flag indicating whether or not this Widget&#10;has been through the render lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="rendered" name="rendered"/>
        <variable description="Boolean specifying if the Panel should be resizable.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="resizable" name="resizable"/>
        <variable description="Resize configuration.&lt;!--{&quot;outputType&quot;:&quot;java.util.HashMap&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="resizableConfig" name="resizableConfig"/>
        <variable description="Stores the Resize instance for the &lt;code&gt;A.Resize&lt;/code&gt; used by&#10;this Dialog.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="resizableInstance" name="resizableInstance"/>
        <variable description="Boolean flag to indicate whether or not a shim should be added to the Widgets&#10;boundingBox, to protect it from select box bleedthrough.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="shim" name="shim"/>
        <variable description="The DOM node to parse for configuration values, passed to the Widget's HTML_PARSER definition&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="srcNode" name="srcNode"/>
        <variable description="If &lt;code&gt;true&lt;/code&gt; give stacking habilities to the Dialog.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="stack" name="stack"/>
        <variable description="Collection of strings used to label elements of the Dialog's UI.&lt;!--{&quot;outputType&quot;:&quot;java.util.HashMap&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="strings" name="strings"/>
        <variable description="Number (between -32767 to 32767) indicating the widget's&#10;position in the default tab flow.  The value is used to set the&#10;&quot;tabIndex&quot; attribute on the widget's bounding box.  Negative values allow&#10;the widget to receive DOM focus programmatically (by calling the focus&#10;method), while being removed from the default tab flow.  A value of&#10;null removes the &quot;tabIndex&quot; attribute from the widget's bounding box.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="tabIndex" name="tabIndex"/>
        <variable description="The title to be displayed on the Panel.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="title" name="title"/>
        <variable description="True if Panel should use ARIA plugin&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="useARIA" name="useARIA"/>
        <variable description="Boolean indicating weather or not the Widget is visible.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="visible" name="visible"/>
        <variable description="String with units, or number, representing the width of the Widget. If a number is provided,&#10;the default unit, defined by the Widgets DEF_UNIT, property is used.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="width" name="width"/>
        <variable description="Page X co-ordinate for the widget. This attribute acts as a facade for the&#10;xy attribute. Changes in position can be monitored by listening for xyChange events.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="x" name="x"/>
        <variable description="Page XY co-ordinate pair for the widget.&lt;!--{&quot;outputType&quot;:&quot;java.util.ArrayList&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="xy" name="xy"/>
        <variable description="Page Y co-ordinate for the widget. This attribute acts as a facade for the&#10;xy attribute. Changes in position can be monitored by listening for xyChange events.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="y" name="y"/>
        <variable description="The z-index to apply to the Widgets boundingBox. Non-numerical values for&#10;zIndex will be converted to 0&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="zIndex" name="zIndex"/>
        <variable description="Fires when the value for the configuration attribute 'align' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterAlignChange" name="afterAlignChange"/>
        <variable description="Fires when the value for the configuration attribute 'bodyContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterBodyContentChange" name="afterBodyContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'boundingBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterBoundingBoxChange" name="afterBoundingBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'buttons' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterButtonsChange" name="afterButtonsChange"/>
        <variable description="Fires when the value for the configuration attribute 'centered' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCenteredChange" name="afterCenteredChange"/>
        <variable description="Fires when the value for the configuration attribute 'close' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCloseChange" name="afterCloseChange"/>
        <variable description="Fires when the value for the configuration attribute 'collapsed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCollapsedChange" name="afterCollapsedChange"/>
        <variable description="Fires when the value for the configuration attribute 'collapsible' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCollapsibleChange" name="afterCollapsibleChange"/>
        <variable description="Fires when the value for the configuration attribute 'constrain2view' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterConstrain2viewChange" name="afterConstrain2viewChange"/>
        <variable description="Fires when the value for the configuration attribute 'constrain' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterConstrainChange" name="afterConstrainChange"/>
        <variable description="Fires when the value for the configuration attribute 'contentBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterContentBoxChange" name="afterContentBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'cssClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCssClassChange" name="afterCssClassChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroy" name="afterDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyOnClose' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroyOnCloseChange" name="afterDestroyOnCloseChange"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroyedChange" name="afterDestroyedChange"/>
        <variable description="Fires when the value for the configuration attribute 'disabled' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDisabledChange" name="afterDisabledChange"/>
        <variable description="Fires when the value for the configuration attribute 'dragConfig' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDragConfigChange" name="afterDragConfigChange"/>
        <variable description="Fires when the value for the configuration attribute 'dragInstance' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDragInstanceChange" name="afterDragInstanceChange"/>
        <variable description="Fires when the value for the configuration attribute 'draggable' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDraggableChange" name="afterDraggableChange"/>
        <variable description="Fires when the value for the configuration attribute 'fillHeight' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterFillHeightChange" name="afterFillHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'focused' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterFocusedChange" name="afterFocusedChange"/>
        <variable description="Fires when the value for the configuration attribute 'footerContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterFooterContentChange" name="afterFooterContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'headerContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHeaderContentChange" name="afterHeaderContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'height' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHeightChange" name="afterHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHideClassChange" name="afterHideClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'icons' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterIconsChange" name="afterIconsChange"/>
        <variable description="Fires when the value for the configuration attribute 'id' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterIdChange" name="afterIdChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInit" name="afterInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInitializedChange" name="afterInitializedChange"/>
        <variable description="Fires when the value for the configuration attribute 'locale' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterLocaleChange" name="afterLocaleChange"/>
        <variable description="Fires when the value for the configuration attribute 'modal' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterModalChange" name="afterModalChange"/>
        <variable description="Fires when the value for the configuration attribute 'preventOverlap' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterPreventOverlapChange" name="afterPreventOverlapChange"/>
        <variable description="Fires when the value for the configuration attribute 'render' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRenderChange" name="afterRenderChange"/>
        <variable description="Fires when the value for the configuration attribute 'rendered' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRenderedChange" name="afterRenderedChange"/>
        <variable description="Fires when the value for the configuration attribute 'resizable' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterResizableChange" name="afterResizableChange"/>
        <variable description="Fires when the value for the configuration attribute 'resizableConfig' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterResizableConfigChange" name="afterResizableConfigChange"/>
        <variable description="Fires when the value for the configuration attribute 'resizableInstance' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterResizableInstanceChange" name="afterResizableInstanceChange"/>
        <variable description="Fires when the value for the configuration attribute 'shim' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterShimChange" name="afterShimChange"/>
        <variable description="Fires when the value for the configuration attribute 'srcNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterSrcNodeChange" name="afterSrcNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'stack' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterStackChange" name="afterStackChange"/>
        <variable description="Fires when the value for the configuration attribute 'strings' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterStringsChange" name="afterStringsChange"/>
        <variable description="Fires when the value for the configuration attribute 'tabIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTabIndexChange" name="afterTabIndexChange"/>
        <variable description="Fires when the value for the configuration attribute 'title' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTitleChange" name="afterTitleChange"/>
        <variable description="Fires when the value for the configuration attribute 'useARIA' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterUseARIAChange" name="afterUseARIAChange"/>
        <variable description="Fires when the value for the configuration attribute 'visible' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterVisibleChange" name="afterVisibleChange"/>
        <variable description="Notification event, which widget implementations can fire, when&#10;they change the content of the widget. This event has no default&#10;behavior and cannot be prevented, so the &quot;on&quot; or &quot;after&quot;&#10;moments are effectively equivalent (with on listeners being invoked before&#10;after listeners).&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterContentUpdate" name="afterContentUpdate"/>
        <variable description="Lifecycle event for the render phase, fired prior to rendering the UI&#10;for the widget (prior to invoking the widget's renderer method).&#10;&lt;p&gt;&#10;Subscribers to the &quot;on&quot; moment of this event, will be notified&#10;before the widget is rendered.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after rendering is complete.&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRender" name="afterRender"/>
        <variable description="Fires when the value for the configuration attribute 'width' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterWidthChange" name="afterWidthChange"/>
        <variable description="Fires when the value for the configuration attribute 'x' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterXChange" name="afterXChange"/>
        <variable description="Fires when the value for the configuration attribute 'xy' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterXyChange" name="afterXyChange"/>
        <variable description="Fires when the value for the configuration attribute 'y' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterYChange" name="afterYChange"/>
        <variable description="Fires when the value for the configuration attribute 'zIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterZIndexChange" name="afterZIndexChange"/>
        <variable description="Fires when the value for the configuration attribute 'align' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onAlignChange" name="onAlignChange"/>
        <variable description="Fires when the value for the configuration attribute 'bodyContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onBodyContentChange" name="onBodyContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'boundingBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onBoundingBoxChange" name="onBoundingBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'buttons' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onButtonsChange" name="onButtonsChange"/>
        <variable description="Fires when the value for the configuration attribute 'centered' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCenteredChange" name="onCenteredChange"/>
        <variable description="Fires when the value for the configuration attribute 'close' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCloseChange" name="onCloseChange"/>
        <variable description="Fires when the value for the configuration attribute 'collapsed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCollapsedChange" name="onCollapsedChange"/>
        <variable description="Fires when the value for the configuration attribute 'collapsible' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCollapsibleChange" name="onCollapsibleChange"/>
        <variable description="Fires when the value for the configuration attribute 'constrain2view' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onConstrain2viewChange" name="onConstrain2viewChange"/>
        <variable description="Fires when the value for the configuration attribute 'constrain' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onConstrainChange" name="onConstrainChange"/>
        <variable description="Fires when the value for the configuration attribute 'contentBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onContentBoxChange" name="onContentBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'cssClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCssClassChange" name="onCssClassChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroy" name="onDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyOnClose' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroyOnCloseChange" name="onDestroyOnCloseChange"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroyedChange" name="onDestroyedChange"/>
        <variable description="Fires when the value for the configuration attribute 'disabled' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDisabledChange" name="onDisabledChange"/>
        <variable description="Fires when the value for the configuration attribute 'dragConfig' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDragConfigChange" name="onDragConfigChange"/>
        <variable description="Fires when the value for the configuration attribute 'dragInstance' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDragInstanceChange" name="onDragInstanceChange"/>
        <variable description="Fires when the value for the configuration attribute 'draggable' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDraggableChange" name="onDraggableChange"/>
        <variable description="Fires when the value for the configuration attribute 'fillHeight' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onFillHeightChange" name="onFillHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'focused' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onFocusedChange" name="onFocusedChange"/>
        <variable description="Fires when the value for the configuration attribute 'footerContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onFooterContentChange" name="onFooterContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'headerContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHeaderContentChange" name="onHeaderContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'height' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHeightChange" name="onHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHideClassChange" name="onHideClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'icons' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onIconsChange" name="onIconsChange"/>
        <variable description="Fires when the value for the configuration attribute 'id' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onIdChange" name="onIdChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInit" name="onInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInitializedChange" name="onInitializedChange"/>
        <variable description="Fires when the value for the configuration attribute 'locale' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onLocaleChange" name="onLocaleChange"/>
        <variable description="Fires when the value for the configuration attribute 'modal' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onModalChange" name="onModalChange"/>
        <variable description="Fires when the value for the configuration attribute 'preventOverlap' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onPreventOverlapChange" name="onPreventOverlapChange"/>
        <variable description="Fires when the value for the configuration attribute 'render' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRenderChange" name="onRenderChange"/>
        <variable description="Fires when the value for the configuration attribute 'rendered' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRenderedChange" name="onRenderedChange"/>
        <variable description="Fires when the value for the configuration attribute 'resizable' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onResizableChange" name="onResizableChange"/>
        <variable description="Fires when the value for the configuration attribute 'resizableConfig' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onResizableConfigChange" name="onResizableConfigChange"/>
        <variable description="Fires when the value for the configuration attribute 'resizableInstance' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onResizableInstanceChange" name="onResizableInstanceChange"/>
        <variable description="Fires when the value for the configuration attribute 'shim' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onShimChange" name="onShimChange"/>
        <variable description="Fires when the value for the configuration attribute 'srcNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onSrcNodeChange" name="onSrcNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'stack' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onStackChange" name="onStackChange"/>
        <variable description="Fires when the value for the configuration attribute 'strings' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onStringsChange" name="onStringsChange"/>
        <variable description="Fires when the value for the configuration attribute 'tabIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTabIndexChange" name="onTabIndexChange"/>
        <variable description="Fires when the value for the configuration attribute 'title' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTitleChange" name="onTitleChange"/>
        <variable description="Fires when the value for the configuration attribute 'useARIA' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onUseARIAChange" name="onUseARIAChange"/>
        <variable description="Fires when the value for the configuration attribute 'visible' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onVisibleChange" name="onVisibleChange"/>
        <variable description="Notification event, which widget implementations can fire, when&#10;they change the content of the widget. This event has no default&#10;behavior and cannot be prevented, so the &quot;on&quot; or &quot;after&quot;&#10;moments are effectively equivalent (with on listeners being invoked before&#10;after listeners).&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onContentUpdate" name="onContentUpdate"/>
        <variable description="Lifecycle event for the render phase, fired prior to rendering the UI&#10;for the widget (prior to invoking the widget's renderer method).&#10;&lt;p&gt;&#10;Subscribers to the &quot;on&quot; moment of this event, will be notified&#10;before the widget is rendered.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after rendering is complete.&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRender" name="onRender"/>
        <variable description="Fires when the value for the configuration attribute 'width' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onWidthChange" name="onWidthChange"/>
        <variable description="Fires when the value for the configuration attribute 'x' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onXChange" name="onXChange"/>
        <variable description="Fires when the value for the configuration attribute 'xy' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onXyChange" name="onXyChange"/>
        <variable description="Fires when the value for the configuration attribute 'y' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onYChange" name="onYChange"/>
        <variable description="Fires when the value for the configuration attribute 'zIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onZIndexChange" name="onZIndexChange"/>
      </item>
      <item class="com.liferay.ide.taglib.ui.snippets.AlloyTagSnippetInsertion" description="editable" id="com.liferay.ide.ui.snippets.item.editable" label="editable" smallicon="icons/snippets/tag-generic.gif">
        <content>
          &lt;alloy:editable${boundingBox}${cancelButton}${contentBox}${contentText}${cssClass}${destroyed}${disabled}${eventType}${focused}${formatInput}${formatOutput}${height}${hideClass}${icons}${editableId}${initialized}${inputType}${locale}${node}${render}${renderTo}${rendered}${saveButton}${srcNode}${strings}${tabIndex}${useARIA}${visible}${width}${afterBoundingBoxChange}${afterCancel}${afterCancelButtonChange}${afterContentBoxChange}${afterContentTextChange}${afterCssClassChange}${afterDestroy}${afterDestroyedChange}${afterDisabledChange}${afterEventTypeChange}${afterFocusedChange}${afterFormatInputChange}${afterFormatOutputChange}${afterHeightChange}${afterHideClassChange}${afterIconsChange}${afterIdChange}${afterInit}${afterInitializedChange}${afterInputTypeChange}${afterLocaleChange}${afterNodeChange}${afterRenderChange}${afterRenderToChange}${afterRenderedChange}${afterSave}${afterSaveButtonChange}${afterSrcNodeChange}${afterStartEditing}${afterStopEditing}${afterStringsChange}${afterTabIndexChange}${afterUseARIAChange}${afterVisibleChange}${afterContentUpdate}${afterRender}${afterWidthChange}${onBoundingBoxChange}${onCancel}${onCancelButtonChange}${onContentBoxChange}${onContentTextChange}${onCssClassChange}${onDestroy}${onDestroyedChange}${onDisabledChange}${onEventTypeChange}${onFocusedChange}${onFormatInputChange}${onFormatOutputChange}${onHeightChange}${onHideClassChange}${onIconsChange}${onIdChange}${onInit}${onInitializedChange}${onInputTypeChange}${onLocaleChange}${onNodeChange}${onRenderChange}${onRenderToChange}${onRenderedChange}${onSave}${onSaveButtonChange}${onSrcNodeChange}${onStartEditing}${onStopEditing}${onStringsChange}${onTabIndexChange}${onUseARIAChange}${onVisibleChange}${onContentUpdate}${onRender}${onWidthChange}&gt;&lt;/alloy:editable&gt;
        </content>
        <variable description="The outermost DOM node for the Widget, used for sizing and positioning&#10;of a Widget as well as a containing element for any decorator elements used&#10;for skinning.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="boundingBox" name="boundingBox"/>
        <variable description="&lt;a href=&quot;ButtonItem.html&quot;&gt;ButtonItem&lt;/a&gt; constructor Object for the&#10;cancelButton.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="cancelButton" name="cancelButton"/>
        <variable description="A DOM node that is a direct descendant of a Widget's bounding box that&#10;houses its content.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="contentBox" name="contentBox"/>
        <variable description="Content text.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="contentText" name="contentText"/>
        <variable description="CSS class to be automatically added to the &lt;code&gt;boundingBox&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="cssClass" name="cssClass"/>
        <variable description="Flag indicating whether or not this object&#10;has been through the destroy lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="destroyed" name="destroyed"/>
        <variable description="Boolean indicating if the Widget should be disabled. The disabled implementation&#10;is left to the specific classes extending widget.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="disabled" name="disabled"/>
        <variable description="Event type to initialize the editable.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="eventType" name="eventType"/>
        <variable description="Boolean indicating if the Widget, or one of its descendants,&#10;has focus.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="focused" name="focused"/>
        <variable description="Function to format the input text displayed on the input.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="formatInput" name="formatInput"/>
        <variable description="Function to format the output text displayed on the input.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="formatOutput" name="formatOutput"/>
        <variable description="String with units, or number, representing the height of the Widget. If a number is provided,&#10;the default unit, defined by the Widgets DEF_UNIT, property is used.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="height" name="height"/>
        <variable description="css class added to hide the &lt;code&gt;boundingBox&lt;/code&gt; when&#10;&lt;a href=&quot;Component.html#config_visible&quot;&gt;visible&lt;/a&gt; is set to&#10;&lt;code&gt;false&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="hideClass" name="hideClass"/>
        <variable description="Array with icons for the &lt;a href=&quot;Toolbar.html&quot;&gt;Toolbar&lt;/a&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.util.ArrayList&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="icons" name="icons"/>
        <variable description="&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="editableId" name="editableId"/>
        <variable description="Flag indicating whether or not this object&#10;has been through the init lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="initialized" name="initialized"/>
        <variable description="Type of the input used to edit the &lt;a&#10;href=&quot;Editable.html#config_node&quot;&gt;node&lt;/a&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="inputType" name="inputType"/>
        <variable description="The default locale for the widget. NOTE: Using get/set on the &quot;strings&quot; attribute will&#10;return/set strings for this locale.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="locale" name="locale"/>
        <variable description="Node to setup the editable.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="node" name="node"/>
        <variable description="If &lt;code&gt;true&lt;/code&gt; the render phase will be autimatically invoked&#10;preventing the &lt;code&gt;.render()&lt;/code&gt; manual call.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="render" name="render"/>
        <variable description="Node to render the editable.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="renderTo" name="renderTo"/>
        <variable description="Flag indicating whether or not this Widget&#10;has been through the render lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="rendered" name="rendered"/>
        <variable description="&lt;a href=&quot;ButtonItem.html&quot;&gt;ButtonItem&lt;/a&gt; constructor Object for the&#10;saveButton.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="saveButton" name="saveButton"/>
        <variable description="The DOM node to parse for configuration values, passed to the Widget's HTML_PARSER definition&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="srcNode" name="srcNode"/>
        <variable description="Collection of strings used to label elements of the Widget's UI.&lt;!--{&quot;outputType&quot;:&quot;java.util.HashMap&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="strings" name="strings"/>
        <variable description="Number (between -32767 to 32767) indicating the widget's&#10;position in the default tab flow.  The value is used to set the&#10;&quot;tabIndex&quot; attribute on the widget's bounding box.  Negative values allow&#10;the widget to receive DOM focus programmatically (by calling the focus&#10;method), while being removed from the default tab flow.  A value of&#10;null removes the &quot;tabIndex&quot; attribute from the widget's bounding box.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="tabIndex" name="tabIndex"/>
        <variable description="Boolean indicating if use of the WAI-ARIA Roles and States should be&#10;enabled for the Widget.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="useARIA" name="useARIA"/>
        <variable description="Boolean indicating weather or not the Widget is visible.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="visible" name="visible"/>
        <variable description="String with units, or number, representing the width of the Widget. If a number is provided,&#10;the default unit, defined by the Widgets DEF_UNIT, property is used.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="width" name="width"/>
        <variable description="Fires when the value for the configuration attribute 'boundingBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterBoundingBoxChange" name="afterBoundingBoxChange"/>
        <variable description="Handles the cancel event.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCancel" name="afterCancel"/>
        <variable description="Fires when the value for the configuration attribute 'cancelButton' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCancelButtonChange" name="afterCancelButtonChange"/>
        <variable description="Fires when the value for the configuration attribute 'contentBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterContentBoxChange" name="afterContentBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'contentText' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterContentTextChange" name="afterContentTextChange"/>
        <variable description="Fires when the value for the configuration attribute 'cssClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCssClassChange" name="afterCssClassChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroy" name="afterDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroyedChange" name="afterDestroyedChange"/>
        <variable description="Fires when the value for the configuration attribute 'disabled' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDisabledChange" name="afterDisabledChange"/>
        <variable description="Fires when the value for the configuration attribute 'eventType' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterEventTypeChange" name="afterEventTypeChange"/>
        <variable description="Fires when the value for the configuration attribute 'focused' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterFocusedChange" name="afterFocusedChange"/>
        <variable description="Fires when the value for the configuration attribute 'formatInput' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterFormatInputChange" name="afterFormatInputChange"/>
        <variable description="Fires when the value for the configuration attribute 'formatOutput' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterFormatOutputChange" name="afterFormatOutputChange"/>
        <variable description="Fires when the value for the configuration attribute 'height' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHeightChange" name="afterHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHideClassChange" name="afterHideClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'icons' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterIconsChange" name="afterIconsChange"/>
        <variable description="Fires when the value for the configuration attribute 'id' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterIdChange" name="afterIdChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInit" name="afterInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInitializedChange" name="afterInitializedChange"/>
        <variable description="Fires when the value for the configuration attribute 'inputType' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInputTypeChange" name="afterInputTypeChange"/>
        <variable description="Fires when the value for the configuration attribute 'locale' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterLocaleChange" name="afterLocaleChange"/>
        <variable description="Fires when the value for the configuration attribute 'node' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterNodeChange" name="afterNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'render' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRenderChange" name="afterRenderChange"/>
        <variable description="Fires when the value for the configuration attribute 'renderTo' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRenderToChange" name="afterRenderToChange"/>
        <variable description="Fires when the value for the configuration attribute 'rendered' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRenderedChange" name="afterRenderedChange"/>
        <variable description="Handles the save event.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterSave" name="afterSave"/>
        <variable description="Fires when the value for the configuration attribute 'saveButton' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterSaveButtonChange" name="afterSaveButtonChange"/>
        <variable description="Fires when the value for the configuration attribute 'srcNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterSrcNodeChange" name="afterSrcNodeChange"/>
        <variable description="Handles the startEditing event.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterStartEditing" name="afterStartEditing"/>
        <variable description="Handles the stopEditing event.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterStopEditing" name="afterStopEditing"/>
        <variable description="Fires when the value for the configuration attribute 'strings' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterStringsChange" name="afterStringsChange"/>
        <variable description="Fires when the value for the configuration attribute 'tabIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTabIndexChange" name="afterTabIndexChange"/>
        <variable description="Fires when the value for the configuration attribute 'useARIA' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterUseARIAChange" name="afterUseARIAChange"/>
        <variable description="Fires when the value for the configuration attribute 'visible' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterVisibleChange" name="afterVisibleChange"/>
        <variable description="Notification event, which widget implementations can fire, when&#10;they change the content of the widget. This event has no default&#10;behavior and cannot be prevented, so the &quot;on&quot; or &quot;after&quot;&#10;moments are effectively equivalent (with on listeners being invoked before&#10;after listeners).&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterContentUpdate" name="afterContentUpdate"/>
        <variable description="Lifecycle event for the render phase, fired prior to rendering the UI&#10;for the widget (prior to invoking the widget's renderer method).&#10;&lt;p&gt;&#10;Subscribers to the &quot;on&quot; moment of this event, will be notified&#10;before the widget is rendered.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after rendering is complete.&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRender" name="afterRender"/>
        <variable description="Fires when the value for the configuration attribute 'width' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterWidthChange" name="afterWidthChange"/>
        <variable description="Fires when the value for the configuration attribute 'boundingBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onBoundingBoxChange" name="onBoundingBoxChange"/>
        <variable description="Handles the cancel event.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCancel" name="onCancel"/>
        <variable description="Fires when the value for the configuration attribute 'cancelButton' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCancelButtonChange" name="onCancelButtonChange"/>
        <variable description="Fires when the value for the configuration attribute 'contentBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onContentBoxChange" name="onContentBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'contentText' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onContentTextChange" name="onContentTextChange"/>
        <variable description="Fires when the value for the configuration attribute 'cssClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCssClassChange" name="onCssClassChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroy" name="onDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroyedChange" name="onDestroyedChange"/>
        <variable description="Fires when the value for the configuration attribute 'disabled' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDisabledChange" name="onDisabledChange"/>
        <variable description="Fires when the value for the configuration attribute 'eventType' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onEventTypeChange" name="onEventTypeChange"/>
        <variable description="Fires when the value for the configuration attribute 'focused' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onFocusedChange" name="onFocusedChange"/>
        <variable description="Fires when the value for the configuration attribute 'formatInput' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onFormatInputChange" name="onFormatInputChange"/>
        <variable description="Fires when the value for the configuration attribute 'formatOutput' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onFormatOutputChange" name="onFormatOutputChange"/>
        <variable description="Fires when the value for the configuration attribute 'height' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHeightChange" name="onHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHideClassChange" name="onHideClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'icons' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onIconsChange" name="onIconsChange"/>
        <variable description="Fires when the value for the configuration attribute 'id' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onIdChange" name="onIdChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInit" name="onInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInitializedChange" name="onInitializedChange"/>
        <variable description="Fires when the value for the configuration attribute 'inputType' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInputTypeChange" name="onInputTypeChange"/>
        <variable description="Fires when the value for the configuration attribute 'locale' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onLocaleChange" name="onLocaleChange"/>
        <variable description="Fires when the value for the configuration attribute 'node' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onNodeChange" name="onNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'render' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRenderChange" name="onRenderChange"/>
        <variable description="Fires when the value for the configuration attribute 'renderTo' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRenderToChange" name="onRenderToChange"/>
        <variable description="Fires when the value for the configuration attribute 'rendered' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRenderedChange" name="onRenderedChange"/>
        <variable description="Handles the save event.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onSave" name="onSave"/>
        <variable description="Fires when the value for the configuration attribute 'saveButton' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onSaveButtonChange" name="onSaveButtonChange"/>
        <variable description="Fires when the value for the configuration attribute 'srcNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onSrcNodeChange" name="onSrcNodeChange"/>
        <variable description="Handles the startEditing event.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onStartEditing" name="onStartEditing"/>
        <variable description="Handles the stopEditing event.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onStopEditing" name="onStopEditing"/>
        <variable description="Fires when the value for the configuration attribute 'strings' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onStringsChange" name="onStringsChange"/>
        <variable description="Fires when the value for the configuration attribute 'tabIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTabIndexChange" name="onTabIndexChange"/>
        <variable description="Fires when the value for the configuration attribute 'useARIA' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onUseARIAChange" name="onUseARIAChange"/>
        <variable description="Fires when the value for the configuration attribute 'visible' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onVisibleChange" name="onVisibleChange"/>
        <variable description="Notification event, which widget implementations can fire, when&#10;they change the content of the widget. This event has no default&#10;behavior and cannot be prevented, so the &quot;on&quot; or &quot;after&quot;&#10;moments are effectively equivalent (with on listeners being invoked before&#10;after listeners).&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onContentUpdate" name="onContentUpdate"/>
        <variable description="Lifecycle event for the render phase, fired prior to rendering the UI&#10;for the widget (prior to invoking the widget's renderer method).&#10;&lt;p&gt;&#10;Subscribers to the &quot;on&quot; moment of this event, will be notified&#10;before the widget is rendered.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after rendering is complete.&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRender" name="onRender"/>
        <variable description="Fires when the value for the configuration attribute 'width' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onWidthChange" name="onWidthChange"/>
      </item>
      <item class="com.liferay.ide.taglib.ui.snippets.AlloyTagSnippetInsertion" description="io-request" id="com.liferay.ide.ui.snippets.item.io-request" label="io-request" smallicon="icons/snippets/tag-generic.gif">
        <content>
          &lt;alloy:io-request${active}${arguments}${autoLoad}${cache}${cfg}${context}${data}${dataType}${destroyed}${form}${headers}${host}${initialized}${method}${responseData}${selector}${sync}${timeout}${transaction}${uri}${xdr}${afterActiveChange}${afterArgumentsChange}${afterAutoLoadChange}${afterCacheChange}${afterCfgChange}${afterContextChange}${afterDataChange}${afterDataTypeChange}${afterDestroy}${afterDestroyedChange}${afterFormChange}${afterHeadersChange}${afterHostChange}${afterInit}${afterInitializedChange}${afterComplete}${afterEnd}${afterFailure}${afterStart}${afterSuccess}${afterXdrReady}${afterMethodChange}${afterResponseDataChange}${afterSelectorChange}${afterSyncChange}${afterTimeoutChange}${afterTransactionChange}${afterUriChange}${afterXdrChange}${onActiveChange}${onArgumentsChange}${onAutoLoadChange}${onCacheChange}${onCfgChange}${onContextChange}${onDataChange}${onDataTypeChange}${onDestroy}${onDestroyedChange}${onFormChange}${onHeadersChange}${onHostChange}${onInit}${onInitializedChange}${onComplete}${onEnd}${onFailure}${onStart}${onSuccess}${onXdrReady}${onMethodChange}${onResponseDataChange}${onSelectorChange}${onSyncChange}${onTimeoutChange}${onTransactionChange}${onUriChange}${onXdrChange}&gt;&lt;/alloy:io-request&gt;
        </content>
        <variable description="Whether the transaction is active or not.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="active" name="active"/>
        <variable description="See &lt;a href=&quot;http://developer.yahoo.com/yui/3/io/#configuration&quot;&gt;IO&#10;Configuration&lt;/a&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.util.HashMap&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="arguments" name="arguments"/>
        <variable description="If &lt;code&gt;true&lt;/code&gt; invoke the&#10;&lt;a href=&quot;IORequest.html#method_start&quot;&gt;start&lt;/a&gt; method automatically,&#10;initializing the IO transaction.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="autoLoad" name="autoLoad"/>
        <variable description="If &lt;code&gt;false&lt;/code&gt; the current timestamp will be appended to the&#10;url, avoiding the url to be cached.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="cache" name="cache"/>
        <variable description="Object containing all the&#10;&lt;a href=&quot;io.html#configattributes&quot;&gt;IO Configuration Attributes&lt;/a&gt;.&#10;This Object is passed to the &lt;code&gt;A.io&lt;/code&gt; internally.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="cfg" name="cfg"/>
        <variable description="See &lt;a href=&quot;http://developer.yahoo.com/yui/3/io/#configuration&quot;&gt;IO&#10;Configuration&lt;/a&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.util.HashMap&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="context" name="context"/>
        <variable description="See &lt;a href=&quot;http://developer.yahoo.com/yui/3/io/#configuration&quot;&gt;IO&#10;Configuration&lt;/a&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.util.HashMap&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="data" name="data"/>
        <variable description="The type of the request (i.e., could be xml, json, javascript, text).&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="dataType" name="dataType"/>
        <variable description="Flag indicating whether or not this object&#10;has been through the destroy lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="destroyed" name="destroyed"/>
        <variable description="See &lt;a href=&quot;http://developer.yahoo.com/yui/3/io/#configuration&quot;&gt;IO&#10;Configuration&lt;/a&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.util.HashMap&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="form" name="form"/>
        <variable description="Set the correct ACCEPT header based on the dataType.&lt;!--{&quot;outputType&quot;:&quot;java.util.HashMap&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="headers" name="headers"/>
        <variable description="The plugin's host object.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="host" name="host"/>
        <variable description="Flag indicating whether or not this object&#10;has been through the init lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="initialized" name="initialized"/>
        <variable description="See &lt;a href=&quot;http://developer.yahoo.com/yui/3/io/#configuration&quot;&gt;IO&#10;Configuration&lt;/a&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="method" name="method"/>
        <variable description="This is a normalized attribute for the response data. It's useful&#10;to retrieve the correct type for the&#10;&lt;a href=&quot;IORequest.html#config_dataType&quot;&gt;dataType&lt;/a&gt; (i.e., in json&#10;requests the &lt;code&gt;responseData&lt;/code&gt;) is a JSONObject.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="responseData" name="responseData"/>
        <variable description="A selector to be used to query against the response of the&#10;request. Only works if the response is XML or HTML.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="selector" name="selector"/>
        <variable description="See &lt;a href=&quot;http://developer.yahoo.com/yui/3/io/#configuration&quot;&gt;IO&#10;Configuration&lt;/a&gt;.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="sync" name="sync"/>
        <variable description="See &lt;a href=&quot;http://developer.yahoo.com/yui/3/io/#configuration&quot;&gt;IO&#10;Configuration&lt;/a&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="timeout" name="timeout"/>
        <variable description="Stores the IO Object of the current transaction.&lt;!--{&quot;outputType&quot;:&quot;java.util.HashMap&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="transaction" name="transaction"/>
        <variable description="URI to be requested using AJAX.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="uri" name="uri"/>
        <variable description="See &lt;a href=&quot;http://developer.yahoo.com/yui/3/io/#configuration&quot;&gt;IO&#10;Configuration&lt;/a&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.util.HashMap&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="xdr" name="xdr"/>
        <variable description="Fires when the value for the configuration attribute 'active' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterActiveChange" name="afterActiveChange"/>
        <variable description="Fires when the value for the configuration attribute 'arguments' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterArgumentsChange" name="afterArgumentsChange"/>
        <variable description="Fires when the value for the configuration attribute 'autoLoad' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterAutoLoadChange" name="afterAutoLoadChange"/>
        <variable description="Fires when the value for the configuration attribute 'cache' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCacheChange" name="afterCacheChange"/>
        <variable description="Fires when the value for the configuration attribute 'cfg' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCfgChange" name="afterCfgChange"/>
        <variable description="Fires when the value for the configuration attribute 'context' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterContextChange" name="afterContextChange"/>
        <variable description="Fires when the value for the configuration attribute 'data' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDataChange" name="afterDataChange"/>
        <variable description="Fires when the value for the configuration attribute 'dataType' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDataTypeChange" name="afterDataTypeChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroy" name="afterDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroyedChange" name="afterDestroyedChange"/>
        <variable description="Fires when the value for the configuration attribute 'form' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterFormChange" name="afterFormChange"/>
        <variable description="Fires when the value for the configuration attribute 'headers' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHeadersChange" name="afterHeadersChange"/>
        <variable description="Fires when the value for the configuration attribute 'host' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHostChange" name="afterHostChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInit" name="afterInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInitializedChange" name="afterInitializedChange"/>
        <variable description="This event is fired by YUI.io when a transaction is complete.&#10;Response status and data are accessible, if available.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterComplete" name="afterComplete"/>
        <variable description="This event signifies the end of the transaction lifecycle.  The&#10;transaction transport is destroyed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterEnd" name="afterEnd"/>
        <variable description="This event is fired by YUI.io when a transaction is complete, and&#10;the HTTP status resolves to HTTP4xx, 5xx and above.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterFailure" name="afterFailure"/>
        <variable description="This event is fired by YUI.io when a transaction is initiated.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterStart" name="afterStart"/>
        <variable description="This event is fired by YUI.io when a transaction is complete, and&#10;the HTTP status resolves to HTTP2xx.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterSuccess" name="afterSuccess"/>
        <variable description="This event is fired by YUI.io when the specified transport is&#10;ready for use.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterXdrReady" name="afterXdrReady"/>
        <variable description="Fires when the value for the configuration attribute 'method' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterMethodChange" name="afterMethodChange"/>
        <variable description="Fires when the value for the configuration attribute 'responseData' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterResponseDataChange" name="afterResponseDataChange"/>
        <variable description="Fires when the value for the configuration attribute 'selector' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterSelectorChange" name="afterSelectorChange"/>
        <variable description="Fires when the value for the configuration attribute 'sync' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterSyncChange" name="afterSyncChange"/>
        <variable description="Fires when the value for the configuration attribute 'timeout' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTimeoutChange" name="afterTimeoutChange"/>
        <variable description="Fires when the value for the configuration attribute 'transaction' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTransactionChange" name="afterTransactionChange"/>
        <variable description="Fires when the value for the configuration attribute 'uri' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterUriChange" name="afterUriChange"/>
        <variable description="Fires when the value for the configuration attribute 'xdr' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterXdrChange" name="afterXdrChange"/>
        <variable description="Fires when the value for the configuration attribute 'active' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onActiveChange" name="onActiveChange"/>
        <variable description="Fires when the value for the configuration attribute 'arguments' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onArgumentsChange" name="onArgumentsChange"/>
        <variable description="Fires when the value for the configuration attribute 'autoLoad' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onAutoLoadChange" name="onAutoLoadChange"/>
        <variable description="Fires when the value for the configuration attribute 'cache' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCacheChange" name="onCacheChange"/>
        <variable description="Fires when the value for the configuration attribute 'cfg' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCfgChange" name="onCfgChange"/>
        <variable description="Fires when the value for the configuration attribute 'context' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onContextChange" name="onContextChange"/>
        <variable description="Fires when the value for the configuration attribute 'data' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDataChange" name="onDataChange"/>
        <variable description="Fires when the value for the configuration attribute 'dataType' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDataTypeChange" name="onDataTypeChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroy" name="onDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroyedChange" name="onDestroyedChange"/>
        <variable description="Fires when the value for the configuration attribute 'form' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onFormChange" name="onFormChange"/>
        <variable description="Fires when the value for the configuration attribute 'headers' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHeadersChange" name="onHeadersChange"/>
        <variable description="Fires when the value for the configuration attribute 'host' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHostChange" name="onHostChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInit" name="onInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInitializedChange" name="onInitializedChange"/>
        <variable description="This event is fired by YUI.io when a transaction is complete.&#10;Response status and data are accessible, if available.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onComplete" name="onComplete"/>
        <variable description="This event signifies the end of the transaction lifecycle.  The&#10;transaction transport is destroyed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onEnd" name="onEnd"/>
        <variable description="This event is fired by YUI.io when a transaction is complete, and&#10;the HTTP status resolves to HTTP4xx, 5xx and above.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onFailure" name="onFailure"/>
        <variable description="This event is fired by YUI.io when a transaction is initiated.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onStart" name="onStart"/>
        <variable description="This event is fired by YUI.io when a transaction is complete, and&#10;the HTTP status resolves to HTTP2xx.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onSuccess" name="onSuccess"/>
        <variable description="This event is fired by YUI.io when the specified transport is&#10;ready for use.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onXdrReady" name="onXdrReady"/>
        <variable description="Fires when the value for the configuration attribute 'method' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onMethodChange" name="onMethodChange"/>
        <variable description="Fires when the value for the configuration attribute 'responseData' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onResponseDataChange" name="onResponseDataChange"/>
        <variable description="Fires when the value for the configuration attribute 'selector' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onSelectorChange" name="onSelectorChange"/>
        <variable description="Fires when the value for the configuration attribute 'sync' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onSyncChange" name="onSyncChange"/>
        <variable description="Fires when the value for the configuration attribute 'timeout' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTimeoutChange" name="onTimeoutChange"/>
        <variable description="Fires when the value for the configuration attribute 'transaction' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTransactionChange" name="onTransactionChange"/>
        <variable description="Fires when the value for the configuration attribute 'uri' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onUriChange" name="onUriChange"/>
        <variable description="Fires when the value for the configuration attribute 'xdr' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onXdrChange" name="onXdrChange"/>
      </item>
      <item class="com.liferay.ide.taglib.ui.snippets.AlloyTagSnippetInsertion" description="image-gallery" id="com.liferay.ide.ui.snippets.item.image-gallery" label="image-gallery" smallicon="icons/snippets/tag-generic.gif">
        <content>
          &lt;alloy:image-gallery${align}${anim}${arrowLeftEl}${arrowRightEl}${autoPlay}${imagegalleryBodyContent}${boundingBox}${caption}${captionEl}${captionFromTitle}${centered}${closeEl}${constrain}${contentBox}${cssClass}${currentIndex}${delay}${destroyed}${disabled}${fillHeight}${focused}${footerContent}${headerContent}${height}${hideClass}${imagegalleryId}${image}${imageAnim}${infoEl}${infoTemplate}${initialized}${links}${loader}${loading}${loadingEl}${locale}${maxHeight}${maxWidth}${modal}${paginator}${paginatorEl}${paginatorInstance}${paused}${pausedLabel}${playing}${playingLabel}${preloadAllImages}${preventOverlap}${render}${rendered}${repeat}${shim}${showArrows}${showClose}${showPlayer}${srcNode}${strings}${tabIndex}${toolbar}${totalLinks}${useARIA}${useOriginalImage}${visible}${width}${x}${xy}${y}${zIndex}${afterAlignChange}${afterAnim}${afterAnimChange}${afterArrowLeftElChange}${afterArrowRightElChange}${afterAutoPlayChange}${afterBodyContentChange}${afterBoundingBoxChange}${afterCaptionChange}${afterCaptionElChange}${afterCaptionFromTitleChange}${afterCenteredChange}${afterCloseElChange}${afterConstrainChange}${afterContentBoxChange}${afterCssClassChange}${afterCurrentIndexChange}${afterDelayChange}${afterDestroy}${afterDestroyedChange}${afterDisabledChange}${afterFillHeightChange}${afterFocusedChange}${afterFooterContentChange}${afterHeaderContentChange}${afterHeightChange}${afterHideClassChange}${afterIdChange}${afterImageAnimChange}${afterImageChange}${afterInfoElChange}${afterInfoTemplateChange}${afterInit}${afterInitializedChange}${afterLinksChange}${afterLoad}${afterLoaderChange}${afterLoadingChange}${afterLoadingElChange}${afterLocaleChange}${afterMaxHeightChange}${afterMaxWidthChange}${afterModalChange}${afterPaginatorChange}${afterPaginatorElChange}${afterPaginatorInstanceChange}${afterPausedChange}${afterPausedLabelChange}${afterPlayingChange}${afterPlayingLabelChange}${afterPreloadAllImagesChange}${afterPreventOverlapChange}${afterRenderChange}${afterRenderedChange}${afterRepeatChange}${afterRequest}${afterShimChange}${afterShowArrowsChange}${afterShowCloseChange}${afterShowPlayerChange}${afterSrcNodeChange}${afterStringsChange}${afterTabIndexChange}${afterToolbarChange}${afterTotalLinksChange}${afterUseARIAChange}${afterUseOriginalImageChange}${afterVisibleChange}${afterContentUpdate}${afterRender}${afterWidthChange}${afterXChange}${afterXyChange}${afterYChange}${afterZIndexChange}${onAlignChange}${onAnim}${onAnimChange}${onArrowLeftElChange}${onArrowRightElChange}${onAutoPlayChange}${onBodyContentChange}${onBoundingBoxChange}${onCaptionChange}${onCaptionElChange}${onCaptionFromTitleChange}${onCenteredChange}${onCloseElChange}${onConstrainChange}${onContentBoxChange}${onCssClassChange}${onCurrentIndexChange}${onDelayChange}${onDestroy}${onDestroyedChange}${onDisabledChange}${onFillHeightChange}${onFocusedChange}${onFooterContentChange}${onHeaderContentChange}${onHeightChange}${onHideClassChange}${onIdChange}${onImageAnimChange}${onImageChange}${onInfoElChange}${onInfoTemplateChange}${onInit}${onInitializedChange}${onLinksChange}${onLoad}${onLoaderChange}${onLoadingChange}${onLoadingElChange}${onLocaleChange}${onMaxHeightChange}${onMaxWidthChange}${onModalChange}${onPaginatorChange}${onPaginatorElChange}${onPaginatorInstanceChange}${onPausedChange}${onPausedLabelChange}${onPlayingChange}${onPlayingLabelChange}${onPreloadAllImagesChange}${onPreventOverlapChange}${onRenderChange}${onRenderedChange}${onRepeatChange}${onRequest}${onShimChange}${onShowArrowsChange}${onShowCloseChange}${onShowPlayerChange}${onSrcNodeChange}${onStringsChange}${onTabIndexChange}${onToolbarChange}${onTotalLinksChange}${onUseARIAChange}${onUseOriginalImageChange}${onVisibleChange}${onContentUpdate}${onRender}${onWidthChange}${onXChange}${onXyChange}${onYChange}${onZIndexChange}&gt;&lt;/alloy:image-gallery&gt;
        </content>
        <variable description="&lt;!--{&quot;outputType&quot;:&quot;java.util.HashMap&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="align" name="align"/>
        <variable description="If &lt;code&gt;true&lt;/code&gt; the navigation is animated.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="anim" name="anim"/>
        <variable description="The element to be used as arrow left.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="arrowLeftEl" name="arrowLeftEl"/>
        <variable description="The element to be used as arrow right.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="arrowRightEl" name="arrowRightEl"/>
        <variable description="If &lt;code&gt;true&lt;/code&gt; the slide show will be played when the&#10;ImageGallery is displayed.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="autoPlay" name="autoPlay"/>
        <variable description="The content to be added to the body section. This will replace any existing content&#10;in the body. If you want to append, or insert new content, use the &lt;a href=&quot;#method_setStdModContent&quot;&gt;setStdModContent&lt;/a&gt; method.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="imagegalleryBodyContent" name="imagegalleryBodyContent"/>
        <variable description="The outermost DOM node for the Widget, used for sizing and positioning&#10;of a Widget as well as a containing element for any decorator elements used&#10;for skinning.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="boundingBox" name="boundingBox"/>
        <variable description="The caption of the displayed image.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="caption" name="caption"/>
        <variable description="The element to be used as caption.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="captionEl" name="captionEl"/>
        <variable description="If &lt;code&gt;true&lt;/code&gt; the &lt;a&#10;href=&quot;ImageViewer.html#config_caption&quot;&gt;caption&lt;/a&gt; will be pulled&#10;from the title DOM attribute.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="captionFromTitle" name="captionFromTitle"/>
        <variable description="If &lt;code&gt;true&lt;/code&gt; the Overlay with the image will be positioned&#10;on the center of the viewport.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="centered" name="centered"/>
        <variable description="The element to be used as close.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="closeEl" name="closeEl"/>
        <variable description="The node to constrain the widget's bounding box to, when setting xy. Can also be&#10;set to true, to constrain to the viewport.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="constrain" name="constrain"/>
        <variable description="A DOM node that is a direct descendant of a Widget's bounding box that&#10;houses its content.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="contentBox" name="contentBox"/>
        <variable description="CSS class to be automatically added to the &lt;code&gt;boundingBox&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="cssClass" name="cssClass"/>
        <variable description="Index of the current image.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="currentIndex" name="currentIndex"/>
        <variable description="Delay in milliseconds to change to the next image.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="delay" name="delay"/>
        <variable description="Flag indicating whether or not this object&#10;has been through the destroy lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="destroyed" name="destroyed"/>
        <variable description="Boolean indicating if the Widget should be disabled. The disabled implementation&#10;is left to the specific classes extending widget.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="disabled" name="disabled"/>
        <variable description="The section (WidgetStdMod.HEADER, WidgetStdMod.BODY or WidgetStdMod.FOOTER) which should be resized to fill the height of the standard module, when a&#10;height is set on the Widget. If a height is not set on the widget, then all sections are sized based on&#10;their content.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="fillHeight" name="fillHeight"/>
        <variable description="Boolean indicating if the Widget, or one of its descendants,&#10;has focus.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="focused" name="focused"/>
        <variable description="The content to be added to the footer section. This will replace any existing content&#10;in the footer. If you want to append, or insert new content, use the &lt;a href=&quot;#method_setStdModContent&quot;&gt;setStdModContent&lt;/a&gt; method.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="footerContent" name="footerContent"/>
        <variable description="The content to be added to the header section. This will replace any existing content&#10;in the header. If you want to append, or insert new content, use the &lt;a href=&quot;#method_setStdModContent&quot;&gt;setStdModContent&lt;/a&gt; method.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="headerContent" name="headerContent"/>
        <variable description="String with units, or number, representing the height of the Widget. If a number is provided,&#10;the default unit, defined by the Widgets DEF_UNIT, property is used.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="height" name="height"/>
        <variable description="css class added to hide the &lt;code&gt;boundingBox&lt;/code&gt; when&#10;&lt;a href=&quot;Component.html#config_visible&quot;&gt;visible&lt;/a&gt; is set to&#10;&lt;code&gt;false&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="hideClass" name="hideClass"/>
        <variable description="&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="imagegalleryId" name="imagegalleryId"/>
        <variable description="Image node element used to load the images.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="image" name="image"/>
        <variable description="Configuration attributes passed to the &lt;a href=&quot;Anim.html&quot;&gt;Anim&lt;/a&gt;&#10;class.&lt;!--{&quot;outputType&quot;:&quot;java.util.HashMap&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="imageAnim" name="imageAnim"/>
        <variable description="The element to be used as info.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="infoEl" name="infoEl"/>
        <variable description="String template used to display the information.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="infoTemplate" name="infoTemplate"/>
        <variable description="Flag indicating whether or not this object&#10;has been through the init lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="initialized" name="initialized"/>
        <variable description="Selector or NodeList containing the links where the ImageViewer&#10;extracts the information to generate the thumbnails.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="links" name="links"/>
        <variable description="HTML element to house the &lt;code&gt;img&lt;/code&gt; which is being loaded.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="loader" name="loader"/>
        <variable description="Whether the image is during a loading state.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="loading" name="loading"/>
        <variable description="The element to be used as loading.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="loadingEl" name="loadingEl"/>
        <variable description="The default locale for the widget. NOTE: Using get/set on the &quot;strings&quot; attribute will&#10;return/set strings for this locale.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="locale" name="locale"/>
        <variable description="The maximum height of the element&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="maxHeight" name="maxHeight"/>
        <variable description="The maximum width of the element&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="maxWidth" name="maxWidth"/>
        <variable description="Displays the modal &lt;a href=&quot;OverlayMask.html&quot;&gt;OverlayMask&lt;/a&gt; on&#10;the viewport. Set to &lt;code&gt;false&lt;/code&gt; to disable.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="modal" name="modal"/>
        <variable description="&lt;a href=&quot;Paginator.html&quot;&gt;Paginator&lt;/a&gt; configuration Object. The&#10;&lt;code&gt;Paginator&lt;/code&gt; handles the thumbnails control.&lt;!--{&quot;outputType&quot;:&quot;java.util.HashMap&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="paginator" name="paginator"/>
        <variable description="Element which contains the &lt;a href=&quot;Paginator.html&quot;&gt;Paginator&lt;/a&gt;&#10;with the thumbnails.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="paginatorEl" name="paginatorEl"/>
        <variable description="Stores the &lt;a href=&quot;Paginator.html&quot;&gt;Paginator&lt;/a&gt; instance.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="paginatorInstance" name="paginatorInstance"/>
        <variable description="If &lt;code&gt;true&lt;/code&gt; the slide show is paused.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="paused" name="paused"/>
        <variable description="Label to display when the slide show is paused.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="pausedLabel" name="pausedLabel"/>
        <variable description="If &lt;code&gt;true&lt;/code&gt; the slide show is playing.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="playing" name="playing"/>
        <variable description="Label to display when the slide show is playing.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="playingLabel" name="playingLabel"/>
        <variable description="Preload all images grabbed from the &lt;a&#10;href=&quot;ImageViewer.html#config_links&quot;&gt;links&lt;/a&gt; attribute.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="preloadAllImages" name="preloadAllImages"/>
        <variable description="If set to true, and WidgetPositionAlign is also added to the Widget,&#10;constrained positioning will attempt to prevent the widget's bounding box from overlapping&#10;the element to which it has been aligned, by flipping the orientation of the alignment&#10;for corner based alignments&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="preventOverlap" name="preventOverlap"/>
        <variable description="If &lt;code&gt;true&lt;/code&gt; the render phase will be autimatically invoked&#10;preventing the &lt;code&gt;.render()&lt;/code&gt; manual call.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="render" name="render"/>
        <variable description="Flag indicating whether or not this Widget&#10;has been through the render lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="rendered" name="rendered"/>
        <variable description="Restart the navigation when reach the last element.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="repeat" name="repeat"/>
        <variable description="Boolean flag to indicate whether or not a shim should be added to the Widgets&#10;boundingBox, to protect it from select box bleedthrough.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="shim" name="shim"/>
        <variable description="Show the arrow controls.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="showArrows" name="showArrows"/>
        <variable description="Show close icon control.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="showClose" name="showClose"/>
        <variable description="Show the player controls (i.e., pause and show buttons).&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="showPlayer" name="showPlayer"/>
        <variable description="The DOM node to parse for configuration values, passed to the Widget's HTML_PARSER definition&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="srcNode" name="srcNode"/>
        <variable description="Collection of strings used to label elements of the Widget's UI.&lt;!--{&quot;outputType&quot;:&quot;java.util.HashMap&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="strings" name="strings"/>
        <variable description="Number (between -32767 to 32767) indicating the widget's&#10;position in the default tab flow.  The value is used to set the&#10;&quot;tabIndex&quot; attribute on the widget's bounding box.  Negative values allow&#10;the widget to receive DOM focus programmatically (by calling the focus&#10;method), while being removed from the default tab flow.  A value of&#10;null removes the &quot;tabIndex&quot; attribute from the widget's bounding box.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="tabIndex" name="tabIndex"/>
        <variable description="&lt;a href=&quot;Toolbar.html&quot;&gt;Toolbar&lt;/a&gt; with a play, and pause buttons.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="toolbar" name="toolbar"/>
        <variable description="Helper attribute to get the &lt;code&gt;size&lt;/code&gt; of the &lt;a&#10;href=&quot;ImageViewer.html#config_links&quot;&gt;links&lt;/a&gt; NodeList.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="totalLinks" name="totalLinks"/>
        <variable description="Boolean indicating if use of the WAI-ARIA Roles and States should be&#10;enabled for the Widget.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="useARIA" name="useARIA"/>
        <variable description="If &lt;code&gt;true&lt;/code&gt; will use the original image as thumbnails.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="useOriginalImage" name="useOriginalImage"/>
        <variable description="Boolean indicating weather or not the Widget is visible.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="visible" name="visible"/>
        <variable description="String with units, or number, representing the width of the Widget. If a number is provided,&#10;the default unit, defined by the Widgets DEF_UNIT, property is used.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="width" name="width"/>
        <variable description="Page X co-ordinate for the widget. This attribute acts as a facade for the&#10;xy attribute. Changes in position can be monitored by listening for xyChange events.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="x" name="x"/>
        <variable description="Page XY co-ordinate pair for the widget.&lt;!--{&quot;outputType&quot;:&quot;java.util.ArrayList&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="xy" name="xy"/>
        <variable description="Page Y co-ordinate for the widget. This attribute acts as a facade for the&#10;xy attribute. Changes in position can be monitored by listening for xyChange events.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="y" name="y"/>
        <variable description="The z-index to apply to the Widgets boundingBox. Non-numerical values for&#10;zIndex will be converted to 0&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="zIndex" name="zIndex"/>
        <variable description="Fires when the value for the configuration attribute 'align' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterAlignChange" name="afterAlignChange"/>
        <variable description="Handles the anim event. Fired when the image anim ends.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterAnim" name="afterAnim"/>
        <variable description="Fires when the value for the configuration attribute 'anim' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterAnimChange" name="afterAnimChange"/>
        <variable description="Fires when the value for the configuration attribute 'arrowLeftEl' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterArrowLeftElChange" name="afterArrowLeftElChange"/>
        <variable description="Fires when the value for the configuration attribute 'arrowRightEl' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterArrowRightElChange" name="afterArrowRightElChange"/>
        <variable description="Fires when the value for the configuration attribute 'autoPlay' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterAutoPlayChange" name="afterAutoPlayChange"/>
        <variable description="Fires when the value for the configuration attribute 'bodyContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterBodyContentChange" name="afterBodyContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'boundingBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterBoundingBoxChange" name="afterBoundingBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'caption' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCaptionChange" name="afterCaptionChange"/>
        <variable description="Fires when the value for the configuration attribute 'captionEl' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCaptionElChange" name="afterCaptionElChange"/>
        <variable description="Fires when the value for the configuration attribute 'captionFromTitle' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCaptionFromTitleChange" name="afterCaptionFromTitleChange"/>
        <variable description="Fires when the value for the configuration attribute 'centered' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCenteredChange" name="afterCenteredChange"/>
        <variable description="Fires when the value for the configuration attribute 'closeEl' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCloseElChange" name="afterCloseElChange"/>
        <variable description="Fires when the value for the configuration attribute 'constrain' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterConstrainChange" name="afterConstrainChange"/>
        <variable description="Fires when the value for the configuration attribute 'contentBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterContentBoxChange" name="afterContentBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'cssClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCssClassChange" name="afterCssClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'currentIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCurrentIndexChange" name="afterCurrentIndexChange"/>
        <variable description="Fires when the value for the configuration attribute 'delay' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDelayChange" name="afterDelayChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroy" name="afterDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroyedChange" name="afterDestroyedChange"/>
        <variable description="Fires when the value for the configuration attribute 'disabled' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDisabledChange" name="afterDisabledChange"/>
        <variable description="Fires when the value for the configuration attribute 'fillHeight' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterFillHeightChange" name="afterFillHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'focused' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterFocusedChange" name="afterFocusedChange"/>
        <variable description="Fires when the value for the configuration attribute 'footerContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterFooterContentChange" name="afterFooterContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'headerContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHeaderContentChange" name="afterHeaderContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'height' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHeightChange" name="afterHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHideClassChange" name="afterHideClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'id' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterIdChange" name="afterIdChange"/>
        <variable description="Fires when the value for the configuration attribute 'imageAnim' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterImageAnimChange" name="afterImageAnimChange"/>
        <variable description="Fires when the value for the configuration attribute 'image' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterImageChange" name="afterImageChange"/>
        <variable description="Fires when the value for the configuration attribute 'infoEl' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInfoElChange" name="afterInfoElChange"/>
        <variable description="Fires when the value for the configuration attribute 'infoTemplate' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInfoTemplateChange" name="afterInfoTemplateChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInit" name="afterInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInitializedChange" name="afterInitializedChange"/>
        <variable description="Fires when the value for the configuration attribute 'links' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterLinksChange" name="afterLinksChange"/>
        <variable description="Handles the load event. Fired when a image is laoded.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterLoad" name="afterLoad"/>
        <variable description="Fires when the value for the configuration attribute 'loader' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterLoaderChange" name="afterLoaderChange"/>
        <variable description="Fires when the value for the configuration attribute 'loading' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterLoadingChange" name="afterLoadingChange"/>
        <variable description="Fires when the value for the configuration attribute 'loadingEl' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterLoadingElChange" name="afterLoadingElChange"/>
        <variable description="Fires when the value for the configuration attribute 'locale' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterLocaleChange" name="afterLocaleChange"/>
        <variable description="Fires when the value for the configuration attribute 'maxHeight' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterMaxHeightChange" name="afterMaxHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'maxWidth' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterMaxWidthChange" name="afterMaxWidthChange"/>
        <variable description="Fires when the value for the configuration attribute 'modal' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterModalChange" name="afterModalChange"/>
        <variable description="Fires when the value for the configuration attribute 'paginator' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterPaginatorChange" name="afterPaginatorChange"/>
        <variable description="Fires when the value for the configuration attribute 'paginatorEl' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterPaginatorElChange" name="afterPaginatorElChange"/>
        <variable description="Fires when the value for the configuration attribute 'paginatorInstance' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterPaginatorInstanceChange" name="afterPaginatorInstanceChange"/>
        <variable description="Fires when the value for the configuration attribute 'paused' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterPausedChange" name="afterPausedChange"/>
        <variable description="Fires when the value for the configuration attribute 'pausedLabel' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterPausedLabelChange" name="afterPausedLabelChange"/>
        <variable description="Fires when the value for the configuration attribute 'playing' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterPlayingChange" name="afterPlayingChange"/>
        <variable description="Fires when the value for the configuration attribute 'playingLabel' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterPlayingLabelChange" name="afterPlayingLabelChange"/>
        <variable description="Fires when the value for the configuration attribute 'preloadAllImages' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterPreloadAllImagesChange" name="afterPreloadAllImagesChange"/>
        <variable description="Fires when the value for the configuration attribute 'preventOverlap' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterPreventOverlapChange" name="afterPreventOverlapChange"/>
        <variable description="Fires when the value for the configuration attribute 'render' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRenderChange" name="afterRenderChange"/>
        <variable description="Fires when the value for the configuration attribute 'rendered' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRenderedChange" name="afterRenderedChange"/>
        <variable description="Fires when the value for the configuration attribute 'repeat' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRepeatChange" name="afterRepeatChange"/>
        <variable description="Handles the request event. Fired when a image is requested.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRequest" name="afterRequest"/>
        <variable description="Fires when the value for the configuration attribute 'shim' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterShimChange" name="afterShimChange"/>
        <variable description="Fires when the value for the configuration attribute 'showArrows' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterShowArrowsChange" name="afterShowArrowsChange"/>
        <variable description="Fires when the value for the configuration attribute 'showClose' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterShowCloseChange" name="afterShowCloseChange"/>
        <variable description="Fires when the value for the configuration attribute 'showPlayer' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterShowPlayerChange" name="afterShowPlayerChange"/>
        <variable description="Fires when the value for the configuration attribute 'srcNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterSrcNodeChange" name="afterSrcNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'strings' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterStringsChange" name="afterStringsChange"/>
        <variable description="Fires when the value for the configuration attribute 'tabIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTabIndexChange" name="afterTabIndexChange"/>
        <variable description="Fires when the value for the configuration attribute 'toolbar' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterToolbarChange" name="afterToolbarChange"/>
        <variable description="Fires when the value for the configuration attribute 'totalLinks' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTotalLinksChange" name="afterTotalLinksChange"/>
        <variable description="Fires when the value for the configuration attribute 'useARIA' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterUseARIAChange" name="afterUseARIAChange"/>
        <variable description="Fires when the value for the configuration attribute 'useOriginalImage' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterUseOriginalImageChange" name="afterUseOriginalImageChange"/>
        <variable description="Fires when the value for the configuration attribute 'visible' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterVisibleChange" name="afterVisibleChange"/>
        <variable description="Notification event, which widget implementations can fire, when&#10;they change the content of the widget. This event has no default&#10;behavior and cannot be prevented, so the &quot;on&quot; or &quot;after&quot;&#10;moments are effectively equivalent (with on listeners being invoked before&#10;after listeners).&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterContentUpdate" name="afterContentUpdate"/>
        <variable description="Lifecycle event for the render phase, fired prior to rendering the UI&#10;for the widget (prior to invoking the widget's renderer method).&#10;&lt;p&gt;&#10;Subscribers to the &quot;on&quot; moment of this event, will be notified&#10;before the widget is rendered.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after rendering is complete.&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRender" name="afterRender"/>
        <variable description="Fires when the value for the configuration attribute 'width' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterWidthChange" name="afterWidthChange"/>
        <variable description="Fires when the value for the configuration attribute 'x' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterXChange" name="afterXChange"/>
        <variable description="Fires when the value for the configuration attribute 'xy' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterXyChange" name="afterXyChange"/>
        <variable description="Fires when the value for the configuration attribute 'y' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterYChange" name="afterYChange"/>
        <variable description="Fires when the value for the configuration attribute 'zIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterZIndexChange" name="afterZIndexChange"/>
        <variable description="Fires when the value for the configuration attribute 'align' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onAlignChange" name="onAlignChange"/>
        <variable description="Handles the anim event. Fired when the image anim ends.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onAnim" name="onAnim"/>
        <variable description="Fires when the value for the configuration attribute 'anim' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onAnimChange" name="onAnimChange"/>
        <variable description="Fires when the value for the configuration attribute 'arrowLeftEl' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onArrowLeftElChange" name="onArrowLeftElChange"/>
        <variable description="Fires when the value for the configuration attribute 'arrowRightEl' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onArrowRightElChange" name="onArrowRightElChange"/>
        <variable description="Fires when the value for the configuration attribute 'autoPlay' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onAutoPlayChange" name="onAutoPlayChange"/>
        <variable description="Fires when the value for the configuration attribute 'bodyContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onBodyContentChange" name="onBodyContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'boundingBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onBoundingBoxChange" name="onBoundingBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'caption' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCaptionChange" name="onCaptionChange"/>
        <variable description="Fires when the value for the configuration attribute 'captionEl' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCaptionElChange" name="onCaptionElChange"/>
        <variable description="Fires when the value for the configuration attribute 'captionFromTitle' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCaptionFromTitleChange" name="onCaptionFromTitleChange"/>
        <variable description="Fires when the value for the configuration attribute 'centered' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCenteredChange" name="onCenteredChange"/>
        <variable description="Fires when the value for the configuration attribute 'closeEl' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCloseElChange" name="onCloseElChange"/>
        <variable description="Fires when the value for the configuration attribute 'constrain' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onConstrainChange" name="onConstrainChange"/>
        <variable description="Fires when the value for the configuration attribute 'contentBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onContentBoxChange" name="onContentBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'cssClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCssClassChange" name="onCssClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'currentIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCurrentIndexChange" name="onCurrentIndexChange"/>
        <variable description="Fires when the value for the configuration attribute 'delay' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDelayChange" name="onDelayChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroy" name="onDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroyedChange" name="onDestroyedChange"/>
        <variable description="Fires when the value for the configuration attribute 'disabled' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDisabledChange" name="onDisabledChange"/>
        <variable description="Fires when the value for the configuration attribute 'fillHeight' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onFillHeightChange" name="onFillHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'focused' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onFocusedChange" name="onFocusedChange"/>
        <variable description="Fires when the value for the configuration attribute 'footerContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onFooterContentChange" name="onFooterContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'headerContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHeaderContentChange" name="onHeaderContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'height' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHeightChange" name="onHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHideClassChange" name="onHideClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'id' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onIdChange" name="onIdChange"/>
        <variable description="Fires when the value for the configuration attribute 'imageAnim' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onImageAnimChange" name="onImageAnimChange"/>
        <variable description="Fires when the value for the configuration attribute 'image' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onImageChange" name="onImageChange"/>
        <variable description="Fires when the value for the configuration attribute 'infoEl' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInfoElChange" name="onInfoElChange"/>
        <variable description="Fires when the value for the configuration attribute 'infoTemplate' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInfoTemplateChange" name="onInfoTemplateChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInit" name="onInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInitializedChange" name="onInitializedChange"/>
        <variable description="Fires when the value for the configuration attribute 'links' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onLinksChange" name="onLinksChange"/>
        <variable description="Handles the load event. Fired when a image is laoded.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onLoad" name="onLoad"/>
        <variable description="Fires when the value for the configuration attribute 'loader' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onLoaderChange" name="onLoaderChange"/>
        <variable description="Fires when the value for the configuration attribute 'loading' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onLoadingChange" name="onLoadingChange"/>
        <variable description="Fires when the value for the configuration attribute 'loadingEl' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onLoadingElChange" name="onLoadingElChange"/>
        <variable description="Fires when the value for the configuration attribute 'locale' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onLocaleChange" name="onLocaleChange"/>
        <variable description="Fires when the value for the configuration attribute 'maxHeight' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onMaxHeightChange" name="onMaxHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'maxWidth' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onMaxWidthChange" name="onMaxWidthChange"/>
        <variable description="Fires when the value for the configuration attribute 'modal' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onModalChange" name="onModalChange"/>
        <variable description="Fires when the value for the configuration attribute 'paginator' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onPaginatorChange" name="onPaginatorChange"/>
        <variable description="Fires when the value for the configuration attribute 'paginatorEl' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onPaginatorElChange" name="onPaginatorElChange"/>
        <variable description="Fires when the value for the configuration attribute 'paginatorInstance' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onPaginatorInstanceChange" name="onPaginatorInstanceChange"/>
        <variable description="Fires when the value for the configuration attribute 'paused' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onPausedChange" name="onPausedChange"/>
        <variable description="Fires when the value for the configuration attribute 'pausedLabel' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onPausedLabelChange" name="onPausedLabelChange"/>
        <variable description="Fires when the value for the configuration attribute 'playing' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onPlayingChange" name="onPlayingChange"/>
        <variable description="Fires when the value for the configuration attribute 'playingLabel' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onPlayingLabelChange" name="onPlayingLabelChange"/>
        <variable description="Fires when the value for the configuration attribute 'preloadAllImages' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onPreloadAllImagesChange" name="onPreloadAllImagesChange"/>
        <variable description="Fires when the value for the configuration attribute 'preventOverlap' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onPreventOverlapChange" name="onPreventOverlapChange"/>
        <variable description="Fires when the value for the configuration attribute 'render' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRenderChange" name="onRenderChange"/>
        <variable description="Fires when the value for the configuration attribute 'rendered' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRenderedChange" name="onRenderedChange"/>
        <variable description="Fires when the value for the configuration attribute 'repeat' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRepeatChange" name="onRepeatChange"/>
        <variable description="Handles the request event. Fired when a image is requested.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRequest" name="onRequest"/>
        <variable description="Fires when the value for the configuration attribute 'shim' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onShimChange" name="onShimChange"/>
        <variable description="Fires when the value for the configuration attribute 'showArrows' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onShowArrowsChange" name="onShowArrowsChange"/>
        <variable description="Fires when the value for the configuration attribute 'showClose' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onShowCloseChange" name="onShowCloseChange"/>
        <variable description="Fires when the value for the configuration attribute 'showPlayer' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onShowPlayerChange" name="onShowPlayerChange"/>
        <variable description="Fires when the value for the configuration attribute 'srcNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onSrcNodeChange" name="onSrcNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'strings' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onStringsChange" name="onStringsChange"/>
        <variable description="Fires when the value for the configuration attribute 'tabIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTabIndexChange" name="onTabIndexChange"/>
        <variable description="Fires when the value for the configuration attribute 'toolbar' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onToolbarChange" name="onToolbarChange"/>
        <variable description="Fires when the value for the configuration attribute 'totalLinks' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTotalLinksChange" name="onTotalLinksChange"/>
        <variable description="Fires when the value for the configuration attribute 'useARIA' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onUseARIAChange" name="onUseARIAChange"/>
        <variable description="Fires when the value for the configuration attribute 'useOriginalImage' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onUseOriginalImageChange" name="onUseOriginalImageChange"/>
        <variable description="Fires when the value for the configuration attribute 'visible' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onVisibleChange" name="onVisibleChange"/>
        <variable description="Notification event, which widget implementations can fire, when&#10;they change the content of the widget. This event has no default&#10;behavior and cannot be prevented, so the &quot;on&quot; or &quot;after&quot;&#10;moments are effectively equivalent (with on listeners being invoked before&#10;after listeners).&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onContentUpdate" name="onContentUpdate"/>
        <variable description="Lifecycle event for the render phase, fired prior to rendering the UI&#10;for the widget (prior to invoking the widget's renderer method).&#10;&lt;p&gt;&#10;Subscribers to the &quot;on&quot; moment of this event, will be notified&#10;before the widget is rendered.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after rendering is complete.&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRender" name="onRender"/>
        <variable description="Fires when the value for the configuration attribute 'width' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onWidthChange" name="onWidthChange"/>
        <variable description="Fires when the value for the configuration attribute 'x' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onXChange" name="onXChange"/>
        <variable description="Fires when the value for the configuration attribute 'xy' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onXyChange" name="onXyChange"/>
        <variable description="Fires when the value for the configuration attribute 'y' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onYChange" name="onYChange"/>
        <variable description="Fires when the value for the configuration attribute 'zIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onZIndexChange" name="onZIndexChange"/>
      </item>
      <item class="com.liferay.ide.taglib.ui.snippets.AlloyTagSnippetInsertion" description="image-viewer" id="com.liferay.ide.ui.snippets.item.image-viewer" label="image-viewer" smallicon="icons/snippets/tag-generic.gif">
        <content>
          &lt;alloy:image-viewer${align}${anim}${arrowLeftEl}${arrowRightEl}${imageviewerBodyContent}${boundingBox}${caption}${captionEl}${captionFromTitle}${centered}${closeEl}${constrain}${contentBox}${cssClass}${currentIndex}${destroyed}${disabled}${fillHeight}${focused}${footerContent}${headerContent}${height}${hideClass}${imageviewerId}${image}${imageAnim}${infoEl}${infoTemplate}${initialized}${links}${loader}${loading}${loadingEl}${locale}${maxHeight}${maxWidth}${modal}${preloadAllImages}${preventOverlap}${render}${rendered}${shim}${showArrows}${showClose}${srcNode}${strings}${tabIndex}${totalLinks}${useARIA}${visible}${width}${x}${xy}${y}${zIndex}${afterAlignChange}${afterAnim}${afterAnimChange}${afterArrowLeftElChange}${afterArrowRightElChange}${afterBodyContentChange}${afterBoundingBoxChange}${afterCaptionChange}${afterCaptionElChange}${afterCaptionFromTitleChange}${afterCenteredChange}${afterCloseElChange}${afterConstrainChange}${afterContentBoxChange}${afterCssClassChange}${afterCurrentIndexChange}${afterDestroy}${afterDestroyedChange}${afterDisabledChange}${afterFillHeightChange}${afterFocusedChange}${afterFooterContentChange}${afterHeaderContentChange}${afterHeightChange}${afterHideClassChange}${afterIdChange}${afterImageAnimChange}${afterImageChange}${afterInfoElChange}${afterInfoTemplateChange}${afterInit}${afterInitializedChange}${afterLinksChange}${afterLoad}${afterLoaderChange}${afterLoadingChange}${afterLoadingElChange}${afterLocaleChange}${afterMaxHeightChange}${afterMaxWidthChange}${afterModalChange}${afterPreloadAllImagesChange}${afterPreventOverlapChange}${afterRenderChange}${afterRenderedChange}${afterRequest}${afterShimChange}${afterShowArrowsChange}${afterShowCloseChange}${afterSrcNodeChange}${afterStringsChange}${afterTabIndexChange}${afterTotalLinksChange}${afterUseARIAChange}${afterVisibleChange}${afterContentUpdate}${afterRender}${afterWidthChange}${afterXChange}${afterXyChange}${afterYChange}${afterZIndexChange}${onAlignChange}${onAnim}${onAnimChange}${onArrowLeftElChange}${onArrowRightElChange}${onBodyContentChange}${onBoundingBoxChange}${onCaptionChange}${onCaptionElChange}${onCaptionFromTitleChange}${onCenteredChange}${onCloseElChange}${onConstrainChange}${onContentBoxChange}${onCssClassChange}${onCurrentIndexChange}${onDestroy}${onDestroyedChange}${onDisabledChange}${onFillHeightChange}${onFocusedChange}${onFooterContentChange}${onHeaderContentChange}${onHeightChange}${onHideClassChange}${onIdChange}${onImageAnimChange}${onImageChange}${onInfoElChange}${onInfoTemplateChange}${onInit}${onInitializedChange}${onLinksChange}${onLoad}${onLoaderChange}${onLoadingChange}${onLoadingElChange}${onLocaleChange}${onMaxHeightChange}${onMaxWidthChange}${onModalChange}${onPreloadAllImagesChange}${onPreventOverlapChange}${onRenderChange}${onRenderedChange}${onRequest}${onShimChange}${onShowArrowsChange}${onShowCloseChange}${onSrcNodeChange}${onStringsChange}${onTabIndexChange}${onTotalLinksChange}${onUseARIAChange}${onVisibleChange}${onContentUpdate}${onRender}${onWidthChange}${onXChange}${onXyChange}${onYChange}${onZIndexChange}&gt;&lt;/alloy:image-viewer&gt;
        </content>
        <variable description="&lt;!--{&quot;outputType&quot;:&quot;java.util.HashMap&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="align" name="align"/>
        <variable description="If &lt;code&gt;true&lt;/code&gt; the navigation is animated.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="anim" name="anim"/>
        <variable description="The element to be used as arrow left.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="arrowLeftEl" name="arrowLeftEl"/>
        <variable description="The element to be used as arrow right.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="arrowRightEl" name="arrowRightEl"/>
        <variable description="The content to be added to the body section. This will replace any existing content&#10;in the body. If you want to append, or insert new content, use the &lt;a href=&quot;#method_setStdModContent&quot;&gt;setStdModContent&lt;/a&gt; method.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="imageviewerBodyContent" name="imageviewerBodyContent"/>
        <variable description="The outermost DOM node for the Widget, used for sizing and positioning&#10;of a Widget as well as a containing element for any decorator elements used&#10;for skinning.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="boundingBox" name="boundingBox"/>
        <variable description="The caption of the displayed image.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="caption" name="caption"/>
        <variable description="The element to be used as caption.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="captionEl" name="captionEl"/>
        <variable description="If &lt;code&gt;true&lt;/code&gt; the &lt;a&#10;href=&quot;ImageViewer.html#config_caption&quot;&gt;caption&lt;/a&gt; will be pulled&#10;from the title DOM attribute.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="captionFromTitle" name="captionFromTitle"/>
        <variable description="If &lt;code&gt;true&lt;/code&gt; the Overlay with the image will be positioned&#10;on the center of the viewport.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="centered" name="centered"/>
        <variable description="The element to be used as close.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="closeEl" name="closeEl"/>
        <variable description="The node to constrain the widget's bounding box to, when setting xy. Can also be&#10;set to true, to constrain to the viewport.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="constrain" name="constrain"/>
        <variable description="A DOM node that is a direct descendant of a Widget's bounding box that&#10;houses its content.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="contentBox" name="contentBox"/>
        <variable description="CSS class to be automatically added to the &lt;code&gt;boundingBox&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="cssClass" name="cssClass"/>
        <variable description="Index of the current image.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="currentIndex" name="currentIndex"/>
        <variable description="Flag indicating whether or not this object&#10;has been through the destroy lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="destroyed" name="destroyed"/>
        <variable description="Boolean indicating if the Widget should be disabled. The disabled implementation&#10;is left to the specific classes extending widget.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="disabled" name="disabled"/>
        <variable description="The section (WidgetStdMod.HEADER, WidgetStdMod.BODY or WidgetStdMod.FOOTER) which should be resized to fill the height of the standard module, when a&#10;height is set on the Widget. If a height is not set on the widget, then all sections are sized based on&#10;their content.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="fillHeight" name="fillHeight"/>
        <variable description="Boolean indicating if the Widget, or one of its descendants,&#10;has focus.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="focused" name="focused"/>
        <variable description="The content to be added to the footer section. This will replace any existing content&#10;in the footer. If you want to append, or insert new content, use the &lt;a href=&quot;#method_setStdModContent&quot;&gt;setStdModContent&lt;/a&gt; method.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="footerContent" name="footerContent"/>
        <variable description="The content to be added to the header section. This will replace any existing content&#10;in the header. If you want to append, or insert new content, use the &lt;a href=&quot;#method_setStdModContent&quot;&gt;setStdModContent&lt;/a&gt; method.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="headerContent" name="headerContent"/>
        <variable description="String with units, or number, representing the height of the Widget. If a number is provided,&#10;the default unit, defined by the Widgets DEF_UNIT, property is used.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="height" name="height"/>
        <variable description="css class added to hide the &lt;code&gt;boundingBox&lt;/code&gt; when&#10;&lt;a href=&quot;Component.html#config_visible&quot;&gt;visible&lt;/a&gt; is set to&#10;&lt;code&gt;false&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="hideClass" name="hideClass"/>
        <variable description="&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="imageviewerId" name="imageviewerId"/>
        <variable description="Image node element used to load the images.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="image" name="image"/>
        <variable description="Configuration attributes passed to the &lt;a href=&quot;Anim.html&quot;&gt;Anim&lt;/a&gt;&#10;class.&lt;!--{&quot;outputType&quot;:&quot;java.util.HashMap&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="imageAnim" name="imageAnim"/>
        <variable description="The element to be used as info.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="infoEl" name="infoEl"/>
        <variable description="String template used to display the information.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="infoTemplate" name="infoTemplate"/>
        <variable description="Flag indicating whether or not this object&#10;has been through the init lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="initialized" name="initialized"/>
        <variable description="Selector or NodeList containing the links where the ImageViewer&#10;extracts the information to generate the thumbnails.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="links" name="links"/>
        <variable description="HTML element to house the &lt;code&gt;img&lt;/code&gt; which is being loaded.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="loader" name="loader"/>
        <variable description="Whether the image is during a loading state.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="loading" name="loading"/>
        <variable description="The element to be used as loading.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="loadingEl" name="loadingEl"/>
        <variable description="The default locale for the widget. NOTE: Using get/set on the &quot;strings&quot; attribute will&#10;return/set strings for this locale.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="locale" name="locale"/>
        <variable description="The maximum height of the element&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="maxHeight" name="maxHeight"/>
        <variable description="The maximum width of the element&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="maxWidth" name="maxWidth"/>
        <variable description="Displays the modal &lt;a href=&quot;OverlayMask.html&quot;&gt;OverlayMask&lt;/a&gt; on&#10;the viewport. Set to &lt;code&gt;false&lt;/code&gt; to disable.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="modal" name="modal"/>
        <variable description="Preload all images grabbed from the &lt;a&#10;href=&quot;ImageViewer.html#config_links&quot;&gt;links&lt;/a&gt; attribute.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="preloadAllImages" name="preloadAllImages"/>
        <variable description="If set to true, and WidgetPositionAlign is also added to the Widget,&#10;constrained positioning will attempt to prevent the widget's bounding box from overlapping&#10;the element to which it has been aligned, by flipping the orientation of the alignment&#10;for corner based alignments&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="preventOverlap" name="preventOverlap"/>
        <variable description="If &lt;code&gt;true&lt;/code&gt; the render phase will be autimatically invoked&#10;preventing the &lt;code&gt;.render()&lt;/code&gt; manual call.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="render" name="render"/>
        <variable description="Flag indicating whether or not this Widget&#10;has been through the render lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="rendered" name="rendered"/>
        <variable description="Boolean flag to indicate whether or not a shim should be added to the Widgets&#10;boundingBox, to protect it from select box bleedthrough.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="shim" name="shim"/>
        <variable description="Show the arrow controls.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="showArrows" name="showArrows"/>
        <variable description="Show close icon control.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="showClose" name="showClose"/>
        <variable description="The DOM node to parse for configuration values, passed to the Widget's HTML_PARSER definition&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="srcNode" name="srcNode"/>
        <variable description="Collection of strings used to label elements of the Widget's UI.&lt;!--{&quot;outputType&quot;:&quot;java.util.HashMap&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="strings" name="strings"/>
        <variable description="Number (between -32767 to 32767) indicating the widget's&#10;position in the default tab flow.  The value is used to set the&#10;&quot;tabIndex&quot; attribute on the widget's bounding box.  Negative values allow&#10;the widget to receive DOM focus programmatically (by calling the focus&#10;method), while being removed from the default tab flow.  A value of&#10;null removes the &quot;tabIndex&quot; attribute from the widget's bounding box.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="tabIndex" name="tabIndex"/>
        <variable description="Helper attribute to get the &lt;code&gt;size&lt;/code&gt; of the &lt;a&#10;href=&quot;ImageViewer.html#config_links&quot;&gt;links&lt;/a&gt; NodeList.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="totalLinks" name="totalLinks"/>
        <variable description="Boolean indicating if use of the WAI-ARIA Roles and States should be&#10;enabled for the Widget.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="useARIA" name="useARIA"/>
        <variable description="Boolean indicating weather or not the Widget is visible.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="visible" name="visible"/>
        <variable description="String with units, or number, representing the width of the Widget. If a number is provided,&#10;the default unit, defined by the Widgets DEF_UNIT, property is used.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="width" name="width"/>
        <variable description="Page X co-ordinate for the widget. This attribute acts as a facade for the&#10;xy attribute. Changes in position can be monitored by listening for xyChange events.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="x" name="x"/>
        <variable description="Page XY co-ordinate pair for the widget.&lt;!--{&quot;outputType&quot;:&quot;java.util.ArrayList&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="xy" name="xy"/>
        <variable description="Page Y co-ordinate for the widget. This attribute acts as a facade for the&#10;xy attribute. Changes in position can be monitored by listening for xyChange events.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="y" name="y"/>
        <variable description="The z-index to apply to the Widgets boundingBox. Non-numerical values for&#10;zIndex will be converted to 0&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="zIndex" name="zIndex"/>
        <variable description="Fires when the value for the configuration attribute 'align' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterAlignChange" name="afterAlignChange"/>
        <variable description="Handles the anim event. Fired when the image anim ends.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterAnim" name="afterAnim"/>
        <variable description="Fires when the value for the configuration attribute 'anim' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterAnimChange" name="afterAnimChange"/>
        <variable description="Fires when the value for the configuration attribute 'arrowLeftEl' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterArrowLeftElChange" name="afterArrowLeftElChange"/>
        <variable description="Fires when the value for the configuration attribute 'arrowRightEl' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterArrowRightElChange" name="afterArrowRightElChange"/>
        <variable description="Fires when the value for the configuration attribute 'bodyContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterBodyContentChange" name="afterBodyContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'boundingBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterBoundingBoxChange" name="afterBoundingBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'caption' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCaptionChange" name="afterCaptionChange"/>
        <variable description="Fires when the value for the configuration attribute 'captionEl' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCaptionElChange" name="afterCaptionElChange"/>
        <variable description="Fires when the value for the configuration attribute 'captionFromTitle' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCaptionFromTitleChange" name="afterCaptionFromTitleChange"/>
        <variable description="Fires when the value for the configuration attribute 'centered' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCenteredChange" name="afterCenteredChange"/>
        <variable description="Fires when the value for the configuration attribute 'closeEl' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCloseElChange" name="afterCloseElChange"/>
        <variable description="Fires when the value for the configuration attribute 'constrain' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterConstrainChange" name="afterConstrainChange"/>
        <variable description="Fires when the value for the configuration attribute 'contentBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterContentBoxChange" name="afterContentBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'cssClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCssClassChange" name="afterCssClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'currentIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCurrentIndexChange" name="afterCurrentIndexChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroy" name="afterDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroyedChange" name="afterDestroyedChange"/>
        <variable description="Fires when the value for the configuration attribute 'disabled' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDisabledChange" name="afterDisabledChange"/>
        <variable description="Fires when the value for the configuration attribute 'fillHeight' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterFillHeightChange" name="afterFillHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'focused' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterFocusedChange" name="afterFocusedChange"/>
        <variable description="Fires when the value for the configuration attribute 'footerContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterFooterContentChange" name="afterFooterContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'headerContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHeaderContentChange" name="afterHeaderContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'height' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHeightChange" name="afterHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHideClassChange" name="afterHideClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'id' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterIdChange" name="afterIdChange"/>
        <variable description="Fires when the value for the configuration attribute 'imageAnim' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterImageAnimChange" name="afterImageAnimChange"/>
        <variable description="Fires when the value for the configuration attribute 'image' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterImageChange" name="afterImageChange"/>
        <variable description="Fires when the value for the configuration attribute 'infoEl' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInfoElChange" name="afterInfoElChange"/>
        <variable description="Fires when the value for the configuration attribute 'infoTemplate' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInfoTemplateChange" name="afterInfoTemplateChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInit" name="afterInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInitializedChange" name="afterInitializedChange"/>
        <variable description="Fires when the value for the configuration attribute 'links' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterLinksChange" name="afterLinksChange"/>
        <variable description="Handles the load event. Fired when a image is laoded.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterLoad" name="afterLoad"/>
        <variable description="Fires when the value for the configuration attribute 'loader' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterLoaderChange" name="afterLoaderChange"/>
        <variable description="Fires when the value for the configuration attribute 'loading' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterLoadingChange" name="afterLoadingChange"/>
        <variable description="Fires when the value for the configuration attribute 'loadingEl' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterLoadingElChange" name="afterLoadingElChange"/>
        <variable description="Fires when the value for the configuration attribute 'locale' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterLocaleChange" name="afterLocaleChange"/>
        <variable description="Fires when the value for the configuration attribute 'maxHeight' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterMaxHeightChange" name="afterMaxHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'maxWidth' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterMaxWidthChange" name="afterMaxWidthChange"/>
        <variable description="Fires when the value for the configuration attribute 'modal' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterModalChange" name="afterModalChange"/>
        <variable description="Fires when the value for the configuration attribute 'preloadAllImages' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterPreloadAllImagesChange" name="afterPreloadAllImagesChange"/>
        <variable description="Fires when the value for the configuration attribute 'preventOverlap' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterPreventOverlapChange" name="afterPreventOverlapChange"/>
        <variable description="Fires when the value for the configuration attribute 'render' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRenderChange" name="afterRenderChange"/>
        <variable description="Fires when the value for the configuration attribute 'rendered' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRenderedChange" name="afterRenderedChange"/>
        <variable description="Handles the request event. Fired when a image is requested.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRequest" name="afterRequest"/>
        <variable description="Fires when the value for the configuration attribute 'shim' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterShimChange" name="afterShimChange"/>
        <variable description="Fires when the value for the configuration attribute 'showArrows' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterShowArrowsChange" name="afterShowArrowsChange"/>
        <variable description="Fires when the value for the configuration attribute 'showClose' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterShowCloseChange" name="afterShowCloseChange"/>
        <variable description="Fires when the value for the configuration attribute 'srcNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterSrcNodeChange" name="afterSrcNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'strings' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterStringsChange" name="afterStringsChange"/>
        <variable description="Fires when the value for the configuration attribute 'tabIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTabIndexChange" name="afterTabIndexChange"/>
        <variable description="Fires when the value for the configuration attribute 'totalLinks' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTotalLinksChange" name="afterTotalLinksChange"/>
        <variable description="Fires when the value for the configuration attribute 'useARIA' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterUseARIAChange" name="afterUseARIAChange"/>
        <variable description="Fires when the value for the configuration attribute 'visible' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterVisibleChange" name="afterVisibleChange"/>
        <variable description="Notification event, which widget implementations can fire, when&#10;they change the content of the widget. This event has no default&#10;behavior and cannot be prevented, so the &quot;on&quot; or &quot;after&quot;&#10;moments are effectively equivalent (with on listeners being invoked before&#10;after listeners).&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterContentUpdate" name="afterContentUpdate"/>
        <variable description="Lifecycle event for the render phase, fired prior to rendering the UI&#10;for the widget (prior to invoking the widget's renderer method).&#10;&lt;p&gt;&#10;Subscribers to the &quot;on&quot; moment of this event, will be notified&#10;before the widget is rendered.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after rendering is complete.&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRender" name="afterRender"/>
        <variable description="Fires when the value for the configuration attribute 'width' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterWidthChange" name="afterWidthChange"/>
        <variable description="Fires when the value for the configuration attribute 'x' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterXChange" name="afterXChange"/>
        <variable description="Fires when the value for the configuration attribute 'xy' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterXyChange" name="afterXyChange"/>
        <variable description="Fires when the value for the configuration attribute 'y' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterYChange" name="afterYChange"/>
        <variable description="Fires when the value for the configuration attribute 'zIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterZIndexChange" name="afterZIndexChange"/>
        <variable description="Fires when the value for the configuration attribute 'align' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onAlignChange" name="onAlignChange"/>
        <variable description="Handles the anim event. Fired when the image anim ends.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onAnim" name="onAnim"/>
        <variable description="Fires when the value for the configuration attribute 'anim' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onAnimChange" name="onAnimChange"/>
        <variable description="Fires when the value for the configuration attribute 'arrowLeftEl' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onArrowLeftElChange" name="onArrowLeftElChange"/>
        <variable description="Fires when the value for the configuration attribute 'arrowRightEl' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onArrowRightElChange" name="onArrowRightElChange"/>
        <variable description="Fires when the value for the configuration attribute 'bodyContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onBodyContentChange" name="onBodyContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'boundingBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onBoundingBoxChange" name="onBoundingBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'caption' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCaptionChange" name="onCaptionChange"/>
        <variable description="Fires when the value for the configuration attribute 'captionEl' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCaptionElChange" name="onCaptionElChange"/>
        <variable description="Fires when the value for the configuration attribute 'captionFromTitle' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCaptionFromTitleChange" name="onCaptionFromTitleChange"/>
        <variable description="Fires when the value for the configuration attribute 'centered' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCenteredChange" name="onCenteredChange"/>
        <variable description="Fires when the value for the configuration attribute 'closeEl' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCloseElChange" name="onCloseElChange"/>
        <variable description="Fires when the value for the configuration attribute 'constrain' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onConstrainChange" name="onConstrainChange"/>
        <variable description="Fires when the value for the configuration attribute 'contentBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onContentBoxChange" name="onContentBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'cssClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCssClassChange" name="onCssClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'currentIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCurrentIndexChange" name="onCurrentIndexChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroy" name="onDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroyedChange" name="onDestroyedChange"/>
        <variable description="Fires when the value for the configuration attribute 'disabled' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDisabledChange" name="onDisabledChange"/>
        <variable description="Fires when the value for the configuration attribute 'fillHeight' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onFillHeightChange" name="onFillHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'focused' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onFocusedChange" name="onFocusedChange"/>
        <variable description="Fires when the value for the configuration attribute 'footerContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onFooterContentChange" name="onFooterContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'headerContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHeaderContentChange" name="onHeaderContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'height' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHeightChange" name="onHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHideClassChange" name="onHideClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'id' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onIdChange" name="onIdChange"/>
        <variable description="Fires when the value for the configuration attribute 'imageAnim' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onImageAnimChange" name="onImageAnimChange"/>
        <variable description="Fires when the value for the configuration attribute 'image' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onImageChange" name="onImageChange"/>
        <variable description="Fires when the value for the configuration attribute 'infoEl' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInfoElChange" name="onInfoElChange"/>
        <variable description="Fires when the value for the configuration attribute 'infoTemplate' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInfoTemplateChange" name="onInfoTemplateChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInit" name="onInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInitializedChange" name="onInitializedChange"/>
        <variable description="Fires when the value for the configuration attribute 'links' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onLinksChange" name="onLinksChange"/>
        <variable description="Handles the load event. Fired when a image is laoded.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onLoad" name="onLoad"/>
        <variable description="Fires when the value for the configuration attribute 'loader' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onLoaderChange" name="onLoaderChange"/>
        <variable description="Fires when the value for the configuration attribute 'loading' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onLoadingChange" name="onLoadingChange"/>
        <variable description="Fires when the value for the configuration attribute 'loadingEl' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onLoadingElChange" name="onLoadingElChange"/>
        <variable description="Fires when the value for the configuration attribute 'locale' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onLocaleChange" name="onLocaleChange"/>
        <variable description="Fires when the value for the configuration attribute 'maxHeight' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onMaxHeightChange" name="onMaxHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'maxWidth' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onMaxWidthChange" name="onMaxWidthChange"/>
        <variable description="Fires when the value for the configuration attribute 'modal' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onModalChange" name="onModalChange"/>
        <variable description="Fires when the value for the configuration attribute 'preloadAllImages' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onPreloadAllImagesChange" name="onPreloadAllImagesChange"/>
        <variable description="Fires when the value for the configuration attribute 'preventOverlap' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onPreventOverlapChange" name="onPreventOverlapChange"/>
        <variable description="Fires when the value for the configuration attribute 'render' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRenderChange" name="onRenderChange"/>
        <variable description="Fires when the value for the configuration attribute 'rendered' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRenderedChange" name="onRenderedChange"/>
        <variable description="Handles the request event. Fired when a image is requested.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRequest" name="onRequest"/>
        <variable description="Fires when the value for the configuration attribute 'shim' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onShimChange" name="onShimChange"/>
        <variable description="Fires when the value for the configuration attribute 'showArrows' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onShowArrowsChange" name="onShowArrowsChange"/>
        <variable description="Fires when the value for the configuration attribute 'showClose' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onShowCloseChange" name="onShowCloseChange"/>
        <variable description="Fires when the value for the configuration attribute 'srcNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onSrcNodeChange" name="onSrcNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'strings' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onStringsChange" name="onStringsChange"/>
        <variable description="Fires when the value for the configuration attribute 'tabIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTabIndexChange" name="onTabIndexChange"/>
        <variable description="Fires when the value for the configuration attribute 'totalLinks' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTotalLinksChange" name="onTotalLinksChange"/>
        <variable description="Fires when the value for the configuration attribute 'useARIA' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onUseARIAChange" name="onUseARIAChange"/>
        <variable description="Fires when the value for the configuration attribute 'visible' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onVisibleChange" name="onVisibleChange"/>
        <variable description="Notification event, which widget implementations can fire, when&#10;they change the content of the widget. This event has no default&#10;behavior and cannot be prevented, so the &quot;on&quot; or &quot;after&quot;&#10;moments are effectively equivalent (with on listeners being invoked before&#10;after listeners).&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onContentUpdate" name="onContentUpdate"/>
        <variable description="Lifecycle event for the render phase, fired prior to rendering the UI&#10;for the widget (prior to invoking the widget's renderer method).&#10;&lt;p&gt;&#10;Subscribers to the &quot;on&quot; moment of this event, will be notified&#10;before the widget is rendered.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after rendering is complete.&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRender" name="onRender"/>
        <variable description="Fires when the value for the configuration attribute 'width' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onWidthChange" name="onWidthChange"/>
        <variable description="Fires when the value for the configuration attribute 'x' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onXChange" name="onXChange"/>
        <variable description="Fires when the value for the configuration attribute 'xy' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onXyChange" name="onXyChange"/>
        <variable description="Fires when the value for the configuration attribute 'y' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onYChange" name="onYChange"/>
        <variable description="Fires when the value for the configuration attribute 'zIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onZIndexChange" name="onZIndexChange"/>
      </item>
      <item class="com.liferay.ide.taglib.ui.snippets.AlloyTagSnippetInsertion" description="live-search" id="com.liferay.ide.ui.snippets.item.live-search" label="live-search" smallicon="icons/snippets/tag-generic.gif">
        <content>
          &lt;alloy:live-search${data}${delay}${destroyed}${hide}${index}${initialized}${input}${matchRegex}${nodes}${show}${afterDataChange}${afterDelayChange}${afterDestroy}${afterDestroyedChange}${afterHideChange}${afterIndexChange}${afterInit}${afterInitializedChange}${afterInputChange}${afterMatchRegexChange}${afterNodesChange}${afterShowChange}${onDataChange}${onDelayChange}${onDestroy}${onDestroyedChange}${onHideChange}${onIndexChange}${onInit}${onInitializedChange}${onInputChange}${onMatchRegexChange}${onNodesChange}${onShowChange}&gt;&lt;/alloy:live-search&gt;
        </content>
        <variable description="&lt;p&gt;Function to extract the content from the node for the indexing. The&#10;default uses the &lt;code&gt;node.html()&lt;/code&gt;. In case if you need to&#10;index the id of the nodes, here goes one example:&lt;/p&gt;&#10;Example indexing the id of the node instead of the HTML:&#10;&lt;pre&gt;&lt;code&gt;function(node) {&#10;return node.attr('id');&#10;}&#10;&lt;/code&gt;&lt;/pre&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="data" name="data"/>
        <variable description="Number of milliseconds the filter will be applied to the node list&#10;after the user stop typing.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="delay" name="delay"/>
        <variable description="Flag indicating whether or not this object&#10;has been through the destroy lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="destroyed" name="destroyed"/>
        <variable description="Function to be executed to hide the node when the data of that node&#10;not matches with the filter.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="hide" name="hide"/>
        <variable description="Index for the nodes content.&lt;!--{&quot;outputType&quot;:&quot;java.util.ArrayList&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="index" name="index"/>
        <variable description="Flag indicating whether or not this object&#10;has been through the init lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="initialized" name="initialized"/>
        <variable description="The &lt;code&gt;value&lt;/code&gt; of this input node is used to filter the&#10;results.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="input" name="input"/>
        <variable description="The input &lt;code&gt;value&lt;/code&gt; need to matches with this RegExp to be&#10;accept as a filter (i.e., in order to accept only digits you&#10;could use /\d+/g).&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="matchRegex" name="matchRegex"/>
        <variable description="Nodes to be indexed for the filtering.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="nodes" name="nodes"/>
        <variable description="Function to be executed to show the node when the data of that node&#10;matches with the filter.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="show" name="show"/>
        <variable description="Fires when the value for the configuration attribute 'data' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDataChange" name="afterDataChange"/>
        <variable description="Fires when the value for the configuration attribute 'delay' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDelayChange" name="afterDelayChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroy" name="afterDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroyedChange" name="afterDestroyedChange"/>
        <variable description="Fires when the value for the configuration attribute 'hide' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHideChange" name="afterHideChange"/>
        <variable description="Fires when the value for the configuration attribute 'index' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterIndexChange" name="afterIndexChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInit" name="afterInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInitializedChange" name="afterInitializedChange"/>
        <variable description="Fires when the value for the configuration attribute 'input' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInputChange" name="afterInputChange"/>
        <variable description="Fires when the value for the configuration attribute 'matchRegex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterMatchRegexChange" name="afterMatchRegexChange"/>
        <variable description="Fires when the value for the configuration attribute 'nodes' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterNodesChange" name="afterNodesChange"/>
        <variable description="Fires when the value for the configuration attribute 'show' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterShowChange" name="afterShowChange"/>
        <variable description="Fires when the value for the configuration attribute 'data' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDataChange" name="onDataChange"/>
        <variable description="Fires when the value for the configuration attribute 'delay' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDelayChange" name="onDelayChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroy" name="onDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroyedChange" name="onDestroyedChange"/>
        <variable description="Fires when the value for the configuration attribute 'hide' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHideChange" name="onHideChange"/>
        <variable description="Fires when the value for the configuration attribute 'index' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onIndexChange" name="onIndexChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInit" name="onInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInitializedChange" name="onInitializedChange"/>
        <variable description="Fires when the value for the configuration attribute 'input' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInputChange" name="onInputChange"/>
        <variable description="Fires when the value for the configuration attribute 'matchRegex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onMatchRegexChange" name="onMatchRegexChange"/>
        <variable description="Fires when the value for the configuration attribute 'nodes' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onNodesChange" name="onNodesChange"/>
        <variable description="Fires when the value for the configuration attribute 'show' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onShowChange" name="onShowChange"/>
      </item>
      <item class="com.liferay.ide.taglib.ui.snippets.AlloyTagSnippetInsertion" description="loading-mask" id="com.liferay.ide.ui.snippets.item.loading-mask" label="loading-mask" smallicon="icons/snippets/tag-generic.gif">
        <content>
          &lt;alloy:loading-mask${destroyed}${host}${initialized}${messageEl}${strings}${target}${afterDestroy}${afterDestroyedChange}${afterHostChange}${afterInit}${afterInitializedChange}${afterMessageElChange}${afterStringsChange}${afterTargetChange}${onDestroy}${onDestroyedChange}${onHostChange}${onInit}${onInitializedChange}${onMessageElChange}${onStringsChange}${onTargetChange}&gt;&lt;/alloy:loading-mask&gt;
        </content>
        <variable description="Flag indicating whether or not this object&#10;has been through the destroy lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="destroyed" name="destroyed"/>
        <variable description="The plugin's host object.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="host" name="host"/>
        <variable description="Flag indicating whether or not this object&#10;has been through the init lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="initialized" name="initialized"/>
        <variable description="Node element to display the message.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="messageEl" name="messageEl"/>
        <variable description="Strings used on the LoadingMask. See&#10;&lt;a href=&quot;Widget.html#method_strings&quot;&gt;strings&lt;/a&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.util.HashMap&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="strings" name="strings"/>
        <variable description="Node where the mask will be positioned and re-dimensioned.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="target" name="target"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroy" name="afterDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroyedChange" name="afterDestroyedChange"/>
        <variable description="Fires when the value for the configuration attribute 'host' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHostChange" name="afterHostChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInit" name="afterInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInitializedChange" name="afterInitializedChange"/>
        <variable description="Fires when the value for the configuration attribute 'messageEl' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterMessageElChange" name="afterMessageElChange"/>
        <variable description="Fires when the value for the configuration attribute 'strings' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterStringsChange" name="afterStringsChange"/>
        <variable description="Fires when the value for the configuration attribute 'target' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTargetChange" name="afterTargetChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroy" name="onDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroyedChange" name="onDestroyedChange"/>
        <variable description="Fires when the value for the configuration attribute 'host' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHostChange" name="onHostChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInit" name="onInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInitializedChange" name="onInitializedChange"/>
        <variable description="Fires when the value for the configuration attribute 'messageEl' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onMessageElChange" name="onMessageElChange"/>
        <variable description="Fires when the value for the configuration attribute 'strings' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onStringsChange" name="onStringsChange"/>
        <variable description="Fires when the value for the configuration attribute 'target' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTargetChange" name="onTargetChange"/>
      </item>
      <item class="com.liferay.ide.taglib.ui.snippets.AlloyTagSnippetInsertion" description="nested-list" id="com.liferay.ide.ui.snippets.item.nested-list" label="nested-list" smallicon="icons/snippets/tag-generic.gif">
        <content>
          &lt;alloy:nested-list${destroyed}${initialized}${afterDestroy}${afterDestroyedChange}${afterInit}${afterInitializedChange}${onDestroy}${onDestroyedChange}${onInit}${onInitializedChange}&gt;&lt;/alloy:nested-list&gt;
        </content>
        <variable description="Flag indicating whether or not this object&#10;has been through the destroy lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="destroyed" name="destroyed"/>
        <variable description="Flag indicating whether or not this object&#10;has been through the init lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="initialized" name="initialized"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroy" name="afterDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroyedChange" name="afterDestroyedChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInit" name="afterInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInitializedChange" name="afterInitializedChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroy" name="onDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroyedChange" name="onDestroyedChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInit" name="onInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInitializedChange" name="onInitializedChange"/>
      </item>
      <item class="com.liferay.ide.taglib.ui.snippets.AlloyTagSnippetInsertion" description="overlay-base" id="com.liferay.ide.ui.snippets.item.overlay-base" label="overlay-base" smallicon="icons/snippets/tag-generic.gif">
        <content>
          &lt;alloy:overlay-base${align}${overlaybaseBodyContent}${boundingBox}${centered}${constrain}${contentBox}${cssClass}${destroyed}${disabled}${fillHeight}${focused}${footerContent}${headerContent}${height}${hideClass}${overlaybaseId}${initialized}${locale}${preventOverlap}${render}${rendered}${shim}${srcNode}${strings}${tabIndex}${useARIA}${visible}${width}${x}${xy}${y}${zIndex}${afterAlignChange}${afterBodyContentChange}${afterBoundingBoxChange}${afterCenteredChange}${afterConstrainChange}${afterContentBoxChange}${afterCssClassChange}${afterDestroy}${afterDestroyedChange}${afterDisabledChange}${afterFillHeightChange}${afterFocusedChange}${afterFooterContentChange}${afterHeaderContentChange}${afterHeightChange}${afterHideClassChange}${afterIdChange}${afterInit}${afterInitializedChange}${afterLocaleChange}${afterPreventOverlapChange}${afterRenderChange}${afterRenderedChange}${afterShimChange}${afterSrcNodeChange}${afterStringsChange}${afterTabIndexChange}${afterUseARIAChange}${afterVisibleChange}${afterContentUpdate}${afterRender}${afterWidthChange}${afterXChange}${afterXyChange}${afterYChange}${afterZIndexChange}${onAlignChange}${onBodyContentChange}${onBoundingBoxChange}${onCenteredChange}${onConstrainChange}${onContentBoxChange}${onCssClassChange}${onDestroy}${onDestroyedChange}${onDisabledChange}${onFillHeightChange}${onFocusedChange}${onFooterContentChange}${onHeaderContentChange}${onHeightChange}${onHideClassChange}${onIdChange}${onInit}${onInitializedChange}${onLocaleChange}${onPreventOverlapChange}${onRenderChange}${onRenderedChange}${onShimChange}${onSrcNodeChange}${onStringsChange}${onTabIndexChange}${onUseARIAChange}${onVisibleChange}${onContentUpdate}${onRender}${onWidthChange}${onXChange}${onXyChange}${onYChange}${onZIndexChange}&gt;&lt;/alloy:overlay-base&gt;
        </content>
        <variable description="&lt;!--{&quot;outputType&quot;:&quot;java.util.HashMap&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="align" name="align"/>
        <variable description="The content to be added to the body section. This will replace any existing content&#10;in the body. If you want to append, or insert new content, use the &lt;a href=&quot;#method_setStdModContent&quot;&gt;setStdModContent&lt;/a&gt; method.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="overlaybaseBodyContent" name="overlaybaseBodyContent"/>
        <variable description="The outermost DOM node for the Widget, used for sizing and positioning&#10;of a Widget as well as a containing element for any decorator elements used&#10;for skinning.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="boundingBox" name="boundingBox"/>
        <variable description="A convenience attribute, which can be used as a shortcut for the align attribute.&#10;If set to true, the Widget is centered in the viewport. If set to a node reference or valid selector string,&#10;the Widget will be centered within the node. If set the false, no center positioning is applied.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="centered" name="centered"/>
        <variable description="The node to constrain the widget's bounding box to, when setting xy. Can also be&#10;set to true, to constrain to the viewport.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="constrain" name="constrain"/>
        <variable description="A DOM node that is a direct descendant of a Widget's bounding box that&#10;houses its content.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="contentBox" name="contentBox"/>
        <variable description="CSS class to be automatically added to the &lt;code&gt;boundingBox&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="cssClass" name="cssClass"/>
        <variable description="Flag indicating whether or not this object&#10;has been through the destroy lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="destroyed" name="destroyed"/>
        <variable description="Boolean indicating if the Widget should be disabled. The disabled implementation&#10;is left to the specific classes extending widget.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="disabled" name="disabled"/>
        <variable description="The section (WidgetStdMod.HEADER, WidgetStdMod.BODY or WidgetStdMod.FOOTER) which should be resized to fill the height of the standard module, when a&#10;height is set on the Widget. If a height is not set on the widget, then all sections are sized based on&#10;their content.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="fillHeight" name="fillHeight"/>
        <variable description="Boolean indicating if the Widget, or one of its descendants,&#10;has focus.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="focused" name="focused"/>
        <variable description="The content to be added to the footer section. This will replace any existing content&#10;in the footer. If you want to append, or insert new content, use the &lt;a href=&quot;#method_setStdModContent&quot;&gt;setStdModContent&lt;/a&gt; method.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="footerContent" name="footerContent"/>
        <variable description="The content to be added to the header section. This will replace any existing content&#10;in the header. If you want to append, or insert new content, use the &lt;a href=&quot;#method_setStdModContent&quot;&gt;setStdModContent&lt;/a&gt; method.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="headerContent" name="headerContent"/>
        <variable description="String with units, or number, representing the height of the Widget. If a number is provided,&#10;the default unit, defined by the Widgets DEF_UNIT, property is used.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="height" name="height"/>
        <variable description="css class added to hide the &lt;code&gt;boundingBox&lt;/code&gt; when&#10;&lt;a href=&quot;Component.html#config_visible&quot;&gt;visible&lt;/a&gt; is set to&#10;&lt;code&gt;false&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="hideClass" name="hideClass"/>
        <variable description="&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="overlaybaseId" name="overlaybaseId"/>
        <variable description="Flag indicating whether or not this object&#10;has been through the init lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="initialized" name="initialized"/>
        <variable description="The default locale for the widget. NOTE: Using get/set on the &quot;strings&quot; attribute will&#10;return/set strings for this locale.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="locale" name="locale"/>
        <variable description="If set to true, and WidgetPositionAlign is also added to the Widget,&#10;constrained positioning will attempt to prevent the widget's bounding box from overlapping&#10;the element to which it has been aligned, by flipping the orientation of the alignment&#10;for corner based alignments&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="preventOverlap" name="preventOverlap"/>
        <variable description="If &lt;code&gt;true&lt;/code&gt; the render phase will be autimatically invoked&#10;preventing the &lt;code&gt;.render()&lt;/code&gt; manual call.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="render" name="render"/>
        <variable description="Flag indicating whether or not this Widget&#10;has been through the render lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="rendered" name="rendered"/>
        <variable description="Boolean flag to indicate whether or not a shim should be added to the Widgets&#10;boundingBox, to protect it from select box bleedthrough.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="shim" name="shim"/>
        <variable description="The DOM node to parse for configuration values, passed to the Widget's HTML_PARSER definition&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="srcNode" name="srcNode"/>
        <variable description="Collection of strings used to label elements of the Widget's UI.&lt;!--{&quot;outputType&quot;:&quot;java.util.HashMap&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="strings" name="strings"/>
        <variable description="Number (between -32767 to 32767) indicating the widget's&#10;position in the default tab flow.  The value is used to set the&#10;&quot;tabIndex&quot; attribute on the widget's bounding box.  Negative values allow&#10;the widget to receive DOM focus programmatically (by calling the focus&#10;method), while being removed from the default tab flow.  A value of&#10;null removes the &quot;tabIndex&quot; attribute from the widget's bounding box.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="tabIndex" name="tabIndex"/>
        <variable description="Boolean indicating if use of the WAI-ARIA Roles and States should be&#10;enabled for the Widget.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="useARIA" name="useARIA"/>
        <variable description="Boolean indicating weather or not the Widget is visible.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="visible" name="visible"/>
        <variable description="String with units, or number, representing the width of the Widget. If a number is provided,&#10;the default unit, defined by the Widgets DEF_UNIT, property is used.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="width" name="width"/>
        <variable description="Page X co-ordinate for the widget. This attribute acts as a facade for the&#10;xy attribute. Changes in position can be monitored by listening for xyChange events.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="x" name="x"/>
        <variable description="Page XY co-ordinate pair for the widget.&lt;!--{&quot;outputType&quot;:&quot;java.util.ArrayList&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="xy" name="xy"/>
        <variable description="Page Y co-ordinate for the widget. This attribute acts as a facade for the&#10;xy attribute. Changes in position can be monitored by listening for xyChange events.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="y" name="y"/>
        <variable description="The z-index to apply to the Widgets boundingBox. Non-numerical values for&#10;zIndex will be converted to 0&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="zIndex" name="zIndex"/>
        <variable description="Fires when the value for the configuration attribute 'align' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterAlignChange" name="afterAlignChange"/>
        <variable description="Fires when the value for the configuration attribute 'bodyContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterBodyContentChange" name="afterBodyContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'boundingBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterBoundingBoxChange" name="afterBoundingBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'centered' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCenteredChange" name="afterCenteredChange"/>
        <variable description="Fires when the value for the configuration attribute 'constrain' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterConstrainChange" name="afterConstrainChange"/>
        <variable description="Fires when the value for the configuration attribute 'contentBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterContentBoxChange" name="afterContentBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'cssClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCssClassChange" name="afterCssClassChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroy" name="afterDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroyedChange" name="afterDestroyedChange"/>
        <variable description="Fires when the value for the configuration attribute 'disabled' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDisabledChange" name="afterDisabledChange"/>
        <variable description="Fires when the value for the configuration attribute 'fillHeight' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterFillHeightChange" name="afterFillHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'focused' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterFocusedChange" name="afterFocusedChange"/>
        <variable description="Fires when the value for the configuration attribute 'footerContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterFooterContentChange" name="afterFooterContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'headerContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHeaderContentChange" name="afterHeaderContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'height' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHeightChange" name="afterHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHideClassChange" name="afterHideClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'id' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterIdChange" name="afterIdChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInit" name="afterInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInitializedChange" name="afterInitializedChange"/>
        <variable description="Fires when the value for the configuration attribute 'locale' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterLocaleChange" name="afterLocaleChange"/>
        <variable description="Fires when the value for the configuration attribute 'preventOverlap' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterPreventOverlapChange" name="afterPreventOverlapChange"/>
        <variable description="Fires when the value for the configuration attribute 'render' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRenderChange" name="afterRenderChange"/>
        <variable description="Fires when the value for the configuration attribute 'rendered' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRenderedChange" name="afterRenderedChange"/>
        <variable description="Fires when the value for the configuration attribute 'shim' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterShimChange" name="afterShimChange"/>
        <variable description="Fires when the value for the configuration attribute 'srcNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterSrcNodeChange" name="afterSrcNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'strings' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterStringsChange" name="afterStringsChange"/>
        <variable description="Fires when the value for the configuration attribute 'tabIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTabIndexChange" name="afterTabIndexChange"/>
        <variable description="Fires when the value for the configuration attribute 'useARIA' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterUseARIAChange" name="afterUseARIAChange"/>
        <variable description="Fires when the value for the configuration attribute 'visible' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterVisibleChange" name="afterVisibleChange"/>
        <variable description="Notification event, which widget implementations can fire, when&#10;they change the content of the widget. This event has no default&#10;behavior and cannot be prevented, so the &quot;on&quot; or &quot;after&quot;&#10;moments are effectively equivalent (with on listeners being invoked before&#10;after listeners).&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterContentUpdate" name="afterContentUpdate"/>
        <variable description="Lifecycle event for the render phase, fired prior to rendering the UI&#10;for the widget (prior to invoking the widget's renderer method).&#10;&lt;p&gt;&#10;Subscribers to the &quot;on&quot; moment of this event, will be notified&#10;before the widget is rendered.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after rendering is complete.&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRender" name="afterRender"/>
        <variable description="Fires when the value for the configuration attribute 'width' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterWidthChange" name="afterWidthChange"/>
        <variable description="Fires when the value for the configuration attribute 'x' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterXChange" name="afterXChange"/>
        <variable description="Fires when the value for the configuration attribute 'xy' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterXyChange" name="afterXyChange"/>
        <variable description="Fires when the value for the configuration attribute 'y' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterYChange" name="afterYChange"/>
        <variable description="Fires when the value for the configuration attribute 'zIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterZIndexChange" name="afterZIndexChange"/>
        <variable description="Fires when the value for the configuration attribute 'align' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onAlignChange" name="onAlignChange"/>
        <variable description="Fires when the value for the configuration attribute 'bodyContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onBodyContentChange" name="onBodyContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'boundingBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onBoundingBoxChange" name="onBoundingBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'centered' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCenteredChange" name="onCenteredChange"/>
        <variable description="Fires when the value for the configuration attribute 'constrain' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onConstrainChange" name="onConstrainChange"/>
        <variable description="Fires when the value for the configuration attribute 'contentBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onContentBoxChange" name="onContentBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'cssClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCssClassChange" name="onCssClassChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroy" name="onDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroyedChange" name="onDestroyedChange"/>
        <variable description="Fires when the value for the configuration attribute 'disabled' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDisabledChange" name="onDisabledChange"/>
        <variable description="Fires when the value for the configuration attribute 'fillHeight' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onFillHeightChange" name="onFillHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'focused' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onFocusedChange" name="onFocusedChange"/>
        <variable description="Fires when the value for the configuration attribute 'footerContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onFooterContentChange" name="onFooterContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'headerContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHeaderContentChange" name="onHeaderContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'height' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHeightChange" name="onHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHideClassChange" name="onHideClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'id' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onIdChange" name="onIdChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInit" name="onInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInitializedChange" name="onInitializedChange"/>
        <variable description="Fires when the value for the configuration attribute 'locale' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onLocaleChange" name="onLocaleChange"/>
        <variable description="Fires when the value for the configuration attribute 'preventOverlap' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onPreventOverlapChange" name="onPreventOverlapChange"/>
        <variable description="Fires when the value for the configuration attribute 'render' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRenderChange" name="onRenderChange"/>
        <variable description="Fires when the value for the configuration attribute 'rendered' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRenderedChange" name="onRenderedChange"/>
        <variable description="Fires when the value for the configuration attribute 'shim' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onShimChange" name="onShimChange"/>
        <variable description="Fires when the value for the configuration attribute 'srcNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onSrcNodeChange" name="onSrcNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'strings' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onStringsChange" name="onStringsChange"/>
        <variable description="Fires when the value for the configuration attribute 'tabIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTabIndexChange" name="onTabIndexChange"/>
        <variable description="Fires when the value for the configuration attribute 'useARIA' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onUseARIAChange" name="onUseARIAChange"/>
        <variable description="Fires when the value for the configuration attribute 'visible' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onVisibleChange" name="onVisibleChange"/>
        <variable description="Notification event, which widget implementations can fire, when&#10;they change the content of the widget. This event has no default&#10;behavior and cannot be prevented, so the &quot;on&quot; or &quot;after&quot;&#10;moments are effectively equivalent (with on listeners being invoked before&#10;after listeners).&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onContentUpdate" name="onContentUpdate"/>
        <variable description="Lifecycle event for the render phase, fired prior to rendering the UI&#10;for the widget (prior to invoking the widget's renderer method).&#10;&lt;p&gt;&#10;Subscribers to the &quot;on&quot; moment of this event, will be notified&#10;before the widget is rendered.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after rendering is complete.&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRender" name="onRender"/>
        <variable description="Fires when the value for the configuration attribute 'width' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onWidthChange" name="onWidthChange"/>
        <variable description="Fires when the value for the configuration attribute 'x' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onXChange" name="onXChange"/>
        <variable description="Fires when the value for the configuration attribute 'xy' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onXyChange" name="onXyChange"/>
        <variable description="Fires when the value for the configuration attribute 'y' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onYChange" name="onYChange"/>
        <variable description="Fires when the value for the configuration attribute 'zIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onZIndexChange" name="onZIndexChange"/>
      </item>
      <item class="com.liferay.ide.taglib.ui.snippets.AlloyTagSnippetInsertion" description="overlay-context" id="com.liferay.ide.ui.snippets.item.overlay-context" label="overlay-context" smallicon="icons/snippets/tag-generic.gif">
        <content>
          &lt;alloy:overlay-context${align}${overlaycontextBodyContent}${boundingBox}${cancellableHide}${centered}${constrain}${contentBox}${cssClass}${currentNode}${destroyed}${disabled}${fillHeight}${focused}${footerContent}${headerContent}${height}${hideClass}${hideDelay}${hideOn}${hideOnDocumentClick}${overlaycontextId}${initialized}${locale}${preventOverlap}${render}${rendered}${shim}${showDelay}${showOn}${srcNode}${strings}${tabIndex}${trigger}${useARIA}${visible}${width}${x}${xy}${y}${zIndex}${afterAlignChange}${afterBodyContentChange}${afterBoundingBoxChange}${afterCancellableHideChange}${afterCenteredChange}${afterConstrainChange}${afterContentBoxChange}${afterCssClassChange}${afterCurrentNodeChange}${afterDestroy}${afterDestroyedChange}${afterDisabledChange}${afterFillHeightChange}${afterFocusedChange}${afterFooterContentChange}${afterHeaderContentChange}${afterHeightChange}${afterHideClassChange}${afterHideDelayChange}${afterHideOnChange}${afterHideOnDocumentClickChange}${afterIdChange}${afterInit}${afterInitializedChange}${afterLocaleChange}${afterPreventOverlapChange}${afterRenderChange}${afterRenderedChange}${afterShimChange}${afterShowDelayChange}${afterShowOnChange}${afterSrcNodeChange}${afterStringsChange}${afterTabIndexChange}${afterTriggerChange}${afterUseARIAChange}${afterVisibleChange}${afterContentUpdate}${afterRender}${afterWidthChange}${afterXChange}${afterXyChange}${afterYChange}${afterZIndexChange}${onAlignChange}${onBodyContentChange}${onBoundingBoxChange}${onCancellableHideChange}${onCenteredChange}${onConstrainChange}${onContentBoxChange}${onCssClassChange}${onCurrentNodeChange}${onDestroy}${onDestroyedChange}${onDisabledChange}${onFillHeightChange}${onFocusedChange}${onFooterContentChange}${onHeaderContentChange}${onHeightChange}${onHideClassChange}${onHideDelayChange}${onHideOnChange}${onHideOnDocumentClickChange}${onIdChange}${onInit}${onInitializedChange}${onLocaleChange}${onPreventOverlapChange}${onRenderChange}${onRenderedChange}${onShimChange}${onShowDelayChange}${onShowOnChange}${onSrcNodeChange}${onStringsChange}${onTabIndexChange}${onTriggerChange}${onUseARIAChange}${onVisibleChange}${onContentUpdate}${onRender}${onWidthChange}${onXChange}${onXyChange}${onYChange}${onZIndexChange}&gt;&lt;/alloy:overlay-context&gt;
        </content>
        <variable description="Inherited from &lt;a href=&quot;Overlay.html#config_align&quot;&gt;Overlay&lt;/a&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.util.HashMap&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="align" name="align"/>
        <variable description="The content to be added to the body section. This will replace any existing content&#10;in the body. If you want to append, or insert new content, use the &lt;a href=&quot;#method_setStdModContent&quot;&gt;setStdModContent&lt;/a&gt; method.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="overlaycontextBodyContent" name="overlaycontextBodyContent"/>
        <variable description="The outermost DOM node for the Widget, used for sizing and positioning&#10;of a Widget as well as a containing element for any decorator elements used&#10;for skinning.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="boundingBox" name="boundingBox"/>
        <variable description="Cancel auto hide delay if the user interact with the Overlay&#10;(focus, click, mouseover)&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="cancellableHide" name="cancellableHide"/>
        <variable description="A convenience attribute, which can be used as a shortcut for the align attribute.&#10;If set to true, the Widget is centered in the viewport. If set to a node reference or valid selector string,&#10;the Widget will be centered within the node. If set the false, no center positioning is applied.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="centered" name="centered"/>
        <variable description="The node to constrain the widget's bounding box to, when setting xy. Can also be&#10;set to true, to constrain to the viewport.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="constrain" name="constrain"/>
        <variable description="A DOM node that is a direct descendant of a Widget's bounding box that&#10;houses its content.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="contentBox" name="contentBox"/>
        <variable description="CSS class to be automatically added to the &lt;code&gt;boundingBox&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="cssClass" name="cssClass"/>
        <variable description="OverlayContext allow multiple elements to be the&#10;&lt;a href=&quot;OverlayContext.html#config_trigger&quot;&gt;trigger&lt;/a&gt;, the&#10;currentNode stores the current active one.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="currentNode" name="currentNode"/>
        <variable description="Flag indicating whether or not this object&#10;has been through the destroy lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="destroyed" name="destroyed"/>
        <variable description="Boolean indicating if the Widget should be disabled. The disabled implementation&#10;is left to the specific classes extending widget.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="disabled" name="disabled"/>
        <variable description="The section (WidgetStdMod.HEADER, WidgetStdMod.BODY or WidgetStdMod.FOOTER) which should be resized to fill the height of the standard module, when a&#10;height is set on the Widget. If a height is not set on the widget, then all sections are sized based on&#10;their content.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="fillHeight" name="fillHeight"/>
        <variable description="Boolean indicating if the Widget, or one of its descendants,&#10;has focus.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="focused" name="focused"/>
        <variable description="The content to be added to the footer section. This will replace any existing content&#10;in the footer. If you want to append, or insert new content, use the &lt;a href=&quot;#method_setStdModContent&quot;&gt;setStdModContent&lt;/a&gt; method.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="footerContent" name="footerContent"/>
        <variable description="The content to be added to the header section. This will replace any existing content&#10;in the header. If you want to append, or insert new content, use the &lt;a href=&quot;#method_setStdModContent&quot;&gt;setStdModContent&lt;/a&gt; method.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="headerContent" name="headerContent"/>
        <variable description="String with units, or number, representing the height of the Widget. If a number is provided,&#10;the default unit, defined by the Widgets DEF_UNIT, property is used.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="height" name="height"/>
        <variable description="css class added to hide the &lt;code&gt;boundingBox&lt;/code&gt; when&#10;&lt;a href=&quot;Component.html#config_visible&quot;&gt;visible&lt;/a&gt; is set to&#10;&lt;code&gt;false&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="hideClass" name="hideClass"/>
        <variable description="Number of milliseconds after the hide method is invoked to hide the&#10;OverlayContext.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="hideDelay" name="hideDelay"/>
        <variable description="The event which is responsible to hide the OverlayContext.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="hideOn" name="hideOn"/>
        <variable description="If true the instance is registered on the&#10;&lt;a href=&quot;OverlayContextManager.html&quot;&gt;OverlayContextManager&lt;/a&gt; static&#10;class and will be hide when the user click on document.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="hideOnDocumentClick" name="hideOnDocumentClick"/>
        <variable description="&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="overlaycontextId" name="overlaycontextId"/>
        <variable description="Flag indicating whether or not this object&#10;has been through the init lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="initialized" name="initialized"/>
        <variable description="The default locale for the widget. NOTE: Using get/set on the &quot;strings&quot; attribute will&#10;return/set strings for this locale.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="locale" name="locale"/>
        <variable description="If set to true, and WidgetPositionAlign is also added to the Widget,&#10;constrained positioning will attempt to prevent the widget's bounding box from overlapping&#10;the element to which it has been aligned, by flipping the orientation of the alignment&#10;for corner based alignments&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="preventOverlap" name="preventOverlap"/>
        <variable description="If &lt;code&gt;true&lt;/code&gt; the render phase will be autimatically invoked&#10;preventing the &lt;code&gt;.render()&lt;/code&gt; manual call.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="render" name="render"/>
        <variable description="Flag indicating whether or not this Widget&#10;has been through the render lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="rendered" name="rendered"/>
        <variable description="Boolean flag to indicate whether or not a shim should be added to the Widgets&#10;boundingBox, to protect it from select box bleedthrough.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="shim" name="shim"/>
        <variable description="Number of milliseconds after the show method is invoked to show the&#10;OverlayContext.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="showDelay" name="showDelay"/>
        <variable description="The event which is responsible to show the OverlayContext.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="showOn" name="showOn"/>
        <variable description="The DOM node to parse for configuration values, passed to the Widget's HTML_PARSER definition&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="srcNode" name="srcNode"/>
        <variable description="Collection of strings used to label elements of the Widget's UI.&lt;!--{&quot;outputType&quot;:&quot;java.util.HashMap&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="strings" name="strings"/>
        <variable description="Number (between -32767 to 32767) indicating the widget's&#10;position in the default tab flow.  The value is used to set the&#10;&quot;tabIndex&quot; attribute on the widget's bounding box.  Negative values allow&#10;the widget to receive DOM focus programmatically (by calling the focus&#10;method), while being removed from the default tab flow.  A value of&#10;null removes the &quot;tabIndex&quot; attribute from the widget's bounding box.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="tabIndex" name="tabIndex"/>
        <variable description="Node, NodeList or Selector which will be used as trigger elements&#10;to show or hide the OverlayContext.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="trigger" name="trigger"/>
        <variable description="True if Overlay should use ARIA plugin&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="useARIA" name="useARIA"/>
        <variable description="If true the OverlayContext is visible by default after the render phase.&#10;Inherited from &lt;a href=&quot;Overlay.html&quot;&gt;Overlay&lt;/a&gt;.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="visible" name="visible"/>
        <variable description="String with units, or number, representing the width of the Widget. If a number is provided,&#10;the default unit, defined by the Widgets DEF_UNIT, property is used.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="width" name="width"/>
        <variable description="Page X co-ordinate for the widget. This attribute acts as a facade for the&#10;xy attribute. Changes in position can be monitored by listening for xyChange events.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="x" name="x"/>
        <variable description="Page XY co-ordinate pair for the widget.&lt;!--{&quot;outputType&quot;:&quot;java.util.ArrayList&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="xy" name="xy"/>
        <variable description="Page Y co-ordinate for the widget. This attribute acts as a facade for the&#10;xy attribute. Changes in position can be monitored by listening for xyChange events.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="y" name="y"/>
        <variable description="The z-index to apply to the Widgets boundingBox. Non-numerical values for&#10;zIndex will be converted to 0&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="zIndex" name="zIndex"/>
        <variable description="Fires when the value for the configuration attribute 'align' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterAlignChange" name="afterAlignChange"/>
        <variable description="Fires when the value for the configuration attribute 'bodyContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterBodyContentChange" name="afterBodyContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'boundingBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterBoundingBoxChange" name="afterBoundingBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'cancellableHide' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCancellableHideChange" name="afterCancellableHideChange"/>
        <variable description="Fires when the value for the configuration attribute 'centered' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCenteredChange" name="afterCenteredChange"/>
        <variable description="Fires when the value for the configuration attribute 'constrain' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterConstrainChange" name="afterConstrainChange"/>
        <variable description="Fires when the value for the configuration attribute 'contentBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterContentBoxChange" name="afterContentBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'cssClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCssClassChange" name="afterCssClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'currentNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCurrentNodeChange" name="afterCurrentNodeChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroy" name="afterDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroyedChange" name="afterDestroyedChange"/>
        <variable description="Fires when the value for the configuration attribute 'disabled' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDisabledChange" name="afterDisabledChange"/>
        <variable description="Fires when the value for the configuration attribute 'fillHeight' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterFillHeightChange" name="afterFillHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'focused' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterFocusedChange" name="afterFocusedChange"/>
        <variable description="Fires when the value for the configuration attribute 'footerContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterFooterContentChange" name="afterFooterContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'headerContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHeaderContentChange" name="afterHeaderContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'height' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHeightChange" name="afterHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHideClassChange" name="afterHideClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideDelay' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHideDelayChange" name="afterHideDelayChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideOn' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHideOnChange" name="afterHideOnChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideOnDocumentClick' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHideOnDocumentClickChange" name="afterHideOnDocumentClickChange"/>
        <variable description="Fires when the value for the configuration attribute 'id' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterIdChange" name="afterIdChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInit" name="afterInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInitializedChange" name="afterInitializedChange"/>
        <variable description="Fires when the value for the configuration attribute 'locale' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterLocaleChange" name="afterLocaleChange"/>
        <variable description="Fires when the value for the configuration attribute 'preventOverlap' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterPreventOverlapChange" name="afterPreventOverlapChange"/>
        <variable description="Fires when the value for the configuration attribute 'render' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRenderChange" name="afterRenderChange"/>
        <variable description="Fires when the value for the configuration attribute 'rendered' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRenderedChange" name="afterRenderedChange"/>
        <variable description="Fires when the value for the configuration attribute 'shim' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterShimChange" name="afterShimChange"/>
        <variable description="Fires when the value for the configuration attribute 'showDelay' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterShowDelayChange" name="afterShowDelayChange"/>
        <variable description="Fires when the value for the configuration attribute 'showOn' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterShowOnChange" name="afterShowOnChange"/>
        <variable description="Fires when the value for the configuration attribute 'srcNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterSrcNodeChange" name="afterSrcNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'strings' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterStringsChange" name="afterStringsChange"/>
        <variable description="Fires when the value for the configuration attribute 'tabIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTabIndexChange" name="afterTabIndexChange"/>
        <variable description="Fires when the value for the configuration attribute 'trigger' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTriggerChange" name="afterTriggerChange"/>
        <variable description="Fires when the value for the configuration attribute 'useARIA' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterUseARIAChange" name="afterUseARIAChange"/>
        <variable description="Fires when the value for the configuration attribute 'visible' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterVisibleChange" name="afterVisibleChange"/>
        <variable description="Notification event, which widget implementations can fire, when&#10;they change the content of the widget. This event has no default&#10;behavior and cannot be prevented, so the &quot;on&quot; or &quot;after&quot;&#10;moments are effectively equivalent (with on listeners being invoked before&#10;after listeners).&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterContentUpdate" name="afterContentUpdate"/>
        <variable description="Lifecycle event for the render phase, fired prior to rendering the UI&#10;for the widget (prior to invoking the widget's renderer method).&#10;&lt;p&gt;&#10;Subscribers to the &quot;on&quot; moment of this event, will be notified&#10;before the widget is rendered.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after rendering is complete.&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRender" name="afterRender"/>
        <variable description="Fires when the value for the configuration attribute 'width' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterWidthChange" name="afterWidthChange"/>
        <variable description="Fires when the value for the configuration attribute 'x' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterXChange" name="afterXChange"/>
        <variable description="Fires when the value for the configuration attribute 'xy' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterXyChange" name="afterXyChange"/>
        <variable description="Fires when the value for the configuration attribute 'y' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterYChange" name="afterYChange"/>
        <variable description="Fires when the value for the configuration attribute 'zIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterZIndexChange" name="afterZIndexChange"/>
        <variable description="Fires when the value for the configuration attribute 'align' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onAlignChange" name="onAlignChange"/>
        <variable description="Fires when the value for the configuration attribute 'bodyContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onBodyContentChange" name="onBodyContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'boundingBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onBoundingBoxChange" name="onBoundingBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'cancellableHide' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCancellableHideChange" name="onCancellableHideChange"/>
        <variable description="Fires when the value for the configuration attribute 'centered' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCenteredChange" name="onCenteredChange"/>
        <variable description="Fires when the value for the configuration attribute 'constrain' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onConstrainChange" name="onConstrainChange"/>
        <variable description="Fires when the value for the configuration attribute 'contentBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onContentBoxChange" name="onContentBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'cssClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCssClassChange" name="onCssClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'currentNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCurrentNodeChange" name="onCurrentNodeChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroy" name="onDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroyedChange" name="onDestroyedChange"/>
        <variable description="Fires when the value for the configuration attribute 'disabled' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDisabledChange" name="onDisabledChange"/>
        <variable description="Fires when the value for the configuration attribute 'fillHeight' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onFillHeightChange" name="onFillHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'focused' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onFocusedChange" name="onFocusedChange"/>
        <variable description="Fires when the value for the configuration attribute 'footerContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onFooterContentChange" name="onFooterContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'headerContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHeaderContentChange" name="onHeaderContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'height' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHeightChange" name="onHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHideClassChange" name="onHideClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideDelay' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHideDelayChange" name="onHideDelayChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideOn' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHideOnChange" name="onHideOnChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideOnDocumentClick' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHideOnDocumentClickChange" name="onHideOnDocumentClickChange"/>
        <variable description="Fires when the value for the configuration attribute 'id' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onIdChange" name="onIdChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInit" name="onInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInitializedChange" name="onInitializedChange"/>
        <variable description="Fires when the value for the configuration attribute 'locale' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onLocaleChange" name="onLocaleChange"/>
        <variable description="Fires when the value for the configuration attribute 'preventOverlap' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onPreventOverlapChange" name="onPreventOverlapChange"/>
        <variable description="Fires when the value for the configuration attribute 'render' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRenderChange" name="onRenderChange"/>
        <variable description="Fires when the value for the configuration attribute 'rendered' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRenderedChange" name="onRenderedChange"/>
        <variable description="Fires when the value for the configuration attribute 'shim' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onShimChange" name="onShimChange"/>
        <variable description="Fires when the value for the configuration attribute 'showDelay' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onShowDelayChange" name="onShowDelayChange"/>
        <variable description="Fires when the value for the configuration attribute 'showOn' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onShowOnChange" name="onShowOnChange"/>
        <variable description="Fires when the value for the configuration attribute 'srcNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onSrcNodeChange" name="onSrcNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'strings' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onStringsChange" name="onStringsChange"/>
        <variable description="Fires when the value for the configuration attribute 'tabIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTabIndexChange" name="onTabIndexChange"/>
        <variable description="Fires when the value for the configuration attribute 'trigger' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTriggerChange" name="onTriggerChange"/>
        <variable description="Fires when the value for the configuration attribute 'useARIA' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onUseARIAChange" name="onUseARIAChange"/>
        <variable description="Fires when the value for the configuration attribute 'visible' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onVisibleChange" name="onVisibleChange"/>
        <variable description="Notification event, which widget implementations can fire, when&#10;they change the content of the widget. This event has no default&#10;behavior and cannot be prevented, so the &quot;on&quot; or &quot;after&quot;&#10;moments are effectively equivalent (with on listeners being invoked before&#10;after listeners).&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onContentUpdate" name="onContentUpdate"/>
        <variable description="Lifecycle event for the render phase, fired prior to rendering the UI&#10;for the widget (prior to invoking the widget's renderer method).&#10;&lt;p&gt;&#10;Subscribers to the &quot;on&quot; moment of this event, will be notified&#10;before the widget is rendered.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after rendering is complete.&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRender" name="onRender"/>
        <variable description="Fires when the value for the configuration attribute 'width' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onWidthChange" name="onWidthChange"/>
        <variable description="Fires when the value for the configuration attribute 'x' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onXChange" name="onXChange"/>
        <variable description="Fires when the value for the configuration attribute 'xy' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onXyChange" name="onXyChange"/>
        <variable description="Fires when the value for the configuration attribute 'y' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onYChange" name="onYChange"/>
        <variable description="Fires when the value for the configuration attribute 'zIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onZIndexChange" name="onZIndexChange"/>
      </item>
      <item class="com.liferay.ide.taglib.ui.snippets.AlloyTagSnippetInsertion" description="overlay-context-panel" id="com.liferay.ide.ui.snippets.item.overlay-context-panel" label="overlay-context-panel" smallicon="icons/snippets/tag-generic.gif">
        <content>
          &lt;alloy:overlay-context-panel${align}${anim}${arrow}${overlaycontextpanelBodyContent}${boundingBox}${cancellableHide}${centered}${constrain}${contentBox}${cssClass}${currentNode}${destroyed}${disabled}${fillHeight}${focused}${footerContent}${headerContent}${height}${hideClass}${hideDelay}${hideOn}${hideOnDocumentClick}${overlaycontextpanelId}${initialized}${locale}${preventOverlap}${render}${rendered}${shim}${showArrow}${showDelay}${showOn}${srcNode}${stack}${strings}${tabIndex}${trigger}${useARIA}${visible}${width}${x}${xy}${y}${zIndex}${afterAlignChange}${afterAnimChange}${afterArrowChange}${afterBodyContentChange}${afterBoundingBoxChange}${afterCancellableHideChange}${afterCenteredChange}${afterConstrainChange}${afterContentBoxChange}${afterCssClassChange}${afterCurrentNodeChange}${afterDestroy}${afterDestroyedChange}${afterDisabledChange}${afterFillHeightChange}${afterFocusedChange}${afterFooterContentChange}${afterHeaderContentChange}${afterHeightChange}${afterHideClassChange}${afterHideDelayChange}${afterHideOnChange}${afterHideOnDocumentClickChange}${afterIdChange}${afterInit}${afterInitializedChange}${afterLocaleChange}${afterPreventOverlapChange}${afterRenderChange}${afterRenderedChange}${afterShimChange}${afterShowArrowChange}${afterShowDelayChange}${afterShowOnChange}${afterSrcNodeChange}${afterStackChange}${afterStringsChange}${afterTabIndexChange}${afterTriggerChange}${afterUseARIAChange}${afterVisibleChange}${afterContentUpdate}${afterRender}${afterWidthChange}${afterXChange}${afterXyChange}${afterYChange}${afterZIndexChange}${onAlignChange}${onAnimChange}${onArrowChange}${onBodyContentChange}${onBoundingBoxChange}${onCancellableHideChange}${onCenteredChange}${onConstrainChange}${onContentBoxChange}${onCssClassChange}${onCurrentNodeChange}${onDestroy}${onDestroyedChange}${onDisabledChange}${onFillHeightChange}${onFocusedChange}${onFooterContentChange}${onHeaderContentChange}${onHeightChange}${onHideClassChange}${onHideDelayChange}${onHideOnChange}${onHideOnDocumentClickChange}${onIdChange}${onInit}${onInitializedChange}${onLocaleChange}${onPreventOverlapChange}${onRenderChange}${onRenderedChange}${onShimChange}${onShowArrowChange}${onShowDelayChange}${onShowOnChange}${onSrcNodeChange}${onStackChange}${onStringsChange}${onTabIndexChange}${onTriggerChange}${onUseARIAChange}${onVisibleChange}${onContentUpdate}${onRender}${onWidthChange}${onXChange}${onXyChange}${onYChange}${onZIndexChange}&gt;&lt;/alloy:overlay-context-panel&gt;
        </content>
        <variable description="Inherited from &lt;a href=&quot;Overlay.html#config_align&quot;&gt;Overlay&lt;/a&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.util.HashMap&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="align" name="align"/>
        <variable description="Enable or disable the animation for hide and show. Used as the&#10;&lt;a href=&quot;Anim.html&quot;&gt;Anim&lt;/a&gt; configuration attributes.&#10;&lt;pre&gt;&lt;code&gt;anim: {&#10;show: {&#10;duration: .9&#10;},&#10;hide: {&#10;duration: .2&#10;}&#10;}&#10;&lt;/code&gt;&lt;/pre&gt;&lt;!--{&quot;outputType&quot;:&quot;java.util.HashMap&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="anim" name="anim"/>
        <variable description="Position where the arrow will be placed. See&#10;&lt;a href=&quot;OverlayContextPanel.html#config_showArrow&quot;&gt;showArrow&lt;/a&gt;. If it's&#10;not set, it will get the value set on the&#10;&lt;a href=&quot;OverlayContext.html#config_align&quot;&gt;align&lt;/a&gt; point. Here is a&#10;list of valid arrows 'bc', 'bl', 'br', 'cc', 'lb', 'lc', 'lt', 'rb',&#10;'rc', 'rl'.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="arrow" name="arrow"/>
        <variable description="The content to be added to the body section. This will replace any existing content&#10;in the body. If you want to append, or insert new content, use the &lt;a href=&quot;#method_setStdModContent&quot;&gt;setStdModContent&lt;/a&gt; method.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="overlaycontextpanelBodyContent" name="overlaycontextpanelBodyContent"/>
        <variable description="The outermost DOM node for the Widget, used for sizing and positioning&#10;of a Widget as well as a containing element for any decorator elements used&#10;for skinning.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="boundingBox" name="boundingBox"/>
        <variable description="Cancel auto hide delay if the user interact with the Overlay&#10;(focus, click, mouseover)&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="cancellableHide" name="cancellableHide"/>
        <variable description="A convenience attribute, which can be used as a shortcut for the align attribute.&#10;If set to true, the Widget is centered in the viewport. If set to a node reference or valid selector string,&#10;the Widget will be centered within the node. If set the false, no center positioning is applied.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="centered" name="centered"/>
        <variable description="The node to constrain the widget's bounding box to, when setting xy. Can also be&#10;set to true, to constrain to the viewport.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="constrain" name="constrain"/>
        <variable description="A DOM node that is a direct descendant of a Widget's bounding box that&#10;houses its content.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="contentBox" name="contentBox"/>
        <variable description="CSS class to be automatically added to the &lt;code&gt;boundingBox&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="cssClass" name="cssClass"/>
        <variable description="OverlayContext allow multiple elements to be the&#10;&lt;a href=&quot;OverlayContext.html#config_trigger&quot;&gt;trigger&lt;/a&gt;, the&#10;currentNode stores the current active one.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="currentNode" name="currentNode"/>
        <variable description="Flag indicating whether or not this object&#10;has been through the destroy lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="destroyed" name="destroyed"/>
        <variable description="Boolean indicating if the Widget should be disabled. The disabled implementation&#10;is left to the specific classes extending widget.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="disabled" name="disabled"/>
        <variable description="The section (WidgetStdMod.HEADER, WidgetStdMod.BODY or WidgetStdMod.FOOTER) which should be resized to fill the height of the standard module, when a&#10;height is set on the Widget. If a height is not set on the widget, then all sections are sized based on&#10;their content.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="fillHeight" name="fillHeight"/>
        <variable description="Boolean indicating if the Widget, or one of its descendants,&#10;has focus.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="focused" name="focused"/>
        <variable description="The content to be added to the footer section. This will replace any existing content&#10;in the footer. If you want to append, or insert new content, use the &lt;a href=&quot;#method_setStdModContent&quot;&gt;setStdModContent&lt;/a&gt; method.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="footerContent" name="footerContent"/>
        <variable description="The content to be added to the header section. This will replace any existing content&#10;in the header. If you want to append, or insert new content, use the &lt;a href=&quot;#method_setStdModContent&quot;&gt;setStdModContent&lt;/a&gt; method.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="headerContent" name="headerContent"/>
        <variable description="String with units, or number, representing the height of the Widget. If a number is provided,&#10;the default unit, defined by the Widgets DEF_UNIT, property is used.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="height" name="height"/>
        <variable description="css class added to hide the &lt;code&gt;boundingBox&lt;/code&gt; when&#10;&lt;a href=&quot;Component.html#config_visible&quot;&gt;visible&lt;/a&gt; is set to&#10;&lt;code&gt;false&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="hideClass" name="hideClass"/>
        <variable description="Number of milliseconds after the hide method is invoked to hide the&#10;OverlayContext.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="hideDelay" name="hideDelay"/>
        <variable description="See &lt;a href=&quot;OverlayContext.html#config_hideOn&quot;&gt;hideOn&lt;/a&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="hideOn" name="hideOn"/>
        <variable description="If true the instance is registered on the&#10;&lt;a href=&quot;OverlayContextManager.html&quot;&gt;OverlayContextManager&lt;/a&gt; static&#10;class and will be hide when the user click on document.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="hideOnDocumentClick" name="hideOnDocumentClick"/>
        <variable description="&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="overlaycontextpanelId" name="overlaycontextpanelId"/>
        <variable description="Flag indicating whether or not this object&#10;has been through the init lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="initialized" name="initialized"/>
        <variable description="The default locale for the widget. NOTE: Using get/set on the &quot;strings&quot; attribute will&#10;return/set strings for this locale.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="locale" name="locale"/>
        <variable description="If set to true, and WidgetPositionAlign is also added to the Widget,&#10;constrained positioning will attempt to prevent the widget's bounding box from overlapping&#10;the element to which it has been aligned, by flipping the orientation of the alignment&#10;for corner based alignments&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="preventOverlap" name="preventOverlap"/>
        <variable description="If &lt;code&gt;true&lt;/code&gt; the render phase will be autimatically invoked&#10;preventing the &lt;code&gt;.render()&lt;/code&gt; manual call.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="render" name="render"/>
        <variable description="Flag indicating whether or not this Widget&#10;has been through the render lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="rendered" name="rendered"/>
        <variable description="Boolean flag to indicate whether or not a shim should be added to the Widgets&#10;boundingBox, to protect it from select box bleedthrough.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="shim" name="shim"/>
        <variable description="If true the OverlayContextPanel will show an arrow positioned on the&#10;&lt;a href=&quot;OverlayContextPanel.html#config_arrow&quot;&gt;arrow&lt;/a&gt; point.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="showArrow" name="showArrow"/>
        <variable description="Number of milliseconds after the show method is invoked to show the&#10;OverlayContext.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="showDelay" name="showDelay"/>
        <variable description="See &lt;a href=&quot;OverlayContext.html#config_showOn&quot;&gt;showOn&lt;/a&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="showOn" name="showOn"/>
        <variable description="The DOM node to parse for configuration values, passed to the Widget's HTML_PARSER definition&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="srcNode" name="srcNode"/>
        <variable description="Gives stacking habilities to the OverlayContextPanel.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="stack" name="stack"/>
        <variable description="Collection of strings used to label elements of the Widget's UI.&lt;!--{&quot;outputType&quot;:&quot;java.util.HashMap&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="strings" name="strings"/>
        <variable description="Number (between -32767 to 32767) indicating the widget's&#10;position in the default tab flow.  The value is used to set the&#10;&quot;tabIndex&quot; attribute on the widget's bounding box.  Negative values allow&#10;the widget to receive DOM focus programmatically (by calling the focus&#10;method), while being removed from the default tab flow.  A value of&#10;null removes the &quot;tabIndex&quot; attribute from the widget's bounding box.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="tabIndex" name="tabIndex"/>
        <variable description="Node, NodeList or Selector which will be used as trigger elements&#10;to show or hide the OverlayContext.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="trigger" name="trigger"/>
        <variable description="True if Overlay should use ARIA plugin&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="useARIA" name="useARIA"/>
        <variable description="If true the OverlayContext is visible by default after the render phase.&#10;Inherited from &lt;a href=&quot;Overlay.html&quot;&gt;Overlay&lt;/a&gt;.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="visible" name="visible"/>
        <variable description="String with units, or number, representing the width of the Widget. If a number is provided,&#10;the default unit, defined by the Widgets DEF_UNIT, property is used.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="width" name="width"/>
        <variable description="Page X co-ordinate for the widget. This attribute acts as a facade for the&#10;xy attribute. Changes in position can be monitored by listening for xyChange events.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="x" name="x"/>
        <variable description="Page XY co-ordinate pair for the widget.&lt;!--{&quot;outputType&quot;:&quot;java.util.ArrayList&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="xy" name="xy"/>
        <variable description="Page Y co-ordinate for the widget. This attribute acts as a facade for the&#10;xy attribute. Changes in position can be monitored by listening for xyChange events.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="y" name="y"/>
        <variable description="The z-index to apply to the Widgets boundingBox. Non-numerical values for&#10;zIndex will be converted to 0&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="zIndex" name="zIndex"/>
        <variable description="Fires when the value for the configuration attribute 'align' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterAlignChange" name="afterAlignChange"/>
        <variable description="Fires when the value for the configuration attribute 'anim' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterAnimChange" name="afterAnimChange"/>
        <variable description="Fires when the value for the configuration attribute 'arrow' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterArrowChange" name="afterArrowChange"/>
        <variable description="Fires when the value for the configuration attribute 'bodyContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterBodyContentChange" name="afterBodyContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'boundingBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterBoundingBoxChange" name="afterBoundingBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'cancellableHide' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCancellableHideChange" name="afterCancellableHideChange"/>
        <variable description="Fires when the value for the configuration attribute 'centered' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCenteredChange" name="afterCenteredChange"/>
        <variable description="Fires when the value for the configuration attribute 'constrain' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterConstrainChange" name="afterConstrainChange"/>
        <variable description="Fires when the value for the configuration attribute 'contentBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterContentBoxChange" name="afterContentBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'cssClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCssClassChange" name="afterCssClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'currentNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCurrentNodeChange" name="afterCurrentNodeChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroy" name="afterDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroyedChange" name="afterDestroyedChange"/>
        <variable description="Fires when the value for the configuration attribute 'disabled' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDisabledChange" name="afterDisabledChange"/>
        <variable description="Fires when the value for the configuration attribute 'fillHeight' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterFillHeightChange" name="afterFillHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'focused' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterFocusedChange" name="afterFocusedChange"/>
        <variable description="Fires when the value for the configuration attribute 'footerContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterFooterContentChange" name="afterFooterContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'headerContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHeaderContentChange" name="afterHeaderContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'height' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHeightChange" name="afterHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHideClassChange" name="afterHideClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideDelay' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHideDelayChange" name="afterHideDelayChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideOn' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHideOnChange" name="afterHideOnChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideOnDocumentClick' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHideOnDocumentClickChange" name="afterHideOnDocumentClickChange"/>
        <variable description="Fires when the value for the configuration attribute 'id' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterIdChange" name="afterIdChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInit" name="afterInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInitializedChange" name="afterInitializedChange"/>
        <variable description="Fires when the value for the configuration attribute 'locale' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterLocaleChange" name="afterLocaleChange"/>
        <variable description="Fires when the value for the configuration attribute 'preventOverlap' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterPreventOverlapChange" name="afterPreventOverlapChange"/>
        <variable description="Fires when the value for the configuration attribute 'render' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRenderChange" name="afterRenderChange"/>
        <variable description="Fires when the value for the configuration attribute 'rendered' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRenderedChange" name="afterRenderedChange"/>
        <variable description="Fires when the value for the configuration attribute 'shim' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterShimChange" name="afterShimChange"/>
        <variable description="Fires when the value for the configuration attribute 'showArrow' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterShowArrowChange" name="afterShowArrowChange"/>
        <variable description="Fires when the value for the configuration attribute 'showDelay' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterShowDelayChange" name="afterShowDelayChange"/>
        <variable description="Fires when the value for the configuration attribute 'showOn' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterShowOnChange" name="afterShowOnChange"/>
        <variable description="Fires when the value for the configuration attribute 'srcNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterSrcNodeChange" name="afterSrcNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'stack' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterStackChange" name="afterStackChange"/>
        <variable description="Fires when the value for the configuration attribute 'strings' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterStringsChange" name="afterStringsChange"/>
        <variable description="Fires when the value for the configuration attribute 'tabIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTabIndexChange" name="afterTabIndexChange"/>
        <variable description="Fires when the value for the configuration attribute 'trigger' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTriggerChange" name="afterTriggerChange"/>
        <variable description="Fires when the value for the configuration attribute 'useARIA' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterUseARIAChange" name="afterUseARIAChange"/>
        <variable description="Fires when the value for the configuration attribute 'visible' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterVisibleChange" name="afterVisibleChange"/>
        <variable description="Notification event, which widget implementations can fire, when&#10;they change the content of the widget. This event has no default&#10;behavior and cannot be prevented, so the &quot;on&quot; or &quot;after&quot;&#10;moments are effectively equivalent (with on listeners being invoked before&#10;after listeners).&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterContentUpdate" name="afterContentUpdate"/>
        <variable description="Lifecycle event for the render phase, fired prior to rendering the UI&#10;for the widget (prior to invoking the widget's renderer method).&#10;&lt;p&gt;&#10;Subscribers to the &quot;on&quot; moment of this event, will be notified&#10;before the widget is rendered.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after rendering is complete.&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRender" name="afterRender"/>
        <variable description="Fires when the value for the configuration attribute 'width' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterWidthChange" name="afterWidthChange"/>
        <variable description="Fires when the value for the configuration attribute 'x' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterXChange" name="afterXChange"/>
        <variable description="Fires when the value for the configuration attribute 'xy' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterXyChange" name="afterXyChange"/>
        <variable description="Fires when the value for the configuration attribute 'y' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterYChange" name="afterYChange"/>
        <variable description="Fires when the value for the configuration attribute 'zIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterZIndexChange" name="afterZIndexChange"/>
        <variable description="Fires when the value for the configuration attribute 'align' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onAlignChange" name="onAlignChange"/>
        <variable description="Fires when the value for the configuration attribute 'anim' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onAnimChange" name="onAnimChange"/>
        <variable description="Fires when the value for the configuration attribute 'arrow' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onArrowChange" name="onArrowChange"/>
        <variable description="Fires when the value for the configuration attribute 'bodyContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onBodyContentChange" name="onBodyContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'boundingBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onBoundingBoxChange" name="onBoundingBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'cancellableHide' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCancellableHideChange" name="onCancellableHideChange"/>
        <variable description="Fires when the value for the configuration attribute 'centered' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCenteredChange" name="onCenteredChange"/>
        <variable description="Fires when the value for the configuration attribute 'constrain' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onConstrainChange" name="onConstrainChange"/>
        <variable description="Fires when the value for the configuration attribute 'contentBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onContentBoxChange" name="onContentBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'cssClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCssClassChange" name="onCssClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'currentNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCurrentNodeChange" name="onCurrentNodeChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroy" name="onDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroyedChange" name="onDestroyedChange"/>
        <variable description="Fires when the value for the configuration attribute 'disabled' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDisabledChange" name="onDisabledChange"/>
        <variable description="Fires when the value for the configuration attribute 'fillHeight' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onFillHeightChange" name="onFillHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'focused' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onFocusedChange" name="onFocusedChange"/>
        <variable description="Fires when the value for the configuration attribute 'footerContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onFooterContentChange" name="onFooterContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'headerContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHeaderContentChange" name="onHeaderContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'height' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHeightChange" name="onHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHideClassChange" name="onHideClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideDelay' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHideDelayChange" name="onHideDelayChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideOn' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHideOnChange" name="onHideOnChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideOnDocumentClick' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHideOnDocumentClickChange" name="onHideOnDocumentClickChange"/>
        <variable description="Fires when the value for the configuration attribute 'id' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onIdChange" name="onIdChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInit" name="onInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInitializedChange" name="onInitializedChange"/>
        <variable description="Fires when the value for the configuration attribute 'locale' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onLocaleChange" name="onLocaleChange"/>
        <variable description="Fires when the value for the configuration attribute 'preventOverlap' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onPreventOverlapChange" name="onPreventOverlapChange"/>
        <variable description="Fires when the value for the configuration attribute 'render' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRenderChange" name="onRenderChange"/>
        <variable description="Fires when the value for the configuration attribute 'rendered' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRenderedChange" name="onRenderedChange"/>
        <variable description="Fires when the value for the configuration attribute 'shim' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onShimChange" name="onShimChange"/>
        <variable description="Fires when the value for the configuration attribute 'showArrow' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onShowArrowChange" name="onShowArrowChange"/>
        <variable description="Fires when the value for the configuration attribute 'showDelay' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onShowDelayChange" name="onShowDelayChange"/>
        <variable description="Fires when the value for the configuration attribute 'showOn' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onShowOnChange" name="onShowOnChange"/>
        <variable description="Fires when the value for the configuration attribute 'srcNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onSrcNodeChange" name="onSrcNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'stack' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onStackChange" name="onStackChange"/>
        <variable description="Fires when the value for the configuration attribute 'strings' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onStringsChange" name="onStringsChange"/>
        <variable description="Fires when the value for the configuration attribute 'tabIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTabIndexChange" name="onTabIndexChange"/>
        <variable description="Fires when the value for the configuration attribute 'trigger' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTriggerChange" name="onTriggerChange"/>
        <variable description="Fires when the value for the configuration attribute 'useARIA' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onUseARIAChange" name="onUseARIAChange"/>
        <variable description="Fires when the value for the configuration attribute 'visible' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onVisibleChange" name="onVisibleChange"/>
        <variable description="Notification event, which widget implementations can fire, when&#10;they change the content of the widget. This event has no default&#10;behavior and cannot be prevented, so the &quot;on&quot; or &quot;after&quot;&#10;moments are effectively equivalent (with on listeners being invoked before&#10;after listeners).&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onContentUpdate" name="onContentUpdate"/>
        <variable description="Lifecycle event for the render phase, fired prior to rendering the UI&#10;for the widget (prior to invoking the widget's renderer method).&#10;&lt;p&gt;&#10;Subscribers to the &quot;on&quot; moment of this event, will be notified&#10;before the widget is rendered.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after rendering is complete.&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRender" name="onRender"/>
        <variable description="Fires when the value for the configuration attribute 'width' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onWidthChange" name="onWidthChange"/>
        <variable description="Fires when the value for the configuration attribute 'x' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onXChange" name="onXChange"/>
        <variable description="Fires when the value for the configuration attribute 'xy' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onXyChange" name="onXyChange"/>
        <variable description="Fires when the value for the configuration attribute 'y' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onYChange" name="onYChange"/>
        <variable description="Fires when the value for the configuration attribute 'zIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onZIndexChange" name="onZIndexChange"/>
      </item>
      <item class="com.liferay.ide.taglib.ui.snippets.AlloyTagSnippetInsertion" description="overlay-mask" id="com.liferay.ide.ui.snippets.item.overlay-mask" label="overlay-mask" smallicon="icons/snippets/tag-generic.gif">
        <content>
          &lt;alloy:overlay-mask${align}${alignPoints}${background}${overlaymaskBodyContent}${boundingBox}${centered}${constrain}${contentBox}${cssClass}${destroyed}${disabled}${fillHeight}${focused}${footerContent}${headerContent}${height}${hideClass}${overlaymaskId}${initialized}${locale}${opacity}${preventOverlap}${render}${rendered}${shim}${srcNode}${strings}${tabIndex}${target}${useARIA}${visible}${width}${x}${xy}${y}${zIndex}${afterAlignChange}${afterAlignPointsChange}${afterBackgroundChange}${afterBodyContentChange}${afterBoundingBoxChange}${afterCenteredChange}${afterConstrainChange}${afterContentBoxChange}${afterCssClassChange}${afterDestroy}${afterDestroyedChange}${afterDisabledChange}${afterFillHeightChange}${afterFocusedChange}${afterFooterContentChange}${afterHeaderContentChange}${afterHeightChange}${afterHideClassChange}${afterIdChange}${afterInit}${afterInitializedChange}${afterLocaleChange}${afterOpacityChange}${afterPreventOverlapChange}${afterRenderChange}${afterRenderedChange}${afterShimChange}${afterSrcNodeChange}${afterStringsChange}${afterTabIndexChange}${afterTargetChange}${afterUseARIAChange}${afterVisibleChange}${afterContentUpdate}${afterRender}${afterWidthChange}${afterXChange}${afterXyChange}${afterYChange}${afterZIndexChange}${onAlignChange}${onAlignPointsChange}${onBackgroundChange}${onBodyContentChange}${onBoundingBoxChange}${onCenteredChange}${onConstrainChange}${onContentBoxChange}${onCssClassChange}${onDestroy}${onDestroyedChange}${onDisabledChange}${onFillHeightChange}${onFocusedChange}${onFooterContentChange}${onHeaderContentChange}${onHeightChange}${onHideClassChange}${onIdChange}${onInit}${onInitializedChange}${onLocaleChange}${onOpacityChange}${onPreventOverlapChange}${onRenderChange}${onRenderedChange}${onShimChange}${onSrcNodeChange}${onStringsChange}${onTabIndexChange}${onTargetChange}${onUseARIAChange}${onVisibleChange}${onContentUpdate}${onRender}${onWidthChange}${onXChange}${onXyChange}${onYChange}${onZIndexChange}&gt;&lt;/alloy:overlay-mask&gt;
        </content>
        <variable description="&lt;!--{&quot;outputType&quot;:&quot;java.util.HashMap&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="align" name="align"/>
        <variable description="Points to align the &lt;a href=&quot;Overlay.html&quot;&gt;Overlay&lt;/a&gt; used as&#10;mask.&lt;!--{&quot;outputType&quot;:&quot;java.util.ArrayList&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="alignPoints" name="alignPoints"/>
        <variable description="Background color of the mask.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="background" name="background"/>
        <variable description="The content to be added to the body section. This will replace any existing content&#10;in the body. If you want to append, or insert new content, use the &lt;a href=&quot;#method_setStdModContent&quot;&gt;setStdModContent&lt;/a&gt; method.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="overlaymaskBodyContent" name="overlaymaskBodyContent"/>
        <variable description="The outermost DOM node for the Widget, used for sizing and positioning&#10;of a Widget as well as a containing element for any decorator elements used&#10;for skinning.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="boundingBox" name="boundingBox"/>
        <variable description="A convenience attribute, which can be used as a shortcut for the align attribute.&#10;If set to true, the Widget is centered in the viewport. If set to a node reference or valid selector string,&#10;the Widget will be centered within the node. If set the false, no center positioning is applied.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="centered" name="centered"/>
        <variable description="The node to constrain the widget's bounding box to, when setting xy. Can also be&#10;set to true, to constrain to the viewport.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="constrain" name="constrain"/>
        <variable description="A DOM node that is a direct descendant of a Widget's bounding box that&#10;houses its content.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="contentBox" name="contentBox"/>
        <variable description="CSS class to be automatically added to the &lt;code&gt;boundingBox&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="cssClass" name="cssClass"/>
        <variable description="Flag indicating whether or not this object&#10;has been through the destroy lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="destroyed" name="destroyed"/>
        <variable description="Boolean indicating if the Widget should be disabled. The disabled implementation&#10;is left to the specific classes extending widget.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="disabled" name="disabled"/>
        <variable description="The section (WidgetStdMod.HEADER, WidgetStdMod.BODY or WidgetStdMod.FOOTER) which should be resized to fill the height of the standard module, when a&#10;height is set on the Widget. If a height is not set on the widget, then all sections are sized based on&#10;their content.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="fillHeight" name="fillHeight"/>
        <variable description="Boolean indicating if the Widget, or one of its descendants,&#10;has focus.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="focused" name="focused"/>
        <variable description="The content to be added to the footer section. This will replace any existing content&#10;in the footer. If you want to append, or insert new content, use the &lt;a href=&quot;#method_setStdModContent&quot;&gt;setStdModContent&lt;/a&gt; method.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="footerContent" name="footerContent"/>
        <variable description="The content to be added to the header section. This will replace any existing content&#10;in the header. If you want to append, or insert new content, use the &lt;a href=&quot;#method_setStdModContent&quot;&gt;setStdModContent&lt;/a&gt; method.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="headerContent" name="headerContent"/>
        <variable description="String with units, or number, representing the height of the Widget. If a number is provided,&#10;the default unit, defined by the Widgets DEF_UNIT, property is used.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="height" name="height"/>
        <variable description="css class added to hide the &lt;code&gt;boundingBox&lt;/code&gt; when&#10;&lt;a href=&quot;Component.html#config_visible&quot;&gt;visible&lt;/a&gt; is set to&#10;&lt;code&gt;false&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="hideClass" name="hideClass"/>
        <variable description="&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="overlaymaskId" name="overlaymaskId"/>
        <variable description="Flag indicating whether or not this object&#10;has been through the init lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="initialized" name="initialized"/>
        <variable description="The default locale for the widget. NOTE: Using get/set on the &quot;strings&quot; attribute will&#10;return/set strings for this locale.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="locale" name="locale"/>
        <variable description="CSS opacity of the mask.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="opacity" name="opacity"/>
        <variable description="If set to true, and WidgetPositionAlign is also added to the Widget,&#10;constrained positioning will attempt to prevent the widget's bounding box from overlapping&#10;the element to which it has been aligned, by flipping the orientation of the alignment&#10;for corner based alignments&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="preventOverlap" name="preventOverlap"/>
        <variable description="If &lt;code&gt;true&lt;/code&gt; the render phase will be autimatically invoked&#10;preventing the &lt;code&gt;.render()&lt;/code&gt; manual call.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="render" name="render"/>
        <variable description="Flag indicating whether or not this Widget&#10;has been through the render lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="rendered" name="rendered"/>
        <variable description="Use shim option.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="shim" name="shim"/>
        <variable description="The DOM node to parse for configuration values, passed to the Widget's HTML_PARSER definition&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="srcNode" name="srcNode"/>
        <variable description="Collection of strings used to label elements of the Widget's UI.&lt;!--{&quot;outputType&quot;:&quot;java.util.HashMap&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="strings" name="strings"/>
        <variable description="Number (between -32767 to 32767) indicating the widget's&#10;position in the default tab flow.  The value is used to set the&#10;&quot;tabIndex&quot; attribute on the widget's bounding box.  Negative values allow&#10;the widget to receive DOM focus programmatically (by calling the focus&#10;method), while being removed from the default tab flow.  A value of&#10;null removes the &quot;tabIndex&quot; attribute from the widget's bounding box.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="tabIndex" name="tabIndex"/>
        <variable description="Node where the mask will be positioned and re-dimensioned. The&#10;default is the document, which means that if not specified the mask&#10;takes the full screen.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="target" name="target"/>
        <variable description="Boolean indicating if use of the WAI-ARIA Roles and States should be&#10;enabled for the Widget.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="useARIA" name="useARIA"/>
        <variable description="If true the Overlay is visible by default after the render phase.&#10;Inherited from &lt;a href=&quot;Overlay.html&quot;&gt;Overlay&lt;/a&gt;.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="visible" name="visible"/>
        <variable description="String with units, or number, representing the width of the Widget. If a number is provided,&#10;the default unit, defined by the Widgets DEF_UNIT, property is used.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="width" name="width"/>
        <variable description="Page X co-ordinate for the widget. This attribute acts as a facade for the&#10;xy attribute. Changes in position can be monitored by listening for xyChange events.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="x" name="x"/>
        <variable description="Page XY co-ordinate pair for the widget.&lt;!--{&quot;outputType&quot;:&quot;java.util.ArrayList&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="xy" name="xy"/>
        <variable description="Page Y co-ordinate for the widget. This attribute acts as a facade for the&#10;xy attribute. Changes in position can be monitored by listening for xyChange events.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="y" name="y"/>
        <variable description="zIndex of the OverlayMask.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="zIndex" name="zIndex"/>
        <variable description="Fires when the value for the configuration attribute 'align' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterAlignChange" name="afterAlignChange"/>
        <variable description="Fires when the value for the configuration attribute 'alignPoints' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterAlignPointsChange" name="afterAlignPointsChange"/>
        <variable description="Fires when the value for the configuration attribute 'background' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterBackgroundChange" name="afterBackgroundChange"/>
        <variable description="Fires when the value for the configuration attribute 'bodyContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterBodyContentChange" name="afterBodyContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'boundingBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterBoundingBoxChange" name="afterBoundingBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'centered' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCenteredChange" name="afterCenteredChange"/>
        <variable description="Fires when the value for the configuration attribute 'constrain' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterConstrainChange" name="afterConstrainChange"/>
        <variable description="Fires when the value for the configuration attribute 'contentBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterContentBoxChange" name="afterContentBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'cssClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCssClassChange" name="afterCssClassChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroy" name="afterDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroyedChange" name="afterDestroyedChange"/>
        <variable description="Fires when the value for the configuration attribute 'disabled' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDisabledChange" name="afterDisabledChange"/>
        <variable description="Fires when the value for the configuration attribute 'fillHeight' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterFillHeightChange" name="afterFillHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'focused' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterFocusedChange" name="afterFocusedChange"/>
        <variable description="Fires when the value for the configuration attribute 'footerContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterFooterContentChange" name="afterFooterContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'headerContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHeaderContentChange" name="afterHeaderContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'height' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHeightChange" name="afterHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHideClassChange" name="afterHideClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'id' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterIdChange" name="afterIdChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInit" name="afterInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInitializedChange" name="afterInitializedChange"/>
        <variable description="Fires when the value for the configuration attribute 'locale' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterLocaleChange" name="afterLocaleChange"/>
        <variable description="Fires when the value for the configuration attribute 'opacity' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterOpacityChange" name="afterOpacityChange"/>
        <variable description="Fires when the value for the configuration attribute 'preventOverlap' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterPreventOverlapChange" name="afterPreventOverlapChange"/>
        <variable description="Fires when the value for the configuration attribute 'render' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRenderChange" name="afterRenderChange"/>
        <variable description="Fires when the value for the configuration attribute 'rendered' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRenderedChange" name="afterRenderedChange"/>
        <variable description="Fires when the value for the configuration attribute 'shim' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterShimChange" name="afterShimChange"/>
        <variable description="Fires when the value for the configuration attribute 'srcNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterSrcNodeChange" name="afterSrcNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'strings' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterStringsChange" name="afterStringsChange"/>
        <variable description="Fires when the value for the configuration attribute 'tabIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTabIndexChange" name="afterTabIndexChange"/>
        <variable description="Fires when the value for the configuration attribute 'target' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTargetChange" name="afterTargetChange"/>
        <variable description="Fires when the value for the configuration attribute 'useARIA' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterUseARIAChange" name="afterUseARIAChange"/>
        <variable description="Fires when the value for the configuration attribute 'visible' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterVisibleChange" name="afterVisibleChange"/>
        <variable description="Notification event, which widget implementations can fire, when&#10;they change the content of the widget. This event has no default&#10;behavior and cannot be prevented, so the &quot;on&quot; or &quot;after&quot;&#10;moments are effectively equivalent (with on listeners being invoked before&#10;after listeners).&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterContentUpdate" name="afterContentUpdate"/>
        <variable description="Lifecycle event for the render phase, fired prior to rendering the UI&#10;for the widget (prior to invoking the widget's renderer method).&#10;&lt;p&gt;&#10;Subscribers to the &quot;on&quot; moment of this event, will be notified&#10;before the widget is rendered.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after rendering is complete.&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRender" name="afterRender"/>
        <variable description="Fires when the value for the configuration attribute 'width' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterWidthChange" name="afterWidthChange"/>
        <variable description="Fires when the value for the configuration attribute 'x' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterXChange" name="afterXChange"/>
        <variable description="Fires when the value for the configuration attribute 'xy' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterXyChange" name="afterXyChange"/>
        <variable description="Fires when the value for the configuration attribute 'y' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterYChange" name="afterYChange"/>
        <variable description="Fires when the value for the configuration attribute 'zIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterZIndexChange" name="afterZIndexChange"/>
        <variable description="Fires when the value for the configuration attribute 'align' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onAlignChange" name="onAlignChange"/>
        <variable description="Fires when the value for the configuration attribute 'alignPoints' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onAlignPointsChange" name="onAlignPointsChange"/>
        <variable description="Fires when the value for the configuration attribute 'background' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onBackgroundChange" name="onBackgroundChange"/>
        <variable description="Fires when the value for the configuration attribute 'bodyContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onBodyContentChange" name="onBodyContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'boundingBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onBoundingBoxChange" name="onBoundingBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'centered' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCenteredChange" name="onCenteredChange"/>
        <variable description="Fires when the value for the configuration attribute 'constrain' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onConstrainChange" name="onConstrainChange"/>
        <variable description="Fires when the value for the configuration attribute 'contentBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onContentBoxChange" name="onContentBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'cssClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCssClassChange" name="onCssClassChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroy" name="onDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroyedChange" name="onDestroyedChange"/>
        <variable description="Fires when the value for the configuration attribute 'disabled' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDisabledChange" name="onDisabledChange"/>
        <variable description="Fires when the value for the configuration attribute 'fillHeight' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onFillHeightChange" name="onFillHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'focused' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onFocusedChange" name="onFocusedChange"/>
        <variable description="Fires when the value for the configuration attribute 'footerContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onFooterContentChange" name="onFooterContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'headerContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHeaderContentChange" name="onHeaderContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'height' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHeightChange" name="onHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHideClassChange" name="onHideClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'id' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onIdChange" name="onIdChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInit" name="onInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInitializedChange" name="onInitializedChange"/>
        <variable description="Fires when the value for the configuration attribute 'locale' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onLocaleChange" name="onLocaleChange"/>
        <variable description="Fires when the value for the configuration attribute 'opacity' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onOpacityChange" name="onOpacityChange"/>
        <variable description="Fires when the value for the configuration attribute 'preventOverlap' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onPreventOverlapChange" name="onPreventOverlapChange"/>
        <variable description="Fires when the value for the configuration attribute 'render' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRenderChange" name="onRenderChange"/>
        <variable description="Fires when the value for the configuration attribute 'rendered' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRenderedChange" name="onRenderedChange"/>
        <variable description="Fires when the value for the configuration attribute 'shim' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onShimChange" name="onShimChange"/>
        <variable description="Fires when the value for the configuration attribute 'srcNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onSrcNodeChange" name="onSrcNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'strings' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onStringsChange" name="onStringsChange"/>
        <variable description="Fires when the value for the configuration attribute 'tabIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTabIndexChange" name="onTabIndexChange"/>
        <variable description="Fires when the value for the configuration attribute 'target' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTargetChange" name="onTargetChange"/>
        <variable description="Fires when the value for the configuration attribute 'useARIA' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onUseARIAChange" name="onUseARIAChange"/>
        <variable description="Fires when the value for the configuration attribute 'visible' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onVisibleChange" name="onVisibleChange"/>
        <variable description="Notification event, which widget implementations can fire, when&#10;they change the content of the widget. This event has no default&#10;behavior and cannot be prevented, so the &quot;on&quot; or &quot;after&quot;&#10;moments are effectively equivalent (with on listeners being invoked before&#10;after listeners).&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onContentUpdate" name="onContentUpdate"/>
        <variable description="Lifecycle event for the render phase, fired prior to rendering the UI&#10;for the widget (prior to invoking the widget's renderer method).&#10;&lt;p&gt;&#10;Subscribers to the &quot;on&quot; moment of this event, will be notified&#10;before the widget is rendered.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after rendering is complete.&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRender" name="onRender"/>
        <variable description="Fires when the value for the configuration attribute 'width' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onWidthChange" name="onWidthChange"/>
        <variable description="Fires when the value for the configuration attribute 'x' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onXChange" name="onXChange"/>
        <variable description="Fires when the value for the configuration attribute 'xy' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onXyChange" name="onXyChange"/>
        <variable description="Fires when the value for the configuration attribute 'y' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onYChange" name="onYChange"/>
        <variable description="Fires when the value for the configuration attribute 'zIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onZIndexChange" name="onZIndexChange"/>
      </item>
      <item class="com.liferay.ide.taglib.ui.snippets.AlloyTagSnippetInsertion" description="paginator" id="com.liferay.ide.ui.snippets.item.paginator" label="paginator" smallicon="icons/snippets/tag-generic.gif">
        <content>
          &lt;alloy:paginator${alwaysVisible}${containers}${destroyed}${firstPageLink}${firstPageLinkLabel}${initialized}${lastPageLink}${lastPageLinkLabel}${maxPageLinks}${nextPageLink}${nextPageLinkLabel}${paginatorPage}${pageContainerTemplate}${pageLinkContent}${pageLinkTemplate}${pageReportEl}${pageReportLabelTemplate}${prevPageLink}${prevPageLinkLabel}${rowsPerPage}${rowsPerPageEl}${rowsPerPageOptions}${state}${template}${total}${totalEl}${totalLabel}${totalPages}${afterAlwaysVisibleChange}${afterContainersChange}${afterDestroy}${afterDestroyedChange}${afterFirstPageLinkChange}${afterFirstPageLinkLabelChange}${afterInit}${afterInitializedChange}${afterLastPageLinkChange}${afterLastPageLinkLabelChange}${afterMaxPageLinksChange}${afterNextPageLinkChange}${afterNextPageLinkLabelChange}${afterPageChange}${afterPageContainerTemplateChange}${afterPageLinkContentChange}${afterPageLinkTemplateChange}${afterPageReportElChange}${afterPageReportLabelTemplateChange}${afterPrevPageLinkChange}${afterPrevPageLinkLabelChange}${afterRowsPerPageChange}${afterRowsPerPageElChange}${afterRowsPerPageOptionsChange}${afterStateChange}${afterTemplateChange}${afterTotalChange}${afterTotalElChange}${afterTotalLabelChange}${afterTotalPagesChange}${onAlwaysVisibleChange}${onContainersChange}${onDestroy}${onDestroyedChange}${onFirstPageLinkChange}${onFirstPageLinkLabelChange}${onInit}${onInitializedChange}${onLastPageLinkChange}${onLastPageLinkLabelChange}${onMaxPageLinksChange}${onNextPageLinkChange}${onNextPageLinkLabelChange}${onPageChange}${onPageContainerTemplateChange}${onPageLinkContentChange}${onPageLinkTemplateChange}${onPageReportElChange}${onPageReportLabelTemplateChange}${onPrevPageLinkChange}${onPrevPageLinkLabelChange}${onRowsPerPageChange}${onRowsPerPageElChange}${onRowsPerPageOptionsChange}${onStateChange}${onTemplateChange}${onTotalChange}${onTotalElChange}${onTotalLabelChange}${onTotalPagesChange}&gt;&lt;/alloy:paginator&gt;
        </content>
        <variable description="If true the Paginator will be always visible, even when the number&#10;of pages is 0. To hide the paginator controls automatically when&#10;there is no pages to display use &lt;code&gt;false&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="alwaysVisible" name="alwaysVisible"/>
        <variable description="The Paginator controls UI could be displayed in more than one&#10;container (i.e., in the header and footer of a list). Pass a&#10;&lt;a href=&quot;NodeList.html&quot;&gt;NodeList&lt;/a&gt; or a selector to grab the&#10;containers.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="containers" name="containers"/>
        <variable description="Flag indicating whether or not this object&#10;has been through the destroy lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="destroyed" name="destroyed"/>
        <variable description="The &lt;a href=&quot;Node.html&quot;&gt;Node&lt;/a&gt; or template to be used as the&#10;first link element.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="firstPageLink" name="firstPageLink"/>
        <variable description="The label used as content of the&#10;&lt;a href=&quot;Paginator.html#config_firstPageLink&quot;&gt;firstPageLink&lt;/a&gt; element.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="firstPageLinkLabel" name="firstPageLinkLabel"/>
        <variable description="Flag indicating whether or not this object&#10;has been through the init lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="initialized" name="initialized"/>
        <variable description="The &lt;a href=&quot;Node.html&quot;&gt;Node&lt;/a&gt; or template to be used as the&#10;last link element.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="lastPageLink" name="lastPageLink"/>
        <variable description="The label used as content of the&#10;&lt;a href=&quot;Paginator.html#config_lastPageLink&quot;&gt;lastPageLink&lt;/a&gt; element.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="lastPageLinkLabel" name="lastPageLinkLabel"/>
        <variable description="The max number of page links to be displayed. If lower than the&#10;total number of pages they are still navigable using next and prev&#10;links.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="maxPageLinks" name="maxPageLinks"/>
        <variable description="The &lt;a href=&quot;Node.html&quot;&gt;Node&lt;/a&gt; or template to be used as the&#10;next link element.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="nextPageLink" name="nextPageLink"/>
        <variable description="The label used as content of the&#10;&lt;a href=&quot;Paginator.html#config_nextPageLink&quot;&gt;nextPageLink&lt;/a&gt; element.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="nextPageLinkLabel" name="nextPageLinkLabel"/>
        <variable description="Page to display on initial paint.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="paginatorPage" name="paginatorPage"/>
        <variable description="HTML Template for the page links container.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="pageContainerTemplate" name="pageContainerTemplate"/>
        <variable description="&lt;p&gt;Function which set the content of the each page element. The passed&#10;function receive as arguments the reference for the page element&#10;node, the page number and the index of the page element.&lt;/p&gt;&#10;Example:&#10;&lt;pre&gt;&lt;code&gt;function(pageEl, pageNumber, index) {&#10;pageEl.html(pageNumber);&#10;}&lt;/code&gt;&lt;/pre&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="pageLinkContent" name="pageLinkContent"/>
        <variable description="HTML Template for the link elements.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="pageLinkTemplate" name="pageLinkTemplate"/>
        <variable description="Node element to display the page report (i.e., (1 of 100)).&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="pageReportEl" name="pageReportEl"/>
        <variable description="Template for the&#10;&lt;a href=&quot;Paginator.html#config_pageReportEl&quot;&gt;pageReportEl&lt;/a&gt; content.&#10;Note the placeholders for the page {page} and the total pages&#10;{totalPages}.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="pageReportLabelTemplate" name="pageReportLabelTemplate"/>
        <variable description="The &lt;a href=&quot;Node.html&quot;&gt;Node&lt;/a&gt; or template to be used as the&#10;prev link element.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="prevPageLink" name="prevPageLink"/>
        <variable description="The label used as content of the&#10;&lt;a href=&quot;Paginator.html#config_prevPageLink&quot;&gt;prevPageLink&lt;/a&gt; element.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="prevPageLinkLabel" name="prevPageLinkLabel"/>
        <variable description="Number of records constituting a &quot;page&quot;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="rowsPerPage" name="rowsPerPage"/>
        <variable description="Node element to display the&#10;&lt;a href=&quot;Paginator.html#config_rowsPerPage&quot;&gt;rowsPerPage&lt;/a&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="rowsPerPageEl" name="rowsPerPageEl"/>
        <variable description="Array to be displayed on the generated HTML Select element with the&#10;&lt;a href=&quot;Paginator.html#config_rowsPerPage&quot;&gt;rowsPerPage&lt;/a&gt;&#10;information. (i.e., [1,3,5,7], will display these values on the&#10;select)&lt;!--{&quot;outputType&quot;:&quot;java.util.ArrayList&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="rowsPerPageOptions" name="rowsPerPageOptions"/>
        <variable description="Generates information to the &lt;code&gt;changeRequest&lt;/code&gt; event. See&#10;&lt;a href=&quot;Paginator.html#method_changeRequest&quot;&gt;changeRequest&lt;/a&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.util.HashMap&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="state" name="state"/>
        <variable description="Template used to render controls. The string will be used as&#10;innerHTML on all specified container nodes. Bracketed keys (e.g.&#10;{pageLinks}) in the string will be replaced with an instance of the&#10;so named ui component.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="template" name="template"/>
        <variable description="Total number of records to paginate through.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="total" name="total"/>
        <variable description="Node element to display the total information.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="totalEl" name="totalEl"/>
        <variable description="The label markup to the total information.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="totalLabel" name="totalLabel"/>
        <variable description="Number of pages. Calculated based on the&#10;&lt;a href=&quot;Paginator.html#config_total&quot;&gt;total&lt;/a&gt; divided by the&#10;&lt;a href=&quot;Paginator.html#config_rowsPerPage&quot;&gt;rowsPerPage&lt;/a&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="totalPages" name="totalPages"/>
        <variable description="Fires when the value for the configuration attribute 'alwaysVisible' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterAlwaysVisibleChange" name="afterAlwaysVisibleChange"/>
        <variable description="Fires when the value for the configuration attribute 'containers' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterContainersChange" name="afterContainersChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroy" name="afterDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroyedChange" name="afterDestroyedChange"/>
        <variable description="Fires when the value for the configuration attribute 'firstPageLink' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterFirstPageLinkChange" name="afterFirstPageLinkChange"/>
        <variable description="Fires when the value for the configuration attribute 'firstPageLinkLabel' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterFirstPageLinkLabelChange" name="afterFirstPageLinkLabelChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInit" name="afterInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInitializedChange" name="afterInitializedChange"/>
        <variable description="Fires when the value for the configuration attribute 'lastPageLink' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterLastPageLinkChange" name="afterLastPageLinkChange"/>
        <variable description="Fires when the value for the configuration attribute 'lastPageLinkLabel' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterLastPageLinkLabelChange" name="afterLastPageLinkLabelChange"/>
        <variable description="Fires when the value for the configuration attribute 'maxPageLinks' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterMaxPageLinksChange" name="afterMaxPageLinksChange"/>
        <variable description="Fires when the value for the configuration attribute 'nextPageLink' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterNextPageLinkChange" name="afterNextPageLinkChange"/>
        <variable description="Fires when the value for the configuration attribute 'nextPageLinkLabel' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterNextPageLinkLabelChange" name="afterNextPageLinkLabelChange"/>
        <variable description="Fires when the value for the configuration attribute 'page' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterPageChange" name="afterPageChange"/>
        <variable description="Fires when the value for the configuration attribute 'pageContainerTemplate' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterPageContainerTemplateChange" name="afterPageContainerTemplateChange"/>
        <variable description="Fires when the value for the configuration attribute 'pageLinkContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterPageLinkContentChange" name="afterPageLinkContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'pageLinkTemplate' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterPageLinkTemplateChange" name="afterPageLinkTemplateChange"/>
        <variable description="Fires when the value for the configuration attribute 'pageReportEl' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterPageReportElChange" name="afterPageReportElChange"/>
        <variable description="Fires when the value for the configuration attribute 'pageReportLabelTemplate' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterPageReportLabelTemplateChange" name="afterPageReportLabelTemplateChange"/>
        <variable description="Fires when the value for the configuration attribute 'prevPageLink' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterPrevPageLinkChange" name="afterPrevPageLinkChange"/>
        <variable description="Fires when the value for the configuration attribute 'prevPageLinkLabel' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterPrevPageLinkLabelChange" name="afterPrevPageLinkLabelChange"/>
        <variable description="Fires when the value for the configuration attribute 'rowsPerPage' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRowsPerPageChange" name="afterRowsPerPageChange"/>
        <variable description="Fires when the value for the configuration attribute 'rowsPerPageEl' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRowsPerPageElChange" name="afterRowsPerPageElChange"/>
        <variable description="Fires when the value for the configuration attribute 'rowsPerPageOptions' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRowsPerPageOptionsChange" name="afterRowsPerPageOptionsChange"/>
        <variable description="Fires when the value for the configuration attribute 'state' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterStateChange" name="afterStateChange"/>
        <variable description="Fires when the value for the configuration attribute 'template' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTemplateChange" name="afterTemplateChange"/>
        <variable description="Fires when the value for the configuration attribute 'total' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTotalChange" name="afterTotalChange"/>
        <variable description="Fires when the value for the configuration attribute 'totalEl' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTotalElChange" name="afterTotalElChange"/>
        <variable description="Fires when the value for the configuration attribute 'totalLabel' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTotalLabelChange" name="afterTotalLabelChange"/>
        <variable description="Fires when the value for the configuration attribute 'totalPages' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTotalPagesChange" name="afterTotalPagesChange"/>
        <variable description="Fires when the value for the configuration attribute 'alwaysVisible' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onAlwaysVisibleChange" name="onAlwaysVisibleChange"/>
        <variable description="Fires when the value for the configuration attribute 'containers' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onContainersChange" name="onContainersChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroy" name="onDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroyedChange" name="onDestroyedChange"/>
        <variable description="Fires when the value for the configuration attribute 'firstPageLink' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onFirstPageLinkChange" name="onFirstPageLinkChange"/>
        <variable description="Fires when the value for the configuration attribute 'firstPageLinkLabel' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onFirstPageLinkLabelChange" name="onFirstPageLinkLabelChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInit" name="onInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInitializedChange" name="onInitializedChange"/>
        <variable description="Fires when the value for the configuration attribute 'lastPageLink' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onLastPageLinkChange" name="onLastPageLinkChange"/>
        <variable description="Fires when the value for the configuration attribute 'lastPageLinkLabel' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onLastPageLinkLabelChange" name="onLastPageLinkLabelChange"/>
        <variable description="Fires when the value for the configuration attribute 'maxPageLinks' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onMaxPageLinksChange" name="onMaxPageLinksChange"/>
        <variable description="Fires when the value for the configuration attribute 'nextPageLink' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onNextPageLinkChange" name="onNextPageLinkChange"/>
        <variable description="Fires when the value for the configuration attribute 'nextPageLinkLabel' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onNextPageLinkLabelChange" name="onNextPageLinkLabelChange"/>
        <variable description="Fires when the value for the configuration attribute 'page' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onPageChange" name="onPageChange"/>
        <variable description="Fires when the value for the configuration attribute 'pageContainerTemplate' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onPageContainerTemplateChange" name="onPageContainerTemplateChange"/>
        <variable description="Fires when the value for the configuration attribute 'pageLinkContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onPageLinkContentChange" name="onPageLinkContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'pageLinkTemplate' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onPageLinkTemplateChange" name="onPageLinkTemplateChange"/>
        <variable description="Fires when the value for the configuration attribute 'pageReportEl' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onPageReportElChange" name="onPageReportElChange"/>
        <variable description="Fires when the value for the configuration attribute 'pageReportLabelTemplate' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onPageReportLabelTemplateChange" name="onPageReportLabelTemplateChange"/>
        <variable description="Fires when the value for the configuration attribute 'prevPageLink' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onPrevPageLinkChange" name="onPrevPageLinkChange"/>
        <variable description="Fires when the value for the configuration attribute 'prevPageLinkLabel' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onPrevPageLinkLabelChange" name="onPrevPageLinkLabelChange"/>
        <variable description="Fires when the value for the configuration attribute 'rowsPerPage' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRowsPerPageChange" name="onRowsPerPageChange"/>
        <variable description="Fires when the value for the configuration attribute 'rowsPerPageEl' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRowsPerPageElChange" name="onRowsPerPageElChange"/>
        <variable description="Fires when the value for the configuration attribute 'rowsPerPageOptions' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRowsPerPageOptionsChange" name="onRowsPerPageOptionsChange"/>
        <variable description="Fires when the value for the configuration attribute 'state' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onStateChange" name="onStateChange"/>
        <variable description="Fires when the value for the configuration attribute 'template' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTemplateChange" name="onTemplateChange"/>
        <variable description="Fires when the value for the configuration attribute 'total' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTotalChange" name="onTotalChange"/>
        <variable description="Fires when the value for the configuration attribute 'totalEl' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTotalElChange" name="onTotalElChange"/>
        <variable description="Fires when the value for the configuration attribute 'totalLabel' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTotalLabelChange" name="onTotalLabelChange"/>
        <variable description="Fires when the value for the configuration attribute 'totalPages' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTotalPagesChange" name="onTotalPagesChange"/>
      </item>
      <item class="com.liferay.ide.taglib.ui.snippets.AlloyTagSnippetInsertion" description="panel" id="com.liferay.ide.ui.snippets.item.panel" label="panel" smallicon="icons/snippets/tag-generic.gif">
        <content>
          &lt;alloy:panel${panelBodyContent}${boundingBox}${collapsed}${collapsible}${contentBox}${cssClass}${destroyed}${disabled}${fillHeight}${focused}${footerContent}${headerContent}${height}${hideClass}${icons}${panelId}${initialized}${locale}${render}${rendered}${srcNode}${strings}${tabIndex}${title}${useARIA}${visible}${width}${afterBodyContentChange}${afterBoundingBoxChange}${afterCollapsedChange}${afterCollapsibleChange}${afterContentBoxChange}${afterCssClassChange}${afterDestroy}${afterDestroyedChange}${afterDisabledChange}${afterFillHeightChange}${afterFocusedChange}${afterFooterContentChange}${afterHeaderContentChange}${afterHeightChange}${afterHideClassChange}${afterIconsChange}${afterIdChange}${afterInit}${afterInitializedChange}${afterLocaleChange}${afterRenderChange}${afterRenderedChange}${afterSrcNodeChange}${afterStringsChange}${afterTabIndexChange}${afterTitleChange}${afterUseARIAChange}${afterVisibleChange}${afterContentUpdate}${afterRender}${afterWidthChange}${onBodyContentChange}${onBoundingBoxChange}${onCollapsedChange}${onCollapsibleChange}${onContentBoxChange}${onCssClassChange}${onDestroy}${onDestroyedChange}${onDisabledChange}${onFillHeightChange}${onFocusedChange}${onFooterContentChange}${onHeaderContentChange}${onHeightChange}${onHideClassChange}${onIconsChange}${onIdChange}${onInit}${onInitializedChange}${onLocaleChange}${onRenderChange}${onRenderedChange}${onSrcNodeChange}${onStringsChange}${onTabIndexChange}${onTitleChange}${onUseARIAChange}${onVisibleChange}${onContentUpdate}${onRender}${onWidthChange}&gt;&lt;/alloy:panel&gt;
        </content>
        <variable description="The content to be added to the body section. This will replace any existing content&#10;in the body. If you want to append, or insert new content, use the &lt;a href=&quot;#method_setStdModContent&quot;&gt;setStdModContent&lt;/a&gt; method.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="panelBodyContent" name="panelBodyContent"/>
        <variable description="The outermost DOM node for the Widget, used for sizing and positioning&#10;of a Widget as well as a containing element for any decorator elements used&#10;for skinning.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="boundingBox" name="boundingBox"/>
        <variable description="Whether the panel is displayed collapsed.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="collapsed" name="collapsed"/>
        <variable description="Whether the panel is able to be collapsed.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="collapsible" name="collapsible"/>
        <variable description="A DOM node that is a direct descendant of a Widget's bounding box that&#10;houses its content.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="contentBox" name="contentBox"/>
        <variable description="CSS class to be automatically added to the &lt;code&gt;boundingBox&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="cssClass" name="cssClass"/>
        <variable description="Flag indicating whether or not this object&#10;has been through the destroy lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="destroyed" name="destroyed"/>
        <variable description="Boolean indicating if the Widget should be disabled. The disabled implementation&#10;is left to the specific classes extending widget.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="disabled" name="disabled"/>
        <variable description="The section (WidgetStdMod.HEADER, WidgetStdMod.BODY or WidgetStdMod.FOOTER) which should be resized to fill the height of the standard module, when a&#10;height is set on the Widget. If a height is not set on the widget, then all sections are sized based on&#10;their content.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="fillHeight" name="fillHeight"/>
        <variable description="Boolean indicating if the Widget, or one of its descendants,&#10;has focus.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="focused" name="focused"/>
        <variable description="The content to be added to the footer section. This will replace any existing content&#10;in the footer. If you want to append, or insert new content, use the &lt;a href=&quot;#method_setStdModContent&quot;&gt;setStdModContent&lt;/a&gt; method.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="footerContent" name="footerContent"/>
        <variable description="The content to be added to the header section. This will replace any existing content&#10;in the header. If you want to append, or insert new content, use the &lt;a href=&quot;#method_setStdModContent&quot;&gt;setStdModContent&lt;/a&gt; method.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="headerContent" name="headerContent"/>
        <variable description="String with units, or number, representing the height of the Widget. If a number is provided,&#10;the default unit, defined by the Widgets DEF_UNIT, property is used.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="height" name="height"/>
        <variable description="css class added to hide the &lt;code&gt;boundingBox&lt;/code&gt; when&#10;&lt;a href=&quot;Component.html#config_visible&quot;&gt;visible&lt;/a&gt; is set to&#10;&lt;code&gt;false&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="hideClass" name="hideClass"/>
        <variable description="&lt;p&gt;Array of &lt;a href=&quot;ButtonItem.html&quot;&gt;ButtonItem&lt;/a&gt; configuration objects to be displayed as icons&#10;on the Panel title.&lt;/p&gt;&#10;Example:&#10;&lt;pre&gt;&lt;code&gt;icons: [ { icon: 'close', id: 'close' } ]&lt;/code&gt;&lt;/pre&gt;&#10;For more information how to use this option see&#10;&lt;a href=&quot;ButtonItem.html&quot;&gt;ButtonItem&lt;/a&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.util.ArrayList&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="icons" name="icons"/>
        <variable description="&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="panelId" name="panelId"/>
        <variable description="Flag indicating whether or not this object&#10;has been through the init lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="initialized" name="initialized"/>
        <variable description="The default locale for the widget. NOTE: Using get/set on the &quot;strings&quot; attribute will&#10;return/set strings for this locale.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="locale" name="locale"/>
        <variable description="If &lt;code&gt;true&lt;/code&gt; the render phase will be autimatically invoked&#10;preventing the &lt;code&gt;.render()&lt;/code&gt; manual call.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="render" name="render"/>
        <variable description="Flag indicating whether or not this Widget&#10;has been through the render lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="rendered" name="rendered"/>
        <variable description="The DOM node to parse for configuration values, passed to the Widget's HTML_PARSER definition&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="srcNode" name="srcNode"/>
        <variable description="Collection of strings used to label elements of the Panel's UI.&lt;!--{&quot;outputType&quot;:&quot;java.util.HashMap&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="strings" name="strings"/>
        <variable description="Number (between -32767 to 32767) indicating the widget's&#10;position in the default tab flow.  The value is used to set the&#10;&quot;tabIndex&quot; attribute on the widget's bounding box.  Negative values allow&#10;the widget to receive DOM focus programmatically (by calling the focus&#10;method), while being removed from the default tab flow.  A value of&#10;null removes the &quot;tabIndex&quot; attribute from the widget's bounding box.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="tabIndex" name="tabIndex"/>
        <variable description="The title to be displayed on the Panel.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="title" name="title"/>
        <variable description="True if Panel should use ARIA plugin&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="useARIA" name="useARIA"/>
        <variable description="Boolean indicating weather or not the Widget is visible.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="visible" name="visible"/>
        <variable description="String with units, or number, representing the width of the Widget. If a number is provided,&#10;the default unit, defined by the Widgets DEF_UNIT, property is used.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="width" name="width"/>
        <variable description="Fires when the value for the configuration attribute 'bodyContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterBodyContentChange" name="afterBodyContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'boundingBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterBoundingBoxChange" name="afterBoundingBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'collapsed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCollapsedChange" name="afterCollapsedChange"/>
        <variable description="Fires when the value for the configuration attribute 'collapsible' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCollapsibleChange" name="afterCollapsibleChange"/>
        <variable description="Fires when the value for the configuration attribute 'contentBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterContentBoxChange" name="afterContentBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'cssClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCssClassChange" name="afterCssClassChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroy" name="afterDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroyedChange" name="afterDestroyedChange"/>
        <variable description="Fires when the value for the configuration attribute 'disabled' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDisabledChange" name="afterDisabledChange"/>
        <variable description="Fires when the value for the configuration attribute 'fillHeight' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterFillHeightChange" name="afterFillHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'focused' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterFocusedChange" name="afterFocusedChange"/>
        <variable description="Fires when the value for the configuration attribute 'footerContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterFooterContentChange" name="afterFooterContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'headerContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHeaderContentChange" name="afterHeaderContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'height' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHeightChange" name="afterHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHideClassChange" name="afterHideClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'icons' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterIconsChange" name="afterIconsChange"/>
        <variable description="Fires when the value for the configuration attribute 'id' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterIdChange" name="afterIdChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInit" name="afterInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInitializedChange" name="afterInitializedChange"/>
        <variable description="Fires when the value for the configuration attribute 'locale' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterLocaleChange" name="afterLocaleChange"/>
        <variable description="Fires when the value for the configuration attribute 'render' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRenderChange" name="afterRenderChange"/>
        <variable description="Fires when the value for the configuration attribute 'rendered' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRenderedChange" name="afterRenderedChange"/>
        <variable description="Fires when the value for the configuration attribute 'srcNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterSrcNodeChange" name="afterSrcNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'strings' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterStringsChange" name="afterStringsChange"/>
        <variable description="Fires when the value for the configuration attribute 'tabIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTabIndexChange" name="afterTabIndexChange"/>
        <variable description="Fires when the value for the configuration attribute 'title' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTitleChange" name="afterTitleChange"/>
        <variable description="Fires when the value for the configuration attribute 'useARIA' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterUseARIAChange" name="afterUseARIAChange"/>
        <variable description="Fires when the value for the configuration attribute 'visible' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterVisibleChange" name="afterVisibleChange"/>
        <variable description="Notification event, which widget implementations can fire, when&#10;they change the content of the widget. This event has no default&#10;behavior and cannot be prevented, so the &quot;on&quot; or &quot;after&quot;&#10;moments are effectively equivalent (with on listeners being invoked before&#10;after listeners).&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterContentUpdate" name="afterContentUpdate"/>
        <variable description="Lifecycle event for the render phase, fired prior to rendering the UI&#10;for the widget (prior to invoking the widget's renderer method).&#10;&lt;p&gt;&#10;Subscribers to the &quot;on&quot; moment of this event, will be notified&#10;before the widget is rendered.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after rendering is complete.&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRender" name="afterRender"/>
        <variable description="Fires when the value for the configuration attribute 'width' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterWidthChange" name="afterWidthChange"/>
        <variable description="Fires when the value for the configuration attribute 'bodyContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onBodyContentChange" name="onBodyContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'boundingBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onBoundingBoxChange" name="onBoundingBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'collapsed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCollapsedChange" name="onCollapsedChange"/>
        <variable description="Fires when the value for the configuration attribute 'collapsible' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCollapsibleChange" name="onCollapsibleChange"/>
        <variable description="Fires when the value for the configuration attribute 'contentBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onContentBoxChange" name="onContentBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'cssClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCssClassChange" name="onCssClassChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroy" name="onDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroyedChange" name="onDestroyedChange"/>
        <variable description="Fires when the value for the configuration attribute 'disabled' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDisabledChange" name="onDisabledChange"/>
        <variable description="Fires when the value for the configuration attribute 'fillHeight' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onFillHeightChange" name="onFillHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'focused' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onFocusedChange" name="onFocusedChange"/>
        <variable description="Fires when the value for the configuration attribute 'footerContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onFooterContentChange" name="onFooterContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'headerContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHeaderContentChange" name="onHeaderContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'height' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHeightChange" name="onHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHideClassChange" name="onHideClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'icons' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onIconsChange" name="onIconsChange"/>
        <variable description="Fires when the value for the configuration attribute 'id' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onIdChange" name="onIdChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInit" name="onInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInitializedChange" name="onInitializedChange"/>
        <variable description="Fires when the value for the configuration attribute 'locale' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onLocaleChange" name="onLocaleChange"/>
        <variable description="Fires when the value for the configuration attribute 'render' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRenderChange" name="onRenderChange"/>
        <variable description="Fires when the value for the configuration attribute 'rendered' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRenderedChange" name="onRenderedChange"/>
        <variable description="Fires when the value for the configuration attribute 'srcNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onSrcNodeChange" name="onSrcNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'strings' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onStringsChange" name="onStringsChange"/>
        <variable description="Fires when the value for the configuration attribute 'tabIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTabIndexChange" name="onTabIndexChange"/>
        <variable description="Fires when the value for the configuration attribute 'title' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTitleChange" name="onTitleChange"/>
        <variable description="Fires when the value for the configuration attribute 'useARIA' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onUseARIAChange" name="onUseARIAChange"/>
        <variable description="Fires when the value for the configuration attribute 'visible' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onVisibleChange" name="onVisibleChange"/>
        <variable description="Notification event, which widget implementations can fire, when&#10;they change the content of the widget. This event has no default&#10;behavior and cannot be prevented, so the &quot;on&quot; or &quot;after&quot;&#10;moments are effectively equivalent (with on listeners being invoked before&#10;after listeners).&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onContentUpdate" name="onContentUpdate"/>
        <variable description="Lifecycle event for the render phase, fired prior to rendering the UI&#10;for the widget (prior to invoking the widget's renderer method).&#10;&lt;p&gt;&#10;Subscribers to the &quot;on&quot; moment of this event, will be notified&#10;before the widget is rendered.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after rendering is complete.&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRender" name="onRender"/>
        <variable description="Fires when the value for the configuration attribute 'width' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onWidthChange" name="onWidthChange"/>
      </item>
      <item class="com.liferay.ide.taglib.ui.snippets.AlloyTagSnippetInsertion" description="parse-content" id="com.liferay.ide.ui.snippets.item.parse-content" label="parse-content" smallicon="icons/snippets/tag-generic.gif">
        <content>
          &lt;alloy:parse-content${destroyed}${host}${initialized}${afterDestroy}${afterDestroyedChange}${afterHostChange}${afterInit}${afterInitializedChange}${onDestroy}${onDestroyedChange}${onHostChange}${onInit}${onInitializedChange}&gt;&lt;/alloy:parse-content&gt;
        </content>
        <variable description="Flag indicating whether or not this object&#10;has been through the destroy lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="destroyed" name="destroyed"/>
        <variable description="The plugin's host object.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="host" name="host"/>
        <variable description="Flag indicating whether or not this object&#10;has been through the init lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="initialized" name="initialized"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroy" name="afterDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroyedChange" name="afterDestroyedChange"/>
        <variable description="Fires when the value for the configuration attribute 'host' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHostChange" name="afterHostChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInit" name="afterInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInitializedChange" name="afterInitializedChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroy" name="onDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroyedChange" name="onDestroyedChange"/>
        <variable description="Fires when the value for the configuration attribute 'host' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHostChange" name="onHostChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInit" name="onInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInitializedChange" name="onInitializedChange"/>
      </item>
      <item class="com.liferay.ide.taglib.ui.snippets.AlloyTagSnippetInsertion" description="portal-layout" id="com.liferay.ide.ui.snippets.item.portal-layout" label="portal-layout" smallicon="icons/snippets/tag-generic.gif">
        <content>
          &lt;alloy:portal-layout${destroyed}${initialized}${afterDestroy}${afterDestroyedChange}${afterInit}${afterInitializedChange}${onDestroy}${onDestroyedChange}${onInit}${onInitializedChange}&gt;&lt;/alloy:portal-layout&gt;
        </content>
        <variable description="Flag indicating whether or not this object&#10;has been through the destroy lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="destroyed" name="destroyed"/>
        <variable description="Flag indicating whether or not this object&#10;has been through the init lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="initialized" name="initialized"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroy" name="afterDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroyedChange" name="afterDestroyedChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInit" name="afterInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInitializedChange" name="afterInitializedChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroy" name="onDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroyedChange" name="onDestroyedChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInit" name="onInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInitializedChange" name="onInitializedChange"/>
      </item>
      <item class="com.liferay.ide.taglib.ui.snippets.AlloyTagSnippetInsertion" description="progress-bar" id="com.liferay.ide.ui.snippets.item.progress-bar" label="progress-bar" smallicon="icons/snippets/tag-generic.gif">
        <content>
          &lt;alloy:progress-bar${boundingBox}${contentBox}${cssClass}${destroyed}${disabled}${focused}${height}${hideClass}${progressbarId}${initialized}${label}${locale}${max}${min}${orientation}${ratio}${render}${rendered}${srcNode}${statusNode}${step}${strings}${tabIndex}${textNode}${useARIA}${progressbarValue}${visible}${width}${afterBoundingBoxChange}${afterContentBoxChange}${afterCssClassChange}${afterDestroy}${afterDestroyedChange}${afterDisabledChange}${afterFocusedChange}${afterHeightChange}${afterHideClassChange}${afterIdChange}${afterInit}${afterInitializedChange}${afterLabelChange}${afterLocaleChange}${afterMaxChange}${afterMinChange}${afterOrientationChange}${afterRatioChange}${afterRenderChange}${afterRenderedChange}${afterSrcNodeChange}${afterStatusNodeChange}${afterStepChange}${afterStringsChange}${afterTabIndexChange}${afterTextNodeChange}${afterUseARIAChange}${afterValueChange}${afterVisibleChange}${afterContentUpdate}${afterRender}${afterWidthChange}${onBoundingBoxChange}${onContentBoxChange}${onCssClassChange}${onDestroy}${onDestroyedChange}${onDisabledChange}${onFocusedChange}${onHeightChange}${onHideClassChange}${onIdChange}${onInit}${onInitializedChange}${onLabelChange}${onLocaleChange}${onMaxChange}${onMinChange}${onOrientationChange}${onRatioChange}${onRenderChange}${onRenderedChange}${onSrcNodeChange}${onStatusNodeChange}${onStepChange}${onStringsChange}${onTabIndexChange}${onTextNodeChange}${onUseARIAChange}${onValueChange}${onVisibleChange}${onContentUpdate}${onRender}${onWidthChange}&gt;&lt;/alloy:progress-bar&gt;
        </content>
        <variable description="The outermost DOM node for the Widget, used for sizing and positioning&#10;of a Widget as well as a containing element for any decorator elements used&#10;for skinning.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="boundingBox" name="boundingBox"/>
        <variable description="A DOM node that is a direct descendant of a Widget's bounding box that&#10;houses its content.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="contentBox" name="contentBox"/>
        <variable description="CSS class to be automatically added to the &lt;code&gt;boundingBox&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="cssClass" name="cssClass"/>
        <variable description="Flag indicating whether or not this object&#10;has been through the destroy lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="destroyed" name="destroyed"/>
        <variable description="Boolean indicating if the Widget should be disabled. The disabled implementation&#10;is left to the specific classes extending widget.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="disabled" name="disabled"/>
        <variable description="Boolean indicating if the Widget, or one of its descendants,&#10;has focus.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="focused" name="focused"/>
        <variable description="Display height of the progressbar.&lt;!--{&quot;outputType&quot;:&quot;int&quot;,&quot;inputType&quot;:&quot;int&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="height" name="height"/>
        <variable description="css class added to hide the &lt;code&gt;boundingBox&lt;/code&gt; when&#10;&lt;a href=&quot;Component.html#config_visible&quot;&gt;visible&lt;/a&gt; is set to&#10;&lt;code&gt;false&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="hideClass" name="hideClass"/>
        <variable description="&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="progressbarId" name="progressbarId"/>
        <variable description="Flag indicating whether or not this object&#10;has been through the init lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="initialized" name="initialized"/>
        <variable description="Display label of the progressbar. If not specified try to query&#10;using HTML_PARSER an element inside contentBox which matches&#10;&lt;code&gt;yui3-aui-progressbar-text&lt;/code&gt; and get its innerHTML to be&#10;used as label.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="label" name="label"/>
        <variable description="The default locale for the widget. NOTE: Using get/set on the &quot;strings&quot; attribute will&#10;return/set strings for this locale.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="locale" name="locale"/>
        <variable description="Represents the top value for the bar. The bar will be fully&#10;extended when reaching this value. Values higher than this will&#10;be ignored.&lt;!--{&quot;outputType&quot;:&quot;int&quot;,&quot;inputType&quot;:&quot;int&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="max" name="max"/>
        <variable description="Represents the lowest value for the bar. The bar will be&#10;totally collapsed when reaching this value. Values lower than&#10;this will be ignored.&lt;!--{&quot;outputType&quot;:&quot;int&quot;,&quot;inputType&quot;:&quot;int&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="min" name="min"/>
        <variable description="Display orientation of the progressbar (i.e. vertical or&#10;horizontal).&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="orientation" name="orientation"/>
        <variable description="Calculate the ratio based on &lt;code&gt;max&lt;/code&gt; and&#10;&lt;code&gt;min&lt;/code&gt; values.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="ratio" name="ratio"/>
        <variable description="If &lt;code&gt;true&lt;/code&gt; the render phase will be autimatically invoked&#10;preventing the &lt;code&gt;.render()&lt;/code&gt; manual call.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="render" name="render"/>
        <variable description="Flag indicating whether or not this Widget&#10;has been through the render lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="rendered" name="rendered"/>
        <variable description="The DOM node to parse for configuration values, passed to the Widget's HTML_PARSER definition&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="srcNode" name="srcNode"/>
        <variable description="DOM Node to display the satus bar of the progressbar. If not&#10;specified try to query using HTML_PARSER an element inside&#10;contentBox which matches &lt;code&gt;yui3-aui-progressbar-status&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="statusNode" name="statusNode"/>
        <variable description="Calculate the progressbar step based on &lt;code&gt;ratio&lt;/code&gt;&#10;value.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="step" name="step"/>
        <variable description="Collection of strings used to label elements of the Widget's UI.&lt;!--{&quot;outputType&quot;:&quot;java.util.HashMap&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="strings" name="strings"/>
        <variable description="Number (between -32767 to 32767) indicating the widget's&#10;position in the default tab flow.  The value is used to set the&#10;&quot;tabIndex&quot; attribute on the widget's bounding box.  Negative values allow&#10;the widget to receive DOM focus programmatically (by calling the focus&#10;method), while being removed from the default tab flow.  A value of&#10;null removes the &quot;tabIndex&quot; attribute from the widget's bounding box.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="tabIndex" name="tabIndex"/>
        <variable description="DOM Node to display the text of the progressbar. If not&#10;specified try to query using HTML_PARSER an element inside&#10;contentBox which matches &lt;code&gt;yui3-aui-progressbar-text&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="textNode" name="textNode"/>
        <variable description="Boolean indicating if use of the WAI-ARIA Roles and States should be&#10;enabled for the Widget.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="useARIA" name="useARIA"/>
        <variable description="The value for the bar. Valid values are in between the minValue&#10;and maxValue attributes.&lt;!--{&quot;outputType&quot;:&quot;int&quot;,&quot;inputType&quot;:&quot;int&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="progressbarValue" name="progressbarValue"/>
        <variable description="Boolean indicating weather or not the Widget is visible.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="visible" name="visible"/>
        <variable description="String with units, or number, representing the width of the Widget. If a number is provided,&#10;the default unit, defined by the Widgets DEF_UNIT, property is used.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="width" name="width"/>
        <variable description="Fires when the value for the configuration attribute 'boundingBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterBoundingBoxChange" name="afterBoundingBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'contentBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterContentBoxChange" name="afterContentBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'cssClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCssClassChange" name="afterCssClassChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroy" name="afterDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroyedChange" name="afterDestroyedChange"/>
        <variable description="Fires when the value for the configuration attribute 'disabled' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDisabledChange" name="afterDisabledChange"/>
        <variable description="Fires when the value for the configuration attribute 'focused' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterFocusedChange" name="afterFocusedChange"/>
        <variable description="Fires when the value for the configuration attribute 'height' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHeightChange" name="afterHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHideClassChange" name="afterHideClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'id' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterIdChange" name="afterIdChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInit" name="afterInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInitializedChange" name="afterInitializedChange"/>
        <variable description="Fires when the value for the configuration attribute 'label' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterLabelChange" name="afterLabelChange"/>
        <variable description="Fires when the value for the configuration attribute 'locale' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterLocaleChange" name="afterLocaleChange"/>
        <variable description="Fires when the value for the configuration attribute 'max' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterMaxChange" name="afterMaxChange"/>
        <variable description="Fires when the value for the configuration attribute 'min' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterMinChange" name="afterMinChange"/>
        <variable description="Fires when the value for the configuration attribute 'orientation' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterOrientationChange" name="afterOrientationChange"/>
        <variable description="Fires when the value for the configuration attribute 'ratio' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRatioChange" name="afterRatioChange"/>
        <variable description="Fires when the value for the configuration attribute 'render' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRenderChange" name="afterRenderChange"/>
        <variable description="Fires when the value for the configuration attribute 'rendered' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRenderedChange" name="afterRenderedChange"/>
        <variable description="Fires when the value for the configuration attribute 'srcNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterSrcNodeChange" name="afterSrcNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'statusNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterStatusNodeChange" name="afterStatusNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'step' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterStepChange" name="afterStepChange"/>
        <variable description="Fires when the value for the configuration attribute 'strings' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterStringsChange" name="afterStringsChange"/>
        <variable description="Fires when the value for the configuration attribute 'tabIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTabIndexChange" name="afterTabIndexChange"/>
        <variable description="Fires when the value for the configuration attribute 'textNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTextNodeChange" name="afterTextNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'useARIA' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterUseARIAChange" name="afterUseARIAChange"/>
        <variable description="Fires when the value for the configuration attribute 'value' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterValueChange" name="afterValueChange"/>
        <variable description="Fires when the value for the configuration attribute 'visible' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterVisibleChange" name="afterVisibleChange"/>
        <variable description="Notification event, which widget implementations can fire, when&#10;they change the content of the widget. This event has no default&#10;behavior and cannot be prevented, so the &quot;on&quot; or &quot;after&quot;&#10;moments are effectively equivalent (with on listeners being invoked before&#10;after listeners).&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterContentUpdate" name="afterContentUpdate"/>
        <variable description="Lifecycle event for the render phase, fired prior to rendering the UI&#10;for the widget (prior to invoking the widget's renderer method).&#10;&lt;p&gt;&#10;Subscribers to the &quot;on&quot; moment of this event, will be notified&#10;before the widget is rendered.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after rendering is complete.&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRender" name="afterRender"/>
        <variable description="Fires when the value for the configuration attribute 'width' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterWidthChange" name="afterWidthChange"/>
        <variable description="Fires when the value for the configuration attribute 'boundingBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onBoundingBoxChange" name="onBoundingBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'contentBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onContentBoxChange" name="onContentBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'cssClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCssClassChange" name="onCssClassChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroy" name="onDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroyedChange" name="onDestroyedChange"/>
        <variable description="Fires when the value for the configuration attribute 'disabled' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDisabledChange" name="onDisabledChange"/>
        <variable description="Fires when the value for the configuration attribute 'focused' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onFocusedChange" name="onFocusedChange"/>
        <variable description="Fires when the value for the configuration attribute 'height' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHeightChange" name="onHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHideClassChange" name="onHideClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'id' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onIdChange" name="onIdChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInit" name="onInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInitializedChange" name="onInitializedChange"/>
        <variable description="Fires when the value for the configuration attribute 'label' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onLabelChange" name="onLabelChange"/>
        <variable description="Fires when the value for the configuration attribute 'locale' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onLocaleChange" name="onLocaleChange"/>
        <variable description="Fires when the value for the configuration attribute 'max' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onMaxChange" name="onMaxChange"/>
        <variable description="Fires when the value for the configuration attribute 'min' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onMinChange" name="onMinChange"/>
        <variable description="Fires when the value for the configuration attribute 'orientation' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onOrientationChange" name="onOrientationChange"/>
        <variable description="Fires when the value for the configuration attribute 'ratio' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRatioChange" name="onRatioChange"/>
        <variable description="Fires when the value for the configuration attribute 'render' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRenderChange" name="onRenderChange"/>
        <variable description="Fires when the value for the configuration attribute 'rendered' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRenderedChange" name="onRenderedChange"/>
        <variable description="Fires when the value for the configuration attribute 'srcNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onSrcNodeChange" name="onSrcNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'statusNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onStatusNodeChange" name="onStatusNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'step' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onStepChange" name="onStepChange"/>
        <variable description="Fires when the value for the configuration attribute 'strings' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onStringsChange" name="onStringsChange"/>
        <variable description="Fires when the value for the configuration attribute 'tabIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTabIndexChange" name="onTabIndexChange"/>
        <variable description="Fires when the value for the configuration attribute 'textNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTextNodeChange" name="onTextNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'useARIA' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onUseARIAChange" name="onUseARIAChange"/>
        <variable description="Fires when the value for the configuration attribute 'value' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onValueChange" name="onValueChange"/>
        <variable description="Fires when the value for the configuration attribute 'visible' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onVisibleChange" name="onVisibleChange"/>
        <variable description="Notification event, which widget implementations can fire, when&#10;they change the content of the widget. This event has no default&#10;behavior and cannot be prevented, so the &quot;on&quot; or &quot;after&quot;&#10;moments are effectively equivalent (with on listeners being invoked before&#10;after listeners).&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onContentUpdate" name="onContentUpdate"/>
        <variable description="Lifecycle event for the render phase, fired prior to rendering the UI&#10;for the widget (prior to invoking the widget's renderer method).&#10;&lt;p&gt;&#10;Subscribers to the &quot;on&quot; moment of this event, will be notified&#10;before the widget is rendered.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after rendering is complete.&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRender" name="onRender"/>
        <variable description="Fires when the value for the configuration attribute 'width' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onWidthChange" name="onWidthChange"/>
      </item>
      <item class="com.liferay.ide.taglib.ui.snippets.AlloyTagSnippetInsertion" description="rating" id="com.liferay.ide.ui.snippets.item.rating" label="rating" smallicon="icons/snippets/tag-generic.gif">
        <content>
          &lt;alloy:rating${boundingBox}${canReset}${contentBox}${cssClass}${defaultSelected}${destroyed}${disabled}${elements}${focused}${height}${hiddenInput}${hideClass}${ratingId}${initialized}${inputName}${label}${labelNode}${locale}${render}${rendered}${selectedIndex}${showTitle}${size}${srcNode}${strings}${tabIndex}${title}${useARIA}${ratingValue}${visible}${width}${afterBoundingBoxChange}${afterCanResetChange}${afterContentBoxChange}${afterCssClassChange}${afterDefaultSelectedChange}${afterDestroy}${afterDestroyedChange}${afterDisabledChange}${afterElementsChange}${afterFocusedChange}${afterHeightChange}${afterHiddenInputChange}${afterHideClassChange}${afterIdChange}${afterInit}${afterInitializedChange}${afterInputNameChange}${afterItemClick}${afterItemOut}${afterItemSelect}${afterLabelChange}${afterLabelNodeChange}${afterLocaleChange}${afterRenderChange}${afterRenderedChange}${afterSelectedIndexChange}${afterShowTitleChange}${afterSizeChange}${afterSrcNodeChange}${afterStringsChange}${afterTabIndexChange}${afterTitleChange}${afterUseARIAChange}${afterValueChange}${afterVisibleChange}${afterContentUpdate}${afterRender}${afterWidthChange}${onBoundingBoxChange}${onCanResetChange}${onContentBoxChange}${onCssClassChange}${onDefaultSelectedChange}${onDestroy}${onDestroyedChange}${onDisabledChange}${onElementsChange}${onFocusedChange}${onHeightChange}${onHiddenInputChange}${onHideClassChange}${onIdChange}${onInit}${onInitializedChange}${onInputNameChange}${onItemClick}${onItemOut}${onItemSelect}${onLabelChange}${onLabelNodeChange}${onLocaleChange}${onRenderChange}${onRenderedChange}${onSelectedIndexChange}${onShowTitleChange}${onSizeChange}${onSrcNodeChange}${onStringsChange}${onTabIndexChange}${onTitleChange}${onUseARIAChange}${onValueChange}${onVisibleChange}${onContentUpdate}${onRender}${onWidthChange}&gt;&lt;/alloy:rating&gt;
        </content>
        <variable description="The outermost DOM node for the Widget, used for sizing and positioning&#10;of a Widget as well as a containing element for any decorator elements used&#10;for skinning.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="boundingBox" name="boundingBox"/>
        <variable description="If &lt;code&gt;true&lt;/code&gt; could be reseted (i.e., have no values&#10;selected).&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="canReset" name="canReset"/>
        <variable description="A DOM node that is a direct descendant of a Widget's bounding box that&#10;houses its content.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="contentBox" name="contentBox"/>
        <variable description="CSS class to be automatically added to the &lt;code&gt;boundingBox&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="cssClass" name="cssClass"/>
        <variable description="The number of selected starts when the Rating render.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="defaultSelected" name="defaultSelected"/>
        <variable description="Flag indicating whether or not this object&#10;has been through the destroy lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="destroyed" name="destroyed"/>
        <variable description="Whether the Rating is disabled or not. Disabled Ratings don't allow&#10;hover or click, just display selected stars.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="disabled" name="disabled"/>
        <variable description="&lt;a href=&quot;NodeList.html&quot;&gt;NodeList&lt;/a&gt; of elements used on the&#10;Rating. Each element is one Star.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="elements" name="elements"/>
        <variable description="Boolean indicating if the Widget, or one of its descendants,&#10;has focus.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="focused" name="focused"/>
        <variable description="String with units, or number, representing the height of the Widget. If a number is provided,&#10;the default unit, defined by the Widgets DEF_UNIT, property is used.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="height" name="height"/>
        <variable description="Hidden input to handle the selected value. This hidden input&#10;replace the radio elements and keep the same name.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="hiddenInput" name="hiddenInput"/>
        <variable description="css class added to hide the &lt;code&gt;boundingBox&lt;/code&gt; when&#10;&lt;a href=&quot;Component.html#config_visible&quot;&gt;visible&lt;/a&gt; is set to&#10;&lt;code&gt;false&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="hideClass" name="hideClass"/>
        <variable description="&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="ratingId" name="ratingId"/>
        <variable description="Flag indicating whether or not this object&#10;has been through the init lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="initialized" name="initialized"/>
        <variable description="Name of the &lt;a&#10;href=&quot;Rating.html#config_hiddenInput&quot;&gt;hiddenInput&lt;/a&gt; element. If&#10;not specified will use the name of the replaced radio.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="inputName" name="inputName"/>
        <variable description="Label to be displayed with the Rating elements.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="label" name="label"/>
        <variable description="DOM Node to display the text of the StarRating. If not&#10;specified try to query using HTML_PARSER an element inside&#10;boundingBox which matches &lt;code&gt;yui3-aui-rating-label-element&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="labelNode" name="labelNode"/>
        <variable description="The default locale for the widget. NOTE: Using get/set on the &quot;strings&quot; attribute will&#10;return/set strings for this locale.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="locale" name="locale"/>
        <variable description="If &lt;code&gt;true&lt;/code&gt; the render phase will be autimatically invoked&#10;preventing the &lt;code&gt;.render()&lt;/code&gt; manual call.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="render" name="render"/>
        <variable description="Flag indicating whether or not this Widget&#10;has been through the render lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="rendered" name="rendered"/>
        <variable description="Stores the index of the selected element.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="selectedIndex" name="selectedIndex"/>
        <variable description="If &lt;code&gt;true&lt;/code&gt; will extract the value of the&#10;&lt;code&gt;title&lt;/code&gt; attribute on the radio, and use it on the&#10;generated Rating elements.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="showTitle" name="showTitle"/>
        <variable description="Number of Rating elements to be displayed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="size" name="size"/>
        <variable description="The DOM node to parse for configuration values, passed to the Widget's HTML_PARSER definition&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="srcNode" name="srcNode"/>
        <variable description="Collection of strings used to label elements of the Widget's UI.&lt;!--{&quot;outputType&quot;:&quot;java.util.HashMap&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="strings" name="strings"/>
        <variable description="Number (between -32767 to 32767) indicating the widget's&#10;position in the default tab flow.  The value is used to set the&#10;&quot;tabIndex&quot; attribute on the widget's bounding box.  Negative values allow&#10;the widget to receive DOM focus programmatically (by calling the focus&#10;method), while being removed from the default tab flow.  A value of&#10;null removes the &quot;tabIndex&quot; attribute from the widget's bounding box.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="tabIndex" name="tabIndex"/>
        <variable description="If set, will be used when there is no DOM &lt;code&gt;title&lt;/code&gt; on the&#10;radio elements.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="title" name="title"/>
        <variable description="Boolean indicating if use of the WAI-ARIA Roles and States should be&#10;enabled for the Widget.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="useARIA" name="useARIA"/>
        <variable description="Stores the value of the current selected Rating element.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="ratingValue" name="ratingValue"/>
        <variable description="Boolean indicating weather or not the Widget is visible.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="visible" name="visible"/>
        <variable description="String with units, or number, representing the width of the Widget. If a number is provided,&#10;the default unit, defined by the Widgets DEF_UNIT, property is used.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="width" name="width"/>
        <variable description="Fires when the value for the configuration attribute 'boundingBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterBoundingBoxChange" name="afterBoundingBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'canReset' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCanResetChange" name="afterCanResetChange"/>
        <variable description="Fires when the value for the configuration attribute 'contentBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterContentBoxChange" name="afterContentBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'cssClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCssClassChange" name="afterCssClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'defaultSelected' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDefaultSelectedChange" name="afterDefaultSelectedChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroy" name="afterDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroyedChange" name="afterDestroyedChange"/>
        <variable description="Fires when the value for the configuration attribute 'disabled' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDisabledChange" name="afterDisabledChange"/>
        <variable description="Fires when the value for the configuration attribute 'elements' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterElementsChange" name="afterElementsChange"/>
        <variable description="Fires when the value for the configuration attribute 'focused' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterFocusedChange" name="afterFocusedChange"/>
        <variable description="Fires when the value for the configuration attribute 'height' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHeightChange" name="afterHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'hiddenInput' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHiddenInputChange" name="afterHiddenInputChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHideClassChange" name="afterHideClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'id' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterIdChange" name="afterIdChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInit" name="afterInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInitializedChange" name="afterInitializedChange"/>
        <variable description="Fires when the value for the configuration attribute 'inputName' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInputNameChange" name="afterInputNameChange"/>
        <variable description="Handles the itemClick event.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterItemClick" name="afterItemClick"/>
        <variable description="Handles the itemOut event.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterItemOut" name="afterItemOut"/>
        <variable description="Handles the itemSelect event.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterItemSelect" name="afterItemSelect"/>
        <variable description="Fires when the value for the configuration attribute 'label' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterLabelChange" name="afterLabelChange"/>
        <variable description="Fires when the value for the configuration attribute 'labelNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterLabelNodeChange" name="afterLabelNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'locale' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterLocaleChange" name="afterLocaleChange"/>
        <variable description="Fires when the value for the configuration attribute 'render' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRenderChange" name="afterRenderChange"/>
        <variable description="Fires when the value for the configuration attribute 'rendered' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRenderedChange" name="afterRenderedChange"/>
        <variable description="Fires when the value for the configuration attribute 'selectedIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterSelectedIndexChange" name="afterSelectedIndexChange"/>
        <variable description="Fires when the value for the configuration attribute 'showTitle' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterShowTitleChange" name="afterShowTitleChange"/>
        <variable description="Fires when the value for the configuration attribute 'size' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterSizeChange" name="afterSizeChange"/>
        <variable description="Fires when the value for the configuration attribute 'srcNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterSrcNodeChange" name="afterSrcNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'strings' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterStringsChange" name="afterStringsChange"/>
        <variable description="Fires when the value for the configuration attribute 'tabIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTabIndexChange" name="afterTabIndexChange"/>
        <variable description="Fires when the value for the configuration attribute 'title' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTitleChange" name="afterTitleChange"/>
        <variable description="Fires when the value for the configuration attribute 'useARIA' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterUseARIAChange" name="afterUseARIAChange"/>
        <variable description="Fires when the value for the configuration attribute 'value' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterValueChange" name="afterValueChange"/>
        <variable description="Fires when the value for the configuration attribute 'visible' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterVisibleChange" name="afterVisibleChange"/>
        <variable description="Notification event, which widget implementations can fire, when&#10;they change the content of the widget. This event has no default&#10;behavior and cannot be prevented, so the &quot;on&quot; or &quot;after&quot;&#10;moments are effectively equivalent (with on listeners being invoked before&#10;after listeners).&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterContentUpdate" name="afterContentUpdate"/>
        <variable description="Lifecycle event for the render phase, fired prior to rendering the UI&#10;for the widget (prior to invoking the widget's renderer method).&#10;&lt;p&gt;&#10;Subscribers to the &quot;on&quot; moment of this event, will be notified&#10;before the widget is rendered.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after rendering is complete.&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRender" name="afterRender"/>
        <variable description="Fires when the value for the configuration attribute 'width' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterWidthChange" name="afterWidthChange"/>
        <variable description="Fires when the value for the configuration attribute 'boundingBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onBoundingBoxChange" name="onBoundingBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'canReset' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCanResetChange" name="onCanResetChange"/>
        <variable description="Fires when the value for the configuration attribute 'contentBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onContentBoxChange" name="onContentBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'cssClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCssClassChange" name="onCssClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'defaultSelected' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDefaultSelectedChange" name="onDefaultSelectedChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroy" name="onDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroyedChange" name="onDestroyedChange"/>
        <variable description="Fires when the value for the configuration attribute 'disabled' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDisabledChange" name="onDisabledChange"/>
        <variable description="Fires when the value for the configuration attribute 'elements' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onElementsChange" name="onElementsChange"/>
        <variable description="Fires when the value for the configuration attribute 'focused' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onFocusedChange" name="onFocusedChange"/>
        <variable description="Fires when the value for the configuration attribute 'height' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHeightChange" name="onHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'hiddenInput' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHiddenInputChange" name="onHiddenInputChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHideClassChange" name="onHideClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'id' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onIdChange" name="onIdChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInit" name="onInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInitializedChange" name="onInitializedChange"/>
        <variable description="Fires when the value for the configuration attribute 'inputName' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInputNameChange" name="onInputNameChange"/>
        <variable description="Handles the itemClick event.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onItemClick" name="onItemClick"/>
        <variable description="Handles the itemOut event.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onItemOut" name="onItemOut"/>
        <variable description="Handles the itemSelect event.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onItemSelect" name="onItemSelect"/>
        <variable description="Fires when the value for the configuration attribute 'label' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onLabelChange" name="onLabelChange"/>
        <variable description="Fires when the value for the configuration attribute 'labelNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onLabelNodeChange" name="onLabelNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'locale' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onLocaleChange" name="onLocaleChange"/>
        <variable description="Fires when the value for the configuration attribute 'render' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRenderChange" name="onRenderChange"/>
        <variable description="Fires when the value for the configuration attribute 'rendered' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRenderedChange" name="onRenderedChange"/>
        <variable description="Fires when the value for the configuration attribute 'selectedIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onSelectedIndexChange" name="onSelectedIndexChange"/>
        <variable description="Fires when the value for the configuration attribute 'showTitle' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onShowTitleChange" name="onShowTitleChange"/>
        <variable description="Fires when the value for the configuration attribute 'size' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onSizeChange" name="onSizeChange"/>
        <variable description="Fires when the value for the configuration attribute 'srcNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onSrcNodeChange" name="onSrcNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'strings' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onStringsChange" name="onStringsChange"/>
        <variable description="Fires when the value for the configuration attribute 'tabIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTabIndexChange" name="onTabIndexChange"/>
        <variable description="Fires when the value for the configuration attribute 'title' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTitleChange" name="onTitleChange"/>
        <variable description="Fires when the value for the configuration attribute 'useARIA' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onUseARIAChange" name="onUseARIAChange"/>
        <variable description="Fires when the value for the configuration attribute 'value' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onValueChange" name="onValueChange"/>
        <variable description="Fires when the value for the configuration attribute 'visible' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onVisibleChange" name="onVisibleChange"/>
        <variable description="Notification event, which widget implementations can fire, when&#10;they change the content of the widget. This event has no default&#10;behavior and cannot be prevented, so the &quot;on&quot; or &quot;after&quot;&#10;moments are effectively equivalent (with on listeners being invoked before&#10;after listeners).&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onContentUpdate" name="onContentUpdate"/>
        <variable description="Lifecycle event for the render phase, fired prior to rendering the UI&#10;for the widget (prior to invoking the widget's renderer method).&#10;&lt;p&gt;&#10;Subscribers to the &quot;on&quot; moment of this event, will be notified&#10;before the widget is rendered.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after rendering is complete.&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRender" name="onRender"/>
        <variable description="Fires when the value for the configuration attribute 'width' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onWidthChange" name="onWidthChange"/>
      </item>
      <item class="com.liferay.ide.taglib.ui.snippets.AlloyTagSnippetInsertion" description="resize" id="com.liferay.ide.ui.snippets.item.resize" label="resize" smallicon="icons/snippets/tag-generic.gif">
        <content>
          &lt;alloy:resize${activeHandle}${activeHandleEl}${activeHandleNode}${autoHide}${constrain}${defMinHeight}${defMinWidth}${destroyed}${handles}${initialized}${maxHeight}${maxWidth}${minHeight}${minWidth}${node}${preserveRatio}${proxy}${proxyEl}${proxyNode}${resizing}${tickX}${tickY}${wrap}${wrapTypes}${wrapper}${afterActiveHandleChange}${afterActiveHandleElChange}${afterActiveHandleNodeChange}${afterAutoHideChange}${afterConstrainChange}${afterDefMinHeightChange}${afterDefMinWidthChange}${afterDestroy}${afterDestroyedChange}${afterHandlesChange}${afterInit}${afterInitializedChange}${afterMaxHeightChange}${afterMaxWidthChange}${afterMinHeightChange}${afterMinWidthChange}${afterNodeChange}${afterPreserveRatioChange}${afterProxyChange}${afterProxyElChange}${afterProxyNodeChange}${afterAlign}${afterEnd}${afterMouseUp}${afterResize}${afterStart}${afterResizingChange}${afterTickXChange}${afterTickYChange}${afterWrapChange}${afterWrapTypesChange}${afterWrapperChange}${onActiveHandleChange}${onActiveHandleElChange}${onActiveHandleNodeChange}${onAutoHideChange}${onConstrainChange}${onDefMinHeightChange}${onDefMinWidthChange}${onDestroy}${onDestroyedChange}${onHandlesChange}${onInit}${onInitializedChange}${onMaxHeightChange}${onMaxWidthChange}${onMinHeightChange}${onMinWidthChange}${onNodeChange}${onPreserveRatioChange}${onProxyChange}${onProxyElChange}${onProxyNodeChange}${onAlign}${onEnd}${onMouseUp}${onResize}${onStart}${onResizingChange}${onTickXChange}${onTickYChange}${onWrapChange}${onWrapTypesChange}${onWrapperChange}&gt;&lt;/alloy:resize&gt;
        </content>
        <variable description="Stores the active handle during the resize.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="activeHandle" name="activeHandle"/>
        <variable description="Stores the active handle element during the resize.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="activeHandleEl" name="activeHandleEl"/>
        <variable description="Stores the active handle element during the resize.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="activeHandleNode" name="activeHandleNode"/>
        <variable description="False to ensure that the resize handles are always visible, true to&#10;display them only when the user mouses over the resizable borders.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="autoHide" name="autoHide"/>
        <variable description="Will attempt to constrain the resize node to the boundaries. Arguments:&lt;br&gt;&#10;'view': Contrain to Viewport&lt;br&gt;&#10;'#selector_string': Constrain to this node&lt;br&gt;&#10;'{Region Object}': An Object Literal containing a valid region (top, right, bottom, left) of page positions&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="constrain" name="constrain"/>
        <variable description="The default minimum height of the element. Only used when&#10;ResizeConstrained is not plugged.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="defMinHeight" name="defMinHeight"/>
        <variable description="The default minimum width of the element. Only used when&#10;ResizeConstrained is not plugged.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="defMinWidth" name="defMinWidth"/>
        <variable description="Flag indicating whether or not this object&#10;has been through the destroy lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="destroyed" name="destroyed"/>
        <variable description="The handles to use (any combination of): 't', 'b', 'r', 'l', 'bl',&#10;'br', 'tl', 'tr'. Can use a shortcut of All.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="handles" name="handles"/>
        <variable description="Flag indicating whether or not this object&#10;has been through the init lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="initialized" name="initialized"/>
        <variable description="The maximum height of the element&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="maxHeight" name="maxHeight"/>
        <variable description="The maximum width of the element&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="maxWidth" name="maxWidth"/>
        <variable description="The minimum height of the element&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="minHeight" name="minHeight"/>
        <variable description="The minimum width of the element&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="minWidth" name="minWidth"/>
        <variable description="The selector or element to resize. Required.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="node" name="node"/>
        <variable description="Maintain the element's ratio when resizing.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="preserveRatio" name="preserveRatio"/>
        <variable description="Resize a proxy element instead of the real element.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="proxy" name="proxy"/>
        <variable description="The Resize proxy element.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="proxyEl" name="proxyEl"/>
        <variable description="The Resize proxy element.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="proxyNode" name="proxyNode"/>
        <variable description="True when the element is being Resized.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="resizing" name="resizing"/>
        <variable description="The number of x ticks to span the resize to.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="tickX" name="tickX"/>
        <variable description="The number of y ticks to span the resize to.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="tickY" name="tickY"/>
        <variable description="True to wrap an element with a div if needed (required for textareas&#10;and images, defaults to false) in favor of the handles config option.&#10;The wrapper element type (default div) could be over-riden passing the&#10;&lt;code&gt;wrapper&lt;/code&gt; attribute.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="wrap" name="wrap"/>
        <variable description="Elements that requires a wrapper by default. Normally are elements&#10;which cannot have children elements.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="wrapTypes" name="wrapTypes"/>
        <variable description="Element to wrap the &lt;code&gt;wrapTypes&lt;/code&gt;. This element will house&#10;the handles elements.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="wrapper" name="wrapper"/>
        <variable description="Fires when the value for the configuration attribute 'activeHandle' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterActiveHandleChange" name="afterActiveHandleChange"/>
        <variable description="Fires when the value for the configuration attribute 'activeHandleEl' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterActiveHandleElChange" name="afterActiveHandleElChange"/>
        <variable description="Fires when the value for the configuration attribute 'activeHandleNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterActiveHandleNodeChange" name="afterActiveHandleNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'autoHide' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterAutoHideChange" name="afterAutoHideChange"/>
        <variable description="Fires when the value for the configuration attribute 'constrain' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterConstrainChange" name="afterConstrainChange"/>
        <variable description="Fires when the value for the configuration attribute 'defMinHeight' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDefMinHeightChange" name="afterDefMinHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'defMinWidth' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDefMinWidthChange" name="afterDefMinWidthChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroy" name="afterDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroyedChange" name="afterDestroyedChange"/>
        <variable description="Fires when the value for the configuration attribute 'handles' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHandlesChange" name="afterHandlesChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInit" name="afterInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInitializedChange" name="afterInitializedChange"/>
        <variable description="Fires when the value for the configuration attribute 'maxHeight' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterMaxHeightChange" name="afterMaxHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'maxWidth' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterMaxWidthChange" name="afterMaxWidthChange"/>
        <variable description="Fires when the value for the configuration attribute 'minHeight' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterMinHeightChange" name="afterMinHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'minWidth' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterMinWidthChange" name="afterMinWidthChange"/>
        <variable description="Fires when the value for the configuration attribute 'node' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterNodeChange" name="afterNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'preserveRatio' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterPreserveRatioChange" name="afterPreserveRatioChange"/>
        <variable description="Fires when the value for the configuration attribute 'proxy' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterProxyChange" name="afterProxyChange"/>
        <variable description="Fires when the value for the configuration attribute 'proxyEl' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterProxyElChange" name="afterProxyElChange"/>
        <variable description="Fires when the value for the configuration attribute 'proxyNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterProxyNodeChange" name="afterProxyNodeChange"/>
        <variable description="Handles the resize align event.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterAlign" name="afterAlign"/>
        <variable description="Handles the resize end event. Fired when a handle stop to be&#10;dragged.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterEnd" name="afterEnd"/>
        <variable description="Handles the resize mouseUp event. Fired when a mouseUp event happens on a&#10;handle.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterMouseUp" name="afterMouseUp"/>
        <variable description="Handles the resize event. Fired on each pixel when the handle is&#10;being dragged.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterResize" name="afterResize"/>
        <variable description="Handles the resize start event. Fired when a handle starts to be&#10;dragged.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterStart" name="afterStart"/>
        <variable description="Fires when the value for the configuration attribute 'resizing' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterResizingChange" name="afterResizingChange"/>
        <variable description="Fires when the value for the configuration attribute 'tickX' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTickXChange" name="afterTickXChange"/>
        <variable description="Fires when the value for the configuration attribute 'tickY' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTickYChange" name="afterTickYChange"/>
        <variable description="Fires when the value for the configuration attribute 'wrap' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterWrapChange" name="afterWrapChange"/>
        <variable description="Fires when the value for the configuration attribute 'wrapTypes' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterWrapTypesChange" name="afterWrapTypesChange"/>
        <variable description="Fires when the value for the configuration attribute 'wrapper' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterWrapperChange" name="afterWrapperChange"/>
        <variable description="Fires when the value for the configuration attribute 'activeHandle' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onActiveHandleChange" name="onActiveHandleChange"/>
        <variable description="Fires when the value for the configuration attribute 'activeHandleEl' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onActiveHandleElChange" name="onActiveHandleElChange"/>
        <variable description="Fires when the value for the configuration attribute 'activeHandleNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onActiveHandleNodeChange" name="onActiveHandleNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'autoHide' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onAutoHideChange" name="onAutoHideChange"/>
        <variable description="Fires when the value for the configuration attribute 'constrain' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onConstrainChange" name="onConstrainChange"/>
        <variable description="Fires when the value for the configuration attribute 'defMinHeight' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDefMinHeightChange" name="onDefMinHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'defMinWidth' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDefMinWidthChange" name="onDefMinWidthChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroy" name="onDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroyedChange" name="onDestroyedChange"/>
        <variable description="Fires when the value for the configuration attribute 'handles' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHandlesChange" name="onHandlesChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInit" name="onInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInitializedChange" name="onInitializedChange"/>
        <variable description="Fires when the value for the configuration attribute 'maxHeight' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onMaxHeightChange" name="onMaxHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'maxWidth' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onMaxWidthChange" name="onMaxWidthChange"/>
        <variable description="Fires when the value for the configuration attribute 'minHeight' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onMinHeightChange" name="onMinHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'minWidth' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onMinWidthChange" name="onMinWidthChange"/>
        <variable description="Fires when the value for the configuration attribute 'node' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onNodeChange" name="onNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'preserveRatio' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onPreserveRatioChange" name="onPreserveRatioChange"/>
        <variable description="Fires when the value for the configuration attribute 'proxy' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onProxyChange" name="onProxyChange"/>
        <variable description="Fires when the value for the configuration attribute 'proxyEl' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onProxyElChange" name="onProxyElChange"/>
        <variable description="Fires when the value for the configuration attribute 'proxyNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onProxyNodeChange" name="onProxyNodeChange"/>
        <variable description="Handles the resize align event.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onAlign" name="onAlign"/>
        <variable description="Handles the resize end event. Fired when a handle stop to be&#10;dragged.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onEnd" name="onEnd"/>
        <variable description="Handles the resize mouseUp event. Fired when a mouseUp event happens on a&#10;handle.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onMouseUp" name="onMouseUp"/>
        <variable description="Handles the resize event. Fired on each pixel when the handle is&#10;being dragged.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onResize" name="onResize"/>
        <variable description="Handles the resize start event. Fired when a handle starts to be&#10;dragged.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onStart" name="onStart"/>
        <variable description="Fires when the value for the configuration attribute 'resizing' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onResizingChange" name="onResizingChange"/>
        <variable description="Fires when the value for the configuration attribute 'tickX' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTickXChange" name="onTickXChange"/>
        <variable description="Fires when the value for the configuration attribute 'tickY' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTickYChange" name="onTickYChange"/>
        <variable description="Fires when the value for the configuration attribute 'wrap' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onWrapChange" name="onWrapChange"/>
        <variable description="Fires when the value for the configuration attribute 'wrapTypes' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onWrapTypesChange" name="onWrapTypesChange"/>
        <variable description="Fires when the value for the configuration attribute 'wrapper' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onWrapperChange" name="onWrapperChange"/>
      </item>
      <item class="com.liferay.ide.taglib.ui.snippets.AlloyTagSnippetInsertion" description="textboxlist" id="com.liferay.ide.ui.snippets.item.textboxlist" label="textboxlist" smallicon="icons/snippets/tag-generic.gif">
        <content>
          &lt;alloy:textboxlist${alwaysShowContainer}${applyLocalFilter}${autoHighlight}${boundingBox}${button}${contentBox}${cssClass}${dataSource}${dataSourceType}${delimChar}${destroyed}${disabled}${focused}${forceSelection}${height}${hideClass}${textboxlistId}${initialized}${input}${locale}${matchKey}${maxResultsDisplayed}${minQueryLength}${queryDelay}${queryInterval}${queryMatchCase}${queryMatchContains}${queryQuestionMark}${render}${rendered}${schema}${schemaType}${srcNode}${strings}${suppressInputUpdate}${tabIndex}${typeAhead}${typeAheadDelay}${uniqueName}${useARIA}${visible}${width}${afterAlwaysShowContainerChange}${afterApplyLocalFilterChange}${afterAutoHighlightChange}${afterBoundingBoxChange}${afterButtonChange}${afterContainerCollapse}${afterContainerExpand}${afterContainerPopulate}${afterContentBoxChange}${afterCssClassChange}${afterDataError}${afterDataRequest}${afterDataReturn}${afterDataSourceChange}${afterDataSourceTypeChange}${afterDelimCharChange}${afterDestroy}${afterDestroyedChange}${afterDisabledChange}${afterFocusedChange}${afterForceSelectionChange}${afterHeightChange}${afterHideClassChange}${afterIdChange}${afterInit}${afterInitializedChange}${afterInputChange}${afterItemArrowFrom}${afterItemArrowTo}${afterItemMouseOut}${afterItemMouseOver}${afterItemSelect}${afterLocaleChange}${afterMatchKeyChange}${afterMaxResultsDisplayedChange}${afterMinQueryLengthChange}${afterQueryDelayChange}${afterQueryIntervalChange}${afterQueryMatchCaseChange}${afterQueryMatchContainsChange}${afterQueryQuestionMarkChange}${afterRenderChange}${afterRenderedChange}${afterSchemaChange}${afterSchemaTypeChange}${afterSelectionEnforce}${afterSrcNodeChange}${afterStringsChange}${afterSuppressInputUpdateChange}${afterTabIndexChange}${afterTextboxBlur}${afterTextboxChange}${afterTextboxFocus}${afterTextboxKey}${afterTypeAhead}${afterTypeAheadChange}${afterTypeAheadDelayChange}${afterUniqueNameChange}${afterUnmatchedItemSelect}${afterUseARIAChange}${afterVisibleChange}${afterContentUpdate}${afterRender}${afterWidthChange}${onAlwaysShowContainerChange}${onApplyLocalFilterChange}${onAutoHighlightChange}${onBoundingBoxChange}${onButtonChange}${onContainerCollapse}${onContainerExpand}${onContainerPopulate}${onContentBoxChange}${onCssClassChange}${onDataError}${onDataRequest}${onDataReturn}${onDataSourceChange}${onDataSourceTypeChange}${onDelimCharChange}${onDestroy}${onDestroyedChange}${onDisabledChange}${onFocusedChange}${onForceSelectionChange}${onHeightChange}${onHideClassChange}${onIdChange}${onInit}${onInitializedChange}${onInputChange}${onItemArrowFrom}${onItemArrowTo}${onItemMouseOut}${onItemMouseOver}${onItemSelect}${onLocaleChange}${onMatchKeyChange}${onMaxResultsDisplayedChange}${onMinQueryLengthChange}${onQueryDelayChange}${onQueryIntervalChange}${onQueryMatchCaseChange}${onQueryMatchContainsChange}${onQueryQuestionMarkChange}${onRenderChange}${onRenderedChange}${onSchemaChange}${onSchemaTypeChange}${onSelectionEnforce}${onSrcNodeChange}${onStringsChange}${onSuppressInputUpdateChange}${onTabIndexChange}${onTextboxBlur}${onTextboxChange}${onTextboxFocus}${onTextboxKey}${onTypeAhead}${onTypeAheadChange}${onTypeAheadDelayChange}${onUniqueNameChange}${onUnmatchedItemSelect}${onUseARIAChange}${onVisibleChange}${onContentUpdate}${onRender}${onWidthChange}&gt;&lt;/alloy:textboxlist&gt;
        </content>
        <variable description="Always show the results container, instead of only showing when the&#10;user is requesting them.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="alwaysShowContainer" name="alwaysShowContainer"/>
        <variable description="If set to true, the &lt;a href=&quot;AutoComplete.html#method_filterResults&quot;&gt;filterResults&lt;/a&gt;&#10;method will be run on the response from the data source.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="applyLocalFilter" name="applyLocalFilter"/>
        <variable description="Automatically highlight the first item in the list when the results are&#10;made visible.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="autoHighlight" name="autoHighlight"/>
        <variable description="The outermost DOM node for the Widget, used for sizing and positioning&#10;of a Widget as well as a containing element for any decorator elements used&#10;for skinning.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="boundingBox" name="boundingBox"/>
        <variable description="To use a button&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="button" name="button"/>
        <variable description="A DOM node that is a direct descendant of a Widget's bounding box that&#10;houses its content.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="contentBox" name="contentBox"/>
        <variable description="CSS class to be automatically added to the &lt;code&gt;boundingBox&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="cssClass" name="cssClass"/>
        <variable description="The data source that results will be read from. This can either be&#10;an existing &lt;a href=&quot;DataSource.html&quot;&gt;DataSource&lt;/a&gt; object, or it can be a&#10;value that would be passed to &lt;a href=&quot;DataSource.html&quot;&gt;DataSource&lt;/a&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="dataSource" name="dataSource"/>
        <variable description="The type of the data source passed into &lt;a href=&quot;AutoComplete.html#config_dataSource&quot;&gt;dataSource&lt;/a&gt;.&#10;This can be used to explicitly declare what kind of &lt;a href=&quot;DataSource.html&quot;&gt;DataSource&lt;/a&gt; object will&#10;be created.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="dataSourceType" name="dataSourceType"/>
        <variable description="The character used to indicate the beginning or ending of a new value. Most commonly used&#10;is a &quot;,&quot;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="delimChar" name="delimChar"/>
        <variable description="Flag indicating whether or not this object&#10;has been through the destroy lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="destroyed" name="destroyed"/>
        <variable description="Boolean indicating if the Widget should be disabled. The disabled implementation&#10;is left to the specific classes extending widget.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="disabled" name="disabled"/>
        <variable description="Boolean indicating if the Widget, or one of its descendants,&#10;has focus.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="focused" name="focused"/>
        <variable description="If &lt;a href=&quot;AutoComplete.html#config_typeAhead&quot;&gt;typeAhead&lt;/a&gt; is true, this&#10;will clear a selection when the overlay closes unless a user explicitly selects an item.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="forceSelection" name="forceSelection"/>
        <variable description="String with units, or number, representing the height of the Widget. If a number is provided,&#10;the default unit, defined by the Widgets DEF_UNIT, property is used.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="height" name="height"/>
        <variable description="css class added to hide the &lt;code&gt;boundingBox&lt;/code&gt; when&#10;&lt;a href=&quot;Component.html#config_visible&quot;&gt;visible&lt;/a&gt; is set to&#10;&lt;code&gt;false&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="hideClass" name="hideClass"/>
        <variable description="&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="textboxlistId" name="textboxlistId"/>
        <variable description="Flag indicating whether or not this object&#10;has been through the init lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="initialized" name="initialized"/>
        <variable description="The input field which will recieve the users input.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="input" name="input"/>
        <variable description="The default locale for the widget. NOTE: Using get/set on the &quot;strings&quot; attribute will&#10;return/set strings for this locale.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="locale" name="locale"/>
        <variable description="The key or numeric index in the schema to match the result against.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="matchKey" name="matchKey"/>
        <variable description="The maximum number of results to display.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="maxResultsDisplayed" name="maxResultsDisplayed"/>
        <variable description="The minimum number of characters required to query the data source.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="minQueryLength" name="minQueryLength"/>
        <variable description="The amount of time in seconds to delay before submitting the query.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="queryDelay" name="queryDelay"/>
        <variable description="When IME usage is detected or interval detection is explicitly enabled,&#10;AutoComplete will detect the input value at the given interval and send a&#10;query if the value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="queryInterval" name="queryInterval"/>
        <variable description="When &lt;a href=&quot;AutoComplete.html#config_applyLocalFilter&quot;&gt;applyLocalFilter&lt;/a&gt; is true,&#10;setting this to true will match only results with the same case.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="queryMatchCase" name="queryMatchCase"/>
        <variable description="When &lt;a href=&quot;AutoComplete.html#config_applyLocalFilter&quot;&gt;applyLocalFilter&lt;/a&gt; is true,&#10;setting this to true will match results which contain the query anywhere in the text,&#10;instead of just matching just items that start with the query.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="queryMatchContains" name="queryMatchContains"/>
        <variable description="For IO DataSources, AutoComplete will automatically insert a &quot;?&quot; between the server URI and&#10;the encoded query string. To prevent this behavior, you can&#10;set this value to false. If you need to customize this even further, you&#10;can override the &lt;a href=&quot;AutoComplete.html#method_generateRequest&quot;&gt;generateRequest&lt;/a&gt; method.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="queryQuestionMark" name="queryQuestionMark"/>
        <variable description="If &lt;code&gt;true&lt;/code&gt; the render phase will be autimatically invoked&#10;preventing the &lt;code&gt;.render()&lt;/code&gt; manual call.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="render" name="render"/>
        <variable description="Flag indicating whether or not this Widget&#10;has been through the render lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="rendered" name="rendered"/>
        <variable description="A valid configuration object for any of &lt;a href=&quot;module_datasource.html&quot;&gt;DataSource&lt;/a&gt; schema plugins.&lt;!--{&quot;outputType&quot;:&quot;java.util.HashMap&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="schema" name="schema"/>
        <variable description="A valid type of &lt;a href=&quot;module_datasource.html&quot;&gt;DataSource&lt;/a&gt; schema plugin, such as array, json, xml, etc.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="schemaType" name="schemaType"/>
        <variable description="The DOM node to parse for configuration values, passed to the Widget's HTML_PARSER definition&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="srcNode" name="srcNode"/>
        <variable description="Collection of strings used to label elements of the Widget's UI.&lt;!--{&quot;outputType&quot;:&quot;java.util.HashMap&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="strings" name="strings"/>
        <variable description="Whether or not the input field should be updated with selections.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="suppressInputUpdate" name="suppressInputUpdate"/>
        <variable description="Number (between -32767 to 32767) indicating the widget's&#10;position in the default tab flow.  The value is used to set the&#10;&quot;tabIndex&quot; attribute on the widget's bounding box.  Negative values allow&#10;the widget to receive DOM focus programmatically (by calling the focus&#10;method), while being removed from the default tab flow.  A value of&#10;null removes the &quot;tabIndex&quot; attribute from the widget's bounding box.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="tabIndex" name="tabIndex"/>
        <variable description="If &lt;a href=&quot;AutoComplete.html#config_autoHighlight&quot;&gt;autoHighlight&lt;/a&gt; is enabled, whether or not the&#10;input field should be automatically updated with the first result as the user types,&#10;automatically selecting the portion of the text the user has not typed yet.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="typeAhead" name="typeAhead"/>
        <variable description="If &lt;a href=&quot;AutoComplete.html#config_typeAhead&quot;&gt;typeAhead&lt;/a&gt; is true, number of seconds&#10;to delay before updating the input. In order to prevent certain race conditions, this value must&#10;always be greater than the &lt;a href=&quot;AutoComplete.html#config_queryDelay&quot;&gt;queryDelay&lt;/a&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="typeAheadDelay" name="typeAheadDelay"/>
        <variable description="The unique ID of the input element.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="uniqueName" name="uniqueName"/>
        <variable description="Boolean indicating if use of the WAI-ARIA Roles and States should be&#10;enabled for the Widget.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="useARIA" name="useARIA"/>
        <variable description="Boolean indicating weather or not the Widget is visible.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="visible" name="visible"/>
        <variable description="String with units, or number, representing the width of the Widget. If a number is provided,&#10;the default unit, defined by the Widgets DEF_UNIT, property is used.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="width" name="width"/>
        <variable description="Fires when the value for the configuration attribute 'alwaysShowContainer' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterAlwaysShowContainerChange" name="afterAlwaysShowContainerChange"/>
        <variable description="Fires when the value for the configuration attribute 'applyLocalFilter' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterApplyLocalFilterChange" name="afterApplyLocalFilterChange"/>
        <variable description="Fires when the value for the configuration attribute 'autoHighlight' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterAutoHighlightChange" name="afterAutoHighlightChange"/>
        <variable description="Fires when the value for the configuration attribute 'boundingBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterBoundingBoxChange" name="afterBoundingBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'button' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterButtonChange" name="afterButtonChange"/>
        <variable description="Handles the containerCollapse event. Fired when the container is hidden.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterContainerCollapse" name="afterContainerCollapse"/>
        <variable description="Handles the containerExpand event. Fired when the container is shown.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterContainerExpand" name="afterContainerExpand"/>
        <variable description="Handles the containerPopulate event. Fired when the container is populated.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterContainerPopulate" name="afterContainerPopulate"/>
        <variable description="Fires when the value for the configuration attribute 'contentBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterContentBoxChange" name="afterContentBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'cssClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCssClassChange" name="afterCssClassChange"/>
        <variable description="Handles the dataError event. Fired when there is an error accessing the data.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDataError" name="afterDataError"/>
        <variable description="Handles the dataRequest event. Fired when ever a query is sent to the data source.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDataRequest" name="afterDataRequest"/>
        <variable description="Handles the dataReturn event. Fired when data successfully comes back from the data request.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDataReturn" name="afterDataReturn"/>
        <variable description="Fires when the value for the configuration attribute 'dataSource' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDataSourceChange" name="afterDataSourceChange"/>
        <variable description="Fires when the value for the configuration attribute 'dataSourceType' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDataSourceTypeChange" name="afterDataSourceTypeChange"/>
        <variable description="Fires when the value for the configuration attribute 'delimChar' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDelimCharChange" name="afterDelimCharChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroy" name="afterDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroyedChange" name="afterDestroyedChange"/>
        <variable description="Fires when the value for the configuration attribute 'disabled' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDisabledChange" name="afterDisabledChange"/>
        <variable description="Fires when the value for the configuration attribute 'focused' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterFocusedChange" name="afterFocusedChange"/>
        <variable description="Fires when the value for the configuration attribute 'forceSelection' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterForceSelectionChange" name="afterForceSelectionChange"/>
        <variable description="Fires when the value for the configuration attribute 'height' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHeightChange" name="afterHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHideClassChange" name="afterHideClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'id' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterIdChange" name="afterIdChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInit" name="afterInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInitializedChange" name="afterInitializedChange"/>
        <variable description="Fires when the value for the configuration attribute 'input' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInputChange" name="afterInputChange"/>
        <variable description="Handles the itemArrowFrom event. Fired when the user navigates via the keyboard away from&#10;a selected item.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterItemArrowFrom" name="afterItemArrowFrom"/>
        <variable description="Handles the itemArrowTo event. Fired when the user navigates via the keyboard to a selected item.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterItemArrowTo" name="afterItemArrowTo"/>
        <variable description="Handles the itemMouseOut event. Fired when the user mouses away from an item.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterItemMouseOut" name="afterItemMouseOut"/>
        <variable description="Handles the itemMouseOver event. Fired when the user mouses over an item.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterItemMouseOver" name="afterItemMouseOver"/>
        <variable description="Handles the itemSelect event. Fired when an item in the list is selected.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterItemSelect" name="afterItemSelect"/>
        <variable description="Fires when the value for the configuration attribute 'locale' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterLocaleChange" name="afterLocaleChange"/>
        <variable description="Fires when the value for the configuration attribute 'matchKey' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterMatchKeyChange" name="afterMatchKeyChange"/>
        <variable description="Fires when the value for the configuration attribute 'maxResultsDisplayed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterMaxResultsDisplayedChange" name="afterMaxResultsDisplayedChange"/>
        <variable description="Fires when the value for the configuration attribute 'minQueryLength' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterMinQueryLengthChange" name="afterMinQueryLengthChange"/>
        <variable description="Fires when the value for the configuration attribute 'queryDelay' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterQueryDelayChange" name="afterQueryDelayChange"/>
        <variable description="Fires when the value for the configuration attribute 'queryInterval' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterQueryIntervalChange" name="afterQueryIntervalChange"/>
        <variable description="Fires when the value for the configuration attribute 'queryMatchCase' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterQueryMatchCaseChange" name="afterQueryMatchCaseChange"/>
        <variable description="Fires when the value for the configuration attribute 'queryMatchContains' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterQueryMatchContainsChange" name="afterQueryMatchContainsChange"/>
        <variable description="Fires when the value for the configuration attribute 'queryQuestionMark' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterQueryQuestionMarkChange" name="afterQueryQuestionMarkChange"/>
        <variable description="Fires when the value for the configuration attribute 'render' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRenderChange" name="afterRenderChange"/>
        <variable description="Fires when the value for the configuration attribute 'rendered' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRenderedChange" name="afterRenderedChange"/>
        <variable description="Fires when the value for the configuration attribute 'schema' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterSchemaChange" name="afterSchemaChange"/>
        <variable description="Fires when the value for the configuration attribute 'schemaType' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterSchemaTypeChange" name="afterSchemaTypeChange"/>
        <variable description="Handles the selectionEnforce event. Fired if &lt;a href=&quot;Autocomplete.html#config_forceSelection&quot;&gt;forceSelection&lt;/a&gt;&#10;is enabled and the users input element has been cleared because it did not match one of the results.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterSelectionEnforce" name="afterSelectionEnforce"/>
        <variable description="Fires when the value for the configuration attribute 'srcNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterSrcNodeChange" name="afterSrcNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'strings' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterStringsChange" name="afterStringsChange"/>
        <variable description="Fires when the value for the configuration attribute 'suppressInputUpdate' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterSuppressInputUpdateChange" name="afterSuppressInputUpdateChange"/>
        <variable description="Fires when the value for the configuration attribute 'tabIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTabIndexChange" name="afterTabIndexChange"/>
        <variable description="Handles the textboxBlur event. Fired when the user leaves the input element.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTextboxBlur" name="afterTextboxBlur"/>
        <variable description="Handles the textboxChange event. Fired when the value in the input element is changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTextboxChange" name="afterTextboxChange"/>
        <variable description="Handles the textboxFocus event. Fired when user moves focus to the input element.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTextboxFocus" name="afterTextboxFocus"/>
        <variable description="Handles the textboxKey event. Fired when the input element receives key input.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTextboxKey" name="afterTextboxKey"/>
        <variable description="Handles the typeAhead event. Fired when the input element has been pre-filled by the type-ahead feature.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTypeAhead" name="afterTypeAhead"/>
        <variable description="Fires when the value for the configuration attribute 'typeAhead' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTypeAheadChange" name="afterTypeAheadChange"/>
        <variable description="Fires when the value for the configuration attribute 'typeAheadDelay' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTypeAheadDelayChange" name="afterTypeAheadDelayChange"/>
        <variable description="Fires when the value for the configuration attribute 'uniqueName' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterUniqueNameChange" name="afterUniqueNameChange"/>
        <variable description="Handles the unmatchedItemSelect event. Fired when a user selects something that does&#10;not match any of the displayed results.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterUnmatchedItemSelect" name="afterUnmatchedItemSelect"/>
        <variable description="Fires when the value for the configuration attribute 'useARIA' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterUseARIAChange" name="afterUseARIAChange"/>
        <variable description="Fires when the value for the configuration attribute 'visible' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterVisibleChange" name="afterVisibleChange"/>
        <variable description="Notification event, which widget implementations can fire, when&#10;they change the content of the widget. This event has no default&#10;behavior and cannot be prevented, so the &quot;on&quot; or &quot;after&quot;&#10;moments are effectively equivalent (with on listeners being invoked before&#10;after listeners).&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterContentUpdate" name="afterContentUpdate"/>
        <variable description="Lifecycle event for the render phase, fired prior to rendering the UI&#10;for the widget (prior to invoking the widget's renderer method).&#10;&lt;p&gt;&#10;Subscribers to the &quot;on&quot; moment of this event, will be notified&#10;before the widget is rendered.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after rendering is complete.&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRender" name="afterRender"/>
        <variable description="Fires when the value for the configuration attribute 'width' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterWidthChange" name="afterWidthChange"/>
        <variable description="Fires when the value for the configuration attribute 'alwaysShowContainer' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onAlwaysShowContainerChange" name="onAlwaysShowContainerChange"/>
        <variable description="Fires when the value for the configuration attribute 'applyLocalFilter' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onApplyLocalFilterChange" name="onApplyLocalFilterChange"/>
        <variable description="Fires when the value for the configuration attribute 'autoHighlight' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onAutoHighlightChange" name="onAutoHighlightChange"/>
        <variable description="Fires when the value for the configuration attribute 'boundingBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onBoundingBoxChange" name="onBoundingBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'button' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onButtonChange" name="onButtonChange"/>
        <variable description="Handles the containerCollapse event. Fired when the container is hidden.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onContainerCollapse" name="onContainerCollapse"/>
        <variable description="Handles the containerExpand event. Fired when the container is shown.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onContainerExpand" name="onContainerExpand"/>
        <variable description="Handles the containerPopulate event. Fired when the container is populated.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onContainerPopulate" name="onContainerPopulate"/>
        <variable description="Fires when the value for the configuration attribute 'contentBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onContentBoxChange" name="onContentBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'cssClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCssClassChange" name="onCssClassChange"/>
        <variable description="Handles the dataError event. Fired when there is an error accessing the data.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDataError" name="onDataError"/>
        <variable description="Handles the dataRequest event. Fired when ever a query is sent to the data source.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDataRequest" name="onDataRequest"/>
        <variable description="Handles the dataReturn event. Fired when data successfully comes back from the data request.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDataReturn" name="onDataReturn"/>
        <variable description="Fires when the value for the configuration attribute 'dataSource' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDataSourceChange" name="onDataSourceChange"/>
        <variable description="Fires when the value for the configuration attribute 'dataSourceType' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDataSourceTypeChange" name="onDataSourceTypeChange"/>
        <variable description="Fires when the value for the configuration attribute 'delimChar' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDelimCharChange" name="onDelimCharChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroy" name="onDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroyedChange" name="onDestroyedChange"/>
        <variable description="Fires when the value for the configuration attribute 'disabled' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDisabledChange" name="onDisabledChange"/>
        <variable description="Fires when the value for the configuration attribute 'focused' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onFocusedChange" name="onFocusedChange"/>
        <variable description="Fires when the value for the configuration attribute 'forceSelection' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onForceSelectionChange" name="onForceSelectionChange"/>
        <variable description="Fires when the value for the configuration attribute 'height' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHeightChange" name="onHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHideClassChange" name="onHideClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'id' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onIdChange" name="onIdChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInit" name="onInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInitializedChange" name="onInitializedChange"/>
        <variable description="Fires when the value for the configuration attribute 'input' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInputChange" name="onInputChange"/>
        <variable description="Handles the itemArrowFrom event. Fired when the user navigates via the keyboard away from&#10;a selected item.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onItemArrowFrom" name="onItemArrowFrom"/>
        <variable description="Handles the itemArrowTo event. Fired when the user navigates via the keyboard to a selected item.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onItemArrowTo" name="onItemArrowTo"/>
        <variable description="Handles the itemMouseOut event. Fired when the user mouses away from an item.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onItemMouseOut" name="onItemMouseOut"/>
        <variable description="Handles the itemMouseOver event. Fired when the user mouses over an item.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onItemMouseOver" name="onItemMouseOver"/>
        <variable description="Handles the itemSelect event. Fired when an item in the list is selected.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onItemSelect" name="onItemSelect"/>
        <variable description="Fires when the value for the configuration attribute 'locale' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onLocaleChange" name="onLocaleChange"/>
        <variable description="Fires when the value for the configuration attribute 'matchKey' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onMatchKeyChange" name="onMatchKeyChange"/>
        <variable description="Fires when the value for the configuration attribute 'maxResultsDisplayed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onMaxResultsDisplayedChange" name="onMaxResultsDisplayedChange"/>
        <variable description="Fires when the value for the configuration attribute 'minQueryLength' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onMinQueryLengthChange" name="onMinQueryLengthChange"/>
        <variable description="Fires when the value for the configuration attribute 'queryDelay' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onQueryDelayChange" name="onQueryDelayChange"/>
        <variable description="Fires when the value for the configuration attribute 'queryInterval' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onQueryIntervalChange" name="onQueryIntervalChange"/>
        <variable description="Fires when the value for the configuration attribute 'queryMatchCase' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onQueryMatchCaseChange" name="onQueryMatchCaseChange"/>
        <variable description="Fires when the value for the configuration attribute 'queryMatchContains' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onQueryMatchContainsChange" name="onQueryMatchContainsChange"/>
        <variable description="Fires when the value for the configuration attribute 'queryQuestionMark' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onQueryQuestionMarkChange" name="onQueryQuestionMarkChange"/>
        <variable description="Fires when the value for the configuration attribute 'render' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRenderChange" name="onRenderChange"/>
        <variable description="Fires when the value for the configuration attribute 'rendered' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRenderedChange" name="onRenderedChange"/>
        <variable description="Fires when the value for the configuration attribute 'schema' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onSchemaChange" name="onSchemaChange"/>
        <variable description="Fires when the value for the configuration attribute 'schemaType' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onSchemaTypeChange" name="onSchemaTypeChange"/>
        <variable description="Handles the selectionEnforce event. Fired if &lt;a href=&quot;Autocomplete.html#config_forceSelection&quot;&gt;forceSelection&lt;/a&gt;&#10;is enabled and the users input element has been cleared because it did not match one of the results.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onSelectionEnforce" name="onSelectionEnforce"/>
        <variable description="Fires when the value for the configuration attribute 'srcNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onSrcNodeChange" name="onSrcNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'strings' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onStringsChange" name="onStringsChange"/>
        <variable description="Fires when the value for the configuration attribute 'suppressInputUpdate' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onSuppressInputUpdateChange" name="onSuppressInputUpdateChange"/>
        <variable description="Fires when the value for the configuration attribute 'tabIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTabIndexChange" name="onTabIndexChange"/>
        <variable description="Handles the textboxBlur event. Fired when the user leaves the input element.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTextboxBlur" name="onTextboxBlur"/>
        <variable description="Handles the textboxChange event. Fired when the value in the input element is changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTextboxChange" name="onTextboxChange"/>
        <variable description="Handles the textboxFocus event. Fired when user moves focus to the input element.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTextboxFocus" name="onTextboxFocus"/>
        <variable description="Handles the textboxKey event. Fired when the input element receives key input.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTextboxKey" name="onTextboxKey"/>
        <variable description="Handles the typeAhead event. Fired when the input element has been pre-filled by the type-ahead feature.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTypeAhead" name="onTypeAhead"/>
        <variable description="Fires when the value for the configuration attribute 'typeAhead' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTypeAheadChange" name="onTypeAheadChange"/>
        <variable description="Fires when the value for the configuration attribute 'typeAheadDelay' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTypeAheadDelayChange" name="onTypeAheadDelayChange"/>
        <variable description="Fires when the value for the configuration attribute 'uniqueName' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onUniqueNameChange" name="onUniqueNameChange"/>
        <variable description="Handles the unmatchedItemSelect event. Fired when a user selects something that does&#10;not match any of the displayed results.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onUnmatchedItemSelect" name="onUnmatchedItemSelect"/>
        <variable description="Fires when the value for the configuration attribute 'useARIA' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onUseARIAChange" name="onUseARIAChange"/>
        <variable description="Fires when the value for the configuration attribute 'visible' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onVisibleChange" name="onVisibleChange"/>
        <variable description="Notification event, which widget implementations can fire, when&#10;they change the content of the widget. This event has no default&#10;behavior and cannot be prevented, so the &quot;on&quot; or &quot;after&quot;&#10;moments are effectively equivalent (with on listeners being invoked before&#10;after listeners).&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onContentUpdate" name="onContentUpdate"/>
        <variable description="Lifecycle event for the render phase, fired prior to rendering the UI&#10;for the widget (prior to invoking the widget's renderer method).&#10;&lt;p&gt;&#10;Subscribers to the &quot;on&quot; moment of this event, will be notified&#10;before the widget is rendered.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after rendering is complete.&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRender" name="onRender"/>
        <variable description="Fires when the value for the configuration attribute 'width' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onWidthChange" name="onWidthChange"/>
      </item>
      <item class="com.liferay.ide.taglib.ui.snippets.AlloyTagSnippetInsertion" description="thumb-rating" id="com.liferay.ide.ui.snippets.item.thumb-rating" label="thumb-rating" smallicon="icons/snippets/tag-generic.gif">
        <content>
          &lt;alloy:thumb-rating${boundingBox}${canReset}${contentBox}${cssClass}${defaultSelected}${destroyed}${disabled}${elements}${focused}${height}${hiddenInput}${hideClass}${thumbratingId}${initialized}${inputName}${label}${labelNode}${locale}${render}${rendered}${selectedIndex}${showTitle}${size}${srcNode}${strings}${tabIndex}${title}${useARIA}${thumbratingValue}${visible}${width}${afterBoundingBoxChange}${afterCanResetChange}${afterContentBoxChange}${afterCssClassChange}${afterDefaultSelectedChange}${afterDestroy}${afterDestroyedChange}${afterDisabledChange}${afterElementsChange}${afterFocusedChange}${afterHeightChange}${afterHiddenInputChange}${afterHideClassChange}${afterIdChange}${afterInit}${afterInitializedChange}${afterInputNameChange}${afterItemClick}${afterItemOut}${afterItemSelect}${afterLabelChange}${afterLabelNodeChange}${afterLocaleChange}${afterRenderChange}${afterRenderedChange}${afterSelectedIndexChange}${afterShowTitleChange}${afterSizeChange}${afterSrcNodeChange}${afterStringsChange}${afterTabIndexChange}${afterTitleChange}${afterUseARIAChange}${afterValueChange}${afterVisibleChange}${afterContentUpdate}${afterRender}${afterWidthChange}${onBoundingBoxChange}${onCanResetChange}${onContentBoxChange}${onCssClassChange}${onDefaultSelectedChange}${onDestroy}${onDestroyedChange}${onDisabledChange}${onElementsChange}${onFocusedChange}${onHeightChange}${onHiddenInputChange}${onHideClassChange}${onIdChange}${onInit}${onInitializedChange}${onInputNameChange}${onItemClick}${onItemOut}${onItemSelect}${onLabelChange}${onLabelNodeChange}${onLocaleChange}${onRenderChange}${onRenderedChange}${onSelectedIndexChange}${onShowTitleChange}${onSizeChange}${onSrcNodeChange}${onStringsChange}${onTabIndexChange}${onTitleChange}${onUseARIAChange}${onValueChange}${onVisibleChange}${onContentUpdate}${onRender}${onWidthChange}&gt;&lt;/alloy:thumb-rating&gt;
        </content>
        <variable description="The outermost DOM node for the Widget, used for sizing and positioning&#10;of a Widget as well as a containing element for any decorator elements used&#10;for skinning.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="boundingBox" name="boundingBox"/>
        <variable description="If &lt;code&gt;true&lt;/code&gt; could be reseted (i.e., have no values&#10;selected).&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="canReset" name="canReset"/>
        <variable description="A DOM node that is a direct descendant of a Widget's bounding box that&#10;houses its content.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="contentBox" name="contentBox"/>
        <variable description="CSS class to be automatically added to the &lt;code&gt;boundingBox&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="cssClass" name="cssClass"/>
        <variable description="The number of selected starts when the Rating render.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="defaultSelected" name="defaultSelected"/>
        <variable description="Flag indicating whether or not this object&#10;has been through the destroy lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="destroyed" name="destroyed"/>
        <variable description="Whether the Rating is disabled or not. Disabled Ratings don't allow&#10;hover or click, just display selected stars.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="disabled" name="disabled"/>
        <variable description="&lt;a href=&quot;NodeList.html&quot;&gt;NodeList&lt;/a&gt; of elements used on the&#10;Rating. Each element is one Star.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="elements" name="elements"/>
        <variable description="Boolean indicating if the Widget, or one of its descendants,&#10;has focus.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="focused" name="focused"/>
        <variable description="String with units, or number, representing the height of the Widget. If a number is provided,&#10;the default unit, defined by the Widgets DEF_UNIT, property is used.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="height" name="height"/>
        <variable description="Hidden input to handle the selected value. This hidden input&#10;replace the radio elements and keep the same name.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="hiddenInput" name="hiddenInput"/>
        <variable description="css class added to hide the &lt;code&gt;boundingBox&lt;/code&gt; when&#10;&lt;a href=&quot;Component.html#config_visible&quot;&gt;visible&lt;/a&gt; is set to&#10;&lt;code&gt;false&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="hideClass" name="hideClass"/>
        <variable description="&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="thumbratingId" name="thumbratingId"/>
        <variable description="Flag indicating whether or not this object&#10;has been through the init lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="initialized" name="initialized"/>
        <variable description="Name of the &lt;a&#10;href=&quot;Rating.html#config_hiddenInput&quot;&gt;hiddenInput&lt;/a&gt; element. If&#10;not specified will use the name of the replaced radio.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="inputName" name="inputName"/>
        <variable description="Label to be displayed with the Rating elements.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="label" name="label"/>
        <variable description="DOM Node to display the text of the StarRating. If not&#10;specified try to query using HTML_PARSER an element inside&#10;boundingBox which matches &lt;code&gt;yui3-aui-rating-label-element&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="labelNode" name="labelNode"/>
        <variable description="The default locale for the widget. NOTE: Using get/set on the &quot;strings&quot; attribute will&#10;return/set strings for this locale.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="locale" name="locale"/>
        <variable description="If &lt;code&gt;true&lt;/code&gt; the render phase will be autimatically invoked&#10;preventing the &lt;code&gt;.render()&lt;/code&gt; manual call.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="render" name="render"/>
        <variable description="Flag indicating whether or not this Widget&#10;has been through the render lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="rendered" name="rendered"/>
        <variable description="Stores the index of the selected element.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="selectedIndex" name="selectedIndex"/>
        <variable description="If &lt;code&gt;true&lt;/code&gt; will extract the value of the&#10;&lt;code&gt;title&lt;/code&gt; attribute on the radio, and use it on the&#10;generated Rating elements.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="showTitle" name="showTitle"/>
        <variable description="The size on ThumbRating is always 2 (i.e., thumb up and thumb down).&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="size" name="size"/>
        <variable description="The DOM node to parse for configuration values, passed to the Widget's HTML_PARSER definition&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="srcNode" name="srcNode"/>
        <variable description="Collection of strings used to label elements of the Widget's UI.&lt;!--{&quot;outputType&quot;:&quot;java.util.HashMap&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="strings" name="strings"/>
        <variable description="Number (between -32767 to 32767) indicating the widget's&#10;position in the default tab flow.  The value is used to set the&#10;&quot;tabIndex&quot; attribute on the widget's bounding box.  Negative values allow&#10;the widget to receive DOM focus programmatically (by calling the focus&#10;method), while being removed from the default tab flow.  A value of&#10;null removes the &quot;tabIndex&quot; attribute from the widget's bounding box.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="tabIndex" name="tabIndex"/>
        <variable description="If set, will be used when there is no DOM &lt;code&gt;title&lt;/code&gt; on the&#10;radio elements.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="title" name="title"/>
        <variable description="Boolean indicating if use of the WAI-ARIA Roles and States should be&#10;enabled for the Widget.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="useARIA" name="useARIA"/>
        <variable description="Stores the value of the current selected Rating element.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="thumbratingValue" name="thumbratingValue"/>
        <variable description="Boolean indicating weather or not the Widget is visible.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="visible" name="visible"/>
        <variable description="String with units, or number, representing the width of the Widget. If a number is provided,&#10;the default unit, defined by the Widgets DEF_UNIT, property is used.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="width" name="width"/>
        <variable description="Fires when the value for the configuration attribute 'boundingBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterBoundingBoxChange" name="afterBoundingBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'canReset' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCanResetChange" name="afterCanResetChange"/>
        <variable description="Fires when the value for the configuration attribute 'contentBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterContentBoxChange" name="afterContentBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'cssClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCssClassChange" name="afterCssClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'defaultSelected' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDefaultSelectedChange" name="afterDefaultSelectedChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroy" name="afterDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroyedChange" name="afterDestroyedChange"/>
        <variable description="Fires when the value for the configuration attribute 'disabled' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDisabledChange" name="afterDisabledChange"/>
        <variable description="Fires when the value for the configuration attribute 'elements' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterElementsChange" name="afterElementsChange"/>
        <variable description="Fires when the value for the configuration attribute 'focused' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterFocusedChange" name="afterFocusedChange"/>
        <variable description="Fires when the value for the configuration attribute 'height' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHeightChange" name="afterHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'hiddenInput' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHiddenInputChange" name="afterHiddenInputChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHideClassChange" name="afterHideClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'id' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterIdChange" name="afterIdChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInit" name="afterInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInitializedChange" name="afterInitializedChange"/>
        <variable description="Fires when the value for the configuration attribute 'inputName' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInputNameChange" name="afterInputNameChange"/>
        <variable description="Handles the itemClick event.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterItemClick" name="afterItemClick"/>
        <variable description="Handles the itemOut event.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterItemOut" name="afterItemOut"/>
        <variable description="Handles the itemSelect event.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterItemSelect" name="afterItemSelect"/>
        <variable description="Fires when the value for the configuration attribute 'label' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterLabelChange" name="afterLabelChange"/>
        <variable description="Fires when the value for the configuration attribute 'labelNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterLabelNodeChange" name="afterLabelNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'locale' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterLocaleChange" name="afterLocaleChange"/>
        <variable description="Fires when the value for the configuration attribute 'render' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRenderChange" name="afterRenderChange"/>
        <variable description="Fires when the value for the configuration attribute 'rendered' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRenderedChange" name="afterRenderedChange"/>
        <variable description="Fires when the value for the configuration attribute 'selectedIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterSelectedIndexChange" name="afterSelectedIndexChange"/>
        <variable description="Fires when the value for the configuration attribute 'showTitle' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterShowTitleChange" name="afterShowTitleChange"/>
        <variable description="Fires when the value for the configuration attribute 'size' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterSizeChange" name="afterSizeChange"/>
        <variable description="Fires when the value for the configuration attribute 'srcNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterSrcNodeChange" name="afterSrcNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'strings' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterStringsChange" name="afterStringsChange"/>
        <variable description="Fires when the value for the configuration attribute 'tabIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTabIndexChange" name="afterTabIndexChange"/>
        <variable description="Fires when the value for the configuration attribute 'title' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTitleChange" name="afterTitleChange"/>
        <variable description="Fires when the value for the configuration attribute 'useARIA' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterUseARIAChange" name="afterUseARIAChange"/>
        <variable description="Fires when the value for the configuration attribute 'value' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterValueChange" name="afterValueChange"/>
        <variable description="Fires when the value for the configuration attribute 'visible' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterVisibleChange" name="afterVisibleChange"/>
        <variable description="Notification event, which widget implementations can fire, when&#10;they change the content of the widget. This event has no default&#10;behavior and cannot be prevented, so the &quot;on&quot; or &quot;after&quot;&#10;moments are effectively equivalent (with on listeners being invoked before&#10;after listeners).&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterContentUpdate" name="afterContentUpdate"/>
        <variable description="Lifecycle event for the render phase, fired prior to rendering the UI&#10;for the widget (prior to invoking the widget's renderer method).&#10;&lt;p&gt;&#10;Subscribers to the &quot;on&quot; moment of this event, will be notified&#10;before the widget is rendered.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after rendering is complete.&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRender" name="afterRender"/>
        <variable description="Fires when the value for the configuration attribute 'width' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterWidthChange" name="afterWidthChange"/>
        <variable description="Fires when the value for the configuration attribute 'boundingBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onBoundingBoxChange" name="onBoundingBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'canReset' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCanResetChange" name="onCanResetChange"/>
        <variable description="Fires when the value for the configuration attribute 'contentBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onContentBoxChange" name="onContentBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'cssClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCssClassChange" name="onCssClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'defaultSelected' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDefaultSelectedChange" name="onDefaultSelectedChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroy" name="onDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroyedChange" name="onDestroyedChange"/>
        <variable description="Fires when the value for the configuration attribute 'disabled' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDisabledChange" name="onDisabledChange"/>
        <variable description="Fires when the value for the configuration attribute 'elements' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onElementsChange" name="onElementsChange"/>
        <variable description="Fires when the value for the configuration attribute 'focused' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onFocusedChange" name="onFocusedChange"/>
        <variable description="Fires when the value for the configuration attribute 'height' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHeightChange" name="onHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'hiddenInput' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHiddenInputChange" name="onHiddenInputChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHideClassChange" name="onHideClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'id' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onIdChange" name="onIdChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInit" name="onInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInitializedChange" name="onInitializedChange"/>
        <variable description="Fires when the value for the configuration attribute 'inputName' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInputNameChange" name="onInputNameChange"/>
        <variable description="Handles the itemClick event.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onItemClick" name="onItemClick"/>
        <variable description="Handles the itemOut event.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onItemOut" name="onItemOut"/>
        <variable description="Handles the itemSelect event.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onItemSelect" name="onItemSelect"/>
        <variable description="Fires when the value for the configuration attribute 'label' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onLabelChange" name="onLabelChange"/>
        <variable description="Fires when the value for the configuration attribute 'labelNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onLabelNodeChange" name="onLabelNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'locale' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onLocaleChange" name="onLocaleChange"/>
        <variable description="Fires when the value for the configuration attribute 'render' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRenderChange" name="onRenderChange"/>
        <variable description="Fires when the value for the configuration attribute 'rendered' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRenderedChange" name="onRenderedChange"/>
        <variable description="Fires when the value for the configuration attribute 'selectedIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onSelectedIndexChange" name="onSelectedIndexChange"/>
        <variable description="Fires when the value for the configuration attribute 'showTitle' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onShowTitleChange" name="onShowTitleChange"/>
        <variable description="Fires when the value for the configuration attribute 'size' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onSizeChange" name="onSizeChange"/>
        <variable description="Fires when the value for the configuration attribute 'srcNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onSrcNodeChange" name="onSrcNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'strings' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onStringsChange" name="onStringsChange"/>
        <variable description="Fires when the value for the configuration attribute 'tabIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTabIndexChange" name="onTabIndexChange"/>
        <variable description="Fires when the value for the configuration attribute 'title' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTitleChange" name="onTitleChange"/>
        <variable description="Fires when the value for the configuration attribute 'useARIA' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onUseARIAChange" name="onUseARIAChange"/>
        <variable description="Fires when the value for the configuration attribute 'value' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onValueChange" name="onValueChange"/>
        <variable description="Fires when the value for the configuration attribute 'visible' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onVisibleChange" name="onVisibleChange"/>
        <variable description="Notification event, which widget implementations can fire, when&#10;they change the content of the widget. This event has no default&#10;behavior and cannot be prevented, so the &quot;on&quot; or &quot;after&quot;&#10;moments are effectively equivalent (with on listeners being invoked before&#10;after listeners).&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onContentUpdate" name="onContentUpdate"/>
        <variable description="Lifecycle event for the render phase, fired prior to rendering the UI&#10;for the widget (prior to invoking the widget's renderer method).&#10;&lt;p&gt;&#10;Subscribers to the &quot;on&quot; moment of this event, will be notified&#10;before the widget is rendered.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after rendering is complete.&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRender" name="onRender"/>
        <variable description="Fires when the value for the configuration attribute 'width' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onWidthChange" name="onWidthChange"/>
      </item>
      <item class="com.liferay.ide.taglib.ui.snippets.AlloyTagSnippetInsertion" description="toolbar" id="com.liferay.ide.ui.snippets.item.toolbar" label="toolbar" smallicon="icons/snippets/tag-generic.gif">
        <content>
          &lt;alloy:toolbar${activeDescendant}${activeState}${boundingBox}${children}${contentBox}${cssClass}${defaultChildType}${defaultState}${destroyed}${disabled}${focused}${height}${hideClass}${hoverState}${toolbarId}${initialized}${locale}${multiple}${orientation}${render}${rendered}${selection}${srcNode}${strings}${tabIndex}${useARIA}${visible}${width}${afterActiveDescendantChange}${afterActiveStateChange}${afterAddChild}${afterBoundingBoxChange}${afterChildrenChange}${afterContentBoxChange}${afterCssClassChange}${afterDefaultChildTypeChange}${afterDefaultStateChange}${afterDestroy}${afterDestroyedChange}${afterDisabledChange}${afterFocusedChange}${afterHeightChange}${afterHideClassChange}${afterHoverStateChange}${afterIdChange}${afterInit}${afterInitializedChange}${afterLocaleChange}${afterMultipleChange}${afterOrientationChange}${afterRemoveChild}${afterRenderChange}${afterRenderedChange}${afterSelectionChange}${afterSrcNodeChange}${afterStringsChange}${afterTabIndexChange}${afterUseARIAChange}${afterVisibleChange}${afterContentUpdate}${afterRender}${afterWidthChange}${onActiveDescendantChange}${onActiveStateChange}${onAddChild}${onBoundingBoxChange}${onChildrenChange}${onContentBoxChange}${onCssClassChange}${onDefaultChildTypeChange}${onDefaultStateChange}${onDestroy}${onDestroyedChange}${onDisabledChange}${onFocusedChange}${onHeightChange}${onHideClassChange}${onHoverStateChange}${onIdChange}${onInit}${onInitializedChange}${onLocaleChange}${onMultipleChange}${onOrientationChange}${onRemoveChild}${onRenderChange}${onRenderedChange}${onSelectionChange}${onSrcNodeChange}${onStringsChange}${onTabIndexChange}${onUseARIAChange}${onVisibleChange}${onContentUpdate}${onRender}${onWidthChange}&gt;&lt;/alloy:toolbar&gt;
        </content>
        <variable description="Returns the Widget's currently focused descendant Widget.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="activeDescendant" name="activeDescendant"/>
        <variable description="Receives an interaction state of active when the user clicks on it.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="activeState" name="activeState"/>
        <variable description="The outermost DOM node for the Widget, used for sizing and positioning&#10;of a Widget as well as a containing element for any decorator elements used&#10;for skinning.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="boundingBox" name="boundingBox"/>
        <variable description="Receives the toolbar items.&lt;!--{&quot;outputType&quot;:&quot;java.util.ArrayList&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="children" name="children"/>
        <variable description="A DOM node that is a direct descendant of a Widget's bounding box that&#10;houses its content.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="contentBox" name="contentBox"/>
        <variable description="CSS class to be automatically added to the &lt;code&gt;boundingBox&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="cssClass" name="cssClass"/>
        <variable description="The default type of child widget to render into the Element&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="defaultChildType" name="defaultChildType"/>
        <variable description="Receives a default interaction state.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="defaultState" name="defaultState"/>
        <variable description="Flag indicating whether or not this object&#10;has been through the destroy lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="destroyed" name="destroyed"/>
        <variable description="Boolean indicating if the Widget should be disabled. The disabled implementation&#10;is left to the specific classes extending widget.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="disabled" name="disabled"/>
        <variable description="Boolean indicating if the Widget, or one of its descendants,&#10;has focus.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="focused" name="focused"/>
        <variable description="String with units, or number, representing the height of the Widget. If a number is provided,&#10;the default unit, defined by the Widgets DEF_UNIT, property is used.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="height" name="height"/>
        <variable description="css class added to hide the &lt;code&gt;boundingBox&lt;/code&gt; when&#10;&lt;a href=&quot;Component.html#config_visible&quot;&gt;visible&lt;/a&gt; is set to&#10;&lt;code&gt;false&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="hideClass" name="hideClass"/>
        <variable description="Receives an interaction state of hover during the&#10;&lt;code&gt;mouseover&lt;/code&gt; event.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="hoverState" name="hoverState"/>
        <variable description="&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="toolbarId" name="toolbarId"/>
        <variable description="Flag indicating whether or not this object&#10;has been through the init lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="initialized" name="initialized"/>
        <variable description="The default locale for the widget. NOTE: Using get/set on the &quot;strings&quot; attribute will&#10;return/set strings for this locale.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="locale" name="locale"/>
        <variable description="Boolean indicating if multiple children can be selected at&#10;once.  Whether or not multiple selection is enabled is always delegated&#10;to the value of the &lt;code&gt;multiple&lt;/code&gt; attribute of the root widget&#10;in the object hierarchy.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="multiple" name="multiple"/>
        <variable description="Representing the orientation of the progress bar. Could be&#10;&lt;code&gt;horizontal&lt;/code&gt; or &lt;code&gt;vertical&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="orientation" name="orientation"/>
        <variable description="If &lt;code&gt;true&lt;/code&gt; the render phase will be autimatically invoked&#10;preventing the &lt;code&gt;.render()&lt;/code&gt; manual call.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="render" name="render"/>
        <variable description="Flag indicating whether or not this Widget&#10;has been through the render lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="rendered" name="rendered"/>
        <variable description="Returns the currently selected child Widget.  If the&#10;&lt;code&gt;mulitple&lt;/code&gt; attribte is set to &lt;code&gt;true&lt;/code&gt; will&#10;return an Y.ArrayList instance containing the currently selected&#10;children.  If no children are selected, will return null.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="selection" name="selection"/>
        <variable description="The DOM node to parse for configuration values, passed to the Widget's HTML_PARSER definition&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="srcNode" name="srcNode"/>
        <variable description="Collection of strings used to label elements of the Widget's UI.&lt;!--{&quot;outputType&quot;:&quot;java.util.HashMap&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="strings" name="strings"/>
        <variable description="Number (between -32767 to 32767) indicating the widget's&#10;position in the default tab flow.  The value is used to set the&#10;&quot;tabIndex&quot; attribute on the widget's bounding box.  Negative values allow&#10;the widget to receive DOM focus programmatically (by calling the focus&#10;method), while being removed from the default tab flow.  A value of&#10;null removes the &quot;tabIndex&quot; attribute from the widget's bounding box.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="tabIndex" name="tabIndex"/>
        <variable description="Boolean indicating if use of the WAI-ARIA Roles and States should be&#10;enabled for the Widget.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="useARIA" name="useARIA"/>
        <variable description="Boolean indicating weather or not the Widget is visible.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="visible" name="visible"/>
        <variable description="String with units, or number, representing the width of the Widget. If a number is provided,&#10;the default unit, defined by the Widgets DEF_UNIT, property is used.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="width" name="width"/>
        <variable description="Fires when the value for the configuration attribute 'activeDescendant' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterActiveDescendantChange" name="afterActiveDescendantChange"/>
        <variable description="Fires when the value for the configuration attribute 'activeState' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterActiveStateChange" name="afterActiveStateChange"/>
        <variable description="Fires when a Widget is add as a child.  The event object will have a&#10;'child' property that returns a reference to the child Widget, as well&#10;as an 'index' property that returns a reference to the index specified&#10;when the add() method was called.&#10;&lt;p&gt;&#10;Subscribers to the &quot;on&quot; moment of this event, will be notified&#10;before a child is added.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after a child is added.&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterAddChild" name="afterAddChild"/>
        <variable description="Fires when the value for the configuration attribute 'boundingBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterBoundingBoxChange" name="afterBoundingBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'children' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterChildrenChange" name="afterChildrenChange"/>
        <variable description="Fires when the value for the configuration attribute 'contentBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterContentBoxChange" name="afterContentBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'cssClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCssClassChange" name="afterCssClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'defaultChildType' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDefaultChildTypeChange" name="afterDefaultChildTypeChange"/>
        <variable description="Fires when the value for the configuration attribute 'defaultState' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDefaultStateChange" name="afterDefaultStateChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroy" name="afterDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroyedChange" name="afterDestroyedChange"/>
        <variable description="Fires when the value for the configuration attribute 'disabled' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDisabledChange" name="afterDisabledChange"/>
        <variable description="Fires when the value for the configuration attribute 'focused' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterFocusedChange" name="afterFocusedChange"/>
        <variable description="Fires when the value for the configuration attribute 'height' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHeightChange" name="afterHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHideClassChange" name="afterHideClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'hoverState' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHoverStateChange" name="afterHoverStateChange"/>
        <variable description="Fires when the value for the configuration attribute 'id' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterIdChange" name="afterIdChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInit" name="afterInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInitializedChange" name="afterInitializedChange"/>
        <variable description="Fires when the value for the configuration attribute 'locale' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterLocaleChange" name="afterLocaleChange"/>
        <variable description="Fires when the value for the configuration attribute 'multiple' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterMultipleChange" name="afterMultipleChange"/>
        <variable description="Fires when the value for the configuration attribute 'orientation' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterOrientationChange" name="afterOrientationChange"/>
        <variable description="Fires when a child Widget is removed.  The event object will have a&#10;'child' property that returns a reference to the child Widget, as well&#10;as an 'index' property that returns a reference child's ordinal position.&#10;&lt;p&gt;&#10;Subscribers to the &quot;on&quot; moment of this event, will be notified&#10;before a child is removed.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after a child is removed.&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRemoveChild" name="afterRemoveChild"/>
        <variable description="Fires when the value for the configuration attribute 'render' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRenderChange" name="afterRenderChange"/>
        <variable description="Fires when the value for the configuration attribute 'rendered' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRenderedChange" name="afterRenderedChange"/>
        <variable description="Fires when the value for the configuration attribute 'selection' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterSelectionChange" name="afterSelectionChange"/>
        <variable description="Fires when the value for the configuration attribute 'srcNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterSrcNodeChange" name="afterSrcNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'strings' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterStringsChange" name="afterStringsChange"/>
        <variable description="Fires when the value for the configuration attribute 'tabIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTabIndexChange" name="afterTabIndexChange"/>
        <variable description="Fires when the value for the configuration attribute 'useARIA' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterUseARIAChange" name="afterUseARIAChange"/>
        <variable description="Fires when the value for the configuration attribute 'visible' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterVisibleChange" name="afterVisibleChange"/>
        <variable description="Notification event, which widget implementations can fire, when&#10;they change the content of the widget. This event has no default&#10;behavior and cannot be prevented, so the &quot;on&quot; or &quot;after&quot;&#10;moments are effectively equivalent (with on listeners being invoked before&#10;after listeners).&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterContentUpdate" name="afterContentUpdate"/>
        <variable description="Lifecycle event for the render phase, fired prior to rendering the UI&#10;for the widget (prior to invoking the widget's renderer method).&#10;&lt;p&gt;&#10;Subscribers to the &quot;on&quot; moment of this event, will be notified&#10;before the widget is rendered.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after rendering is complete.&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRender" name="afterRender"/>
        <variable description="Fires when the value for the configuration attribute 'width' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterWidthChange" name="afterWidthChange"/>
        <variable description="Fires when the value for the configuration attribute 'activeDescendant' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onActiveDescendantChange" name="onActiveDescendantChange"/>
        <variable description="Fires when the value for the configuration attribute 'activeState' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onActiveStateChange" name="onActiveStateChange"/>
        <variable description="Fires when a Widget is add as a child.  The event object will have a&#10;'child' property that returns a reference to the child Widget, as well&#10;as an 'index' property that returns a reference to the index specified&#10;when the add() method was called.&#10;&lt;p&gt;&#10;Subscribers to the &quot;on&quot; moment of this event, will be notified&#10;before a child is added.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after a child is added.&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onAddChild" name="onAddChild"/>
        <variable description="Fires when the value for the configuration attribute 'boundingBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onBoundingBoxChange" name="onBoundingBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'children' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onChildrenChange" name="onChildrenChange"/>
        <variable description="Fires when the value for the configuration attribute 'contentBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onContentBoxChange" name="onContentBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'cssClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCssClassChange" name="onCssClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'defaultChildType' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDefaultChildTypeChange" name="onDefaultChildTypeChange"/>
        <variable description="Fires when the value for the configuration attribute 'defaultState' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDefaultStateChange" name="onDefaultStateChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroy" name="onDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroyedChange" name="onDestroyedChange"/>
        <variable description="Fires when the value for the configuration attribute 'disabled' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDisabledChange" name="onDisabledChange"/>
        <variable description="Fires when the value for the configuration attribute 'focused' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onFocusedChange" name="onFocusedChange"/>
        <variable description="Fires when the value for the configuration attribute 'height' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHeightChange" name="onHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHideClassChange" name="onHideClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'hoverState' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHoverStateChange" name="onHoverStateChange"/>
        <variable description="Fires when the value for the configuration attribute 'id' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onIdChange" name="onIdChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInit" name="onInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInitializedChange" name="onInitializedChange"/>
        <variable description="Fires when the value for the configuration attribute 'locale' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onLocaleChange" name="onLocaleChange"/>
        <variable description="Fires when the value for the configuration attribute 'multiple' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onMultipleChange" name="onMultipleChange"/>
        <variable description="Fires when the value for the configuration attribute 'orientation' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onOrientationChange" name="onOrientationChange"/>
        <variable description="Fires when a child Widget is removed.  The event object will have a&#10;'child' property that returns a reference to the child Widget, as well&#10;as an 'index' property that returns a reference child's ordinal position.&#10;&lt;p&gt;&#10;Subscribers to the &quot;on&quot; moment of this event, will be notified&#10;before a child is removed.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after a child is removed.&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRemoveChild" name="onRemoveChild"/>
        <variable description="Fires when the value for the configuration attribute 'render' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRenderChange" name="onRenderChange"/>
        <variable description="Fires when the value for the configuration attribute 'rendered' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRenderedChange" name="onRenderedChange"/>
        <variable description="Fires when the value for the configuration attribute 'selection' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onSelectionChange" name="onSelectionChange"/>
        <variable description="Fires when the value for the configuration attribute 'srcNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onSrcNodeChange" name="onSrcNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'strings' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onStringsChange" name="onStringsChange"/>
        <variable description="Fires when the value for the configuration attribute 'tabIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTabIndexChange" name="onTabIndexChange"/>
        <variable description="Fires when the value for the configuration attribute 'useARIA' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onUseARIAChange" name="onUseARIAChange"/>
        <variable description="Fires when the value for the configuration attribute 'visible' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onVisibleChange" name="onVisibleChange"/>
        <variable description="Notification event, which widget implementations can fire, when&#10;they change the content of the widget. This event has no default&#10;behavior and cannot be prevented, so the &quot;on&quot; or &quot;after&quot;&#10;moments are effectively equivalent (with on listeners being invoked before&#10;after listeners).&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onContentUpdate" name="onContentUpdate"/>
        <variable description="Lifecycle event for the render phase, fired prior to rendering the UI&#10;for the widget (prior to invoking the widget's renderer method).&#10;&lt;p&gt;&#10;Subscribers to the &quot;on&quot; moment of this event, will be notified&#10;before the widget is rendered.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after rendering is complete.&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRender" name="onRender"/>
        <variable description="Fires when the value for the configuration attribute 'width' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onWidthChange" name="onWidthChange"/>
      </item>
      <item class="com.liferay.ide.taglib.ui.snippets.AlloyTagSnippetInsertion" description="tooltip" id="com.liferay.ide.ui.snippets.item.tooltip" label="tooltip" smallicon="icons/snippets/tag-generic.gif">
        <content>
          &lt;alloy:tooltip${align}${anim}${arrow}${tooltipBodyContent}${boundingBox}${cancellableHide}${centered}${constrain}${contentBox}${cssClass}${currentNode}${destroyed}${disabled}${fillHeight}${focused}${footerContent}${headerContent}${height}${hideClass}${hideDelay}${hideOn}${hideOnDocumentClick}${tooltipId}${initialized}${locale}${preventOverlap}${render}${rendered}${shim}${showArrow}${showDelay}${showOn}${srcNode}${stack}${strings}${tabIndex}${title}${trigger}${useARIA}${visible}${width}${x}${xy}${y}${zIndex}${afterAlignChange}${afterAnimChange}${afterArrowChange}${afterBodyContentChange}${afterBoundingBoxChange}${afterCancellableHideChange}${afterCenteredChange}${afterConstrainChange}${afterContentBoxChange}${afterCssClassChange}${afterCurrentNodeChange}${afterDestroy}${afterDestroyedChange}${afterDisabledChange}${afterFillHeightChange}${afterFocusedChange}${afterFooterContentChange}${afterHeaderContentChange}${afterHeightChange}${afterHideClassChange}${afterHideDelayChange}${afterHideOnChange}${afterHideOnDocumentClickChange}${afterIdChange}${afterInit}${afterInitializedChange}${afterLocaleChange}${afterPreventOverlapChange}${afterRenderChange}${afterRenderedChange}${afterShimChange}${afterShowArrowChange}${afterShowDelayChange}${afterShowOnChange}${afterSrcNodeChange}${afterStackChange}${afterStringsChange}${afterTabIndexChange}${afterTitleChange}${afterTriggerChange}${afterUseARIAChange}${afterVisibleChange}${afterContentUpdate}${afterRender}${afterWidthChange}${afterXChange}${afterXyChange}${afterYChange}${afterZIndexChange}${onAlignChange}${onAnimChange}${onArrowChange}${onBodyContentChange}${onBoundingBoxChange}${onCancellableHideChange}${onCenteredChange}${onConstrainChange}${onContentBoxChange}${onCssClassChange}${onCurrentNodeChange}${onDestroy}${onDestroyedChange}${onDisabledChange}${onFillHeightChange}${onFocusedChange}${onFooterContentChange}${onHeaderContentChange}${onHeightChange}${onHideClassChange}${onHideDelayChange}${onHideOnChange}${onHideOnDocumentClickChange}${onIdChange}${onInit}${onInitializedChange}${onLocaleChange}${onPreventOverlapChange}${onRenderChange}${onRenderedChange}${onShimChange}${onShowArrowChange}${onShowDelayChange}${onShowOnChange}${onSrcNodeChange}${onStackChange}${onStringsChange}${onTabIndexChange}${onTitleChange}${onTriggerChange}${onUseARIAChange}${onVisibleChange}${onContentUpdate}${onRender}${onWidthChange}${onXChange}${onXyChange}${onYChange}${onZIndexChange}&gt;&lt;/alloy:tooltip&gt;
        </content>
        <variable description="See &lt;a href=&quot;Overlay.html#config_align&quot;&gt;OverlayContextPanel align&lt;/a&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.util.HashMap&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="align" name="align"/>
        <variable description="See &lt;a href=&quot;OverlayContextPanel.html#config_anim&quot;&gt;OverlayContextPanel anim&lt;/a&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.util.HashMap&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="anim" name="anim"/>
        <variable description="Position where the arrow will be placed. See&#10;&lt;a href=&quot;OverlayContextPanel.html#config_showArrow&quot;&gt;showArrow&lt;/a&gt;. If it's&#10;not set, it will get the value set on the&#10;&lt;a href=&quot;OverlayContext.html#config_align&quot;&gt;align&lt;/a&gt; point. Here is a&#10;list of valid arrows 'bc', 'bl', 'br', 'cc', 'lb', 'lc', 'lt', 'rb',&#10;'rc', 'rl'.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="arrow" name="arrow"/>
        <variable description="The content to be added to the body section. This will replace any existing content&#10;in the body. If you want to append, or insert new content, use the &lt;a href=&quot;#method_setStdModContent&quot;&gt;setStdModContent&lt;/a&gt; method.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="tooltipBodyContent" name="tooltipBodyContent"/>
        <variable description="The outermost DOM node for the Widget, used for sizing and positioning&#10;of a Widget as well as a containing element for any decorator elements used&#10;for skinning.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="boundingBox" name="boundingBox"/>
        <variable description="Cancel auto hide delay if the user interact with the Overlay&#10;(focus, click, mouseover)&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="cancellableHide" name="cancellableHide"/>
        <variable description="A convenience attribute, which can be used as a shortcut for the align attribute.&#10;If set to true, the Widget is centered in the viewport. If set to a node reference or valid selector string,&#10;the Widget will be centered within the node. If set the false, no center positioning is applied.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="centered" name="centered"/>
        <variable description="The node to constrain the widget's bounding box to, when setting xy. Can also be&#10;set to true, to constrain to the viewport.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="constrain" name="constrain"/>
        <variable description="A DOM node that is a direct descendant of a Widget's bounding box that&#10;houses its content.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="contentBox" name="contentBox"/>
        <variable description="CSS class to be automatically added to the &lt;code&gt;boundingBox&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="cssClass" name="cssClass"/>
        <variable description="OverlayContext allow multiple elements to be the&#10;&lt;a href=&quot;OverlayContext.html#config_trigger&quot;&gt;trigger&lt;/a&gt;, the&#10;currentNode stores the current active one.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="currentNode" name="currentNode"/>
        <variable description="Flag indicating whether or not this object&#10;has been through the destroy lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="destroyed" name="destroyed"/>
        <variable description="Boolean indicating if the Widget should be disabled. The disabled implementation&#10;is left to the specific classes extending widget.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="disabled" name="disabled"/>
        <variable description="The section (WidgetStdMod.HEADER, WidgetStdMod.BODY or WidgetStdMod.FOOTER) which should be resized to fill the height of the standard module, when a&#10;height is set on the Widget. If a height is not set on the widget, then all sections are sized based on&#10;their content.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="fillHeight" name="fillHeight"/>
        <variable description="Boolean indicating if the Widget, or one of its descendants,&#10;has focus.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="focused" name="focused"/>
        <variable description="The content to be added to the footer section. This will replace any existing content&#10;in the footer. If you want to append, or insert new content, use the &lt;a href=&quot;#method_setStdModContent&quot;&gt;setStdModContent&lt;/a&gt; method.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="footerContent" name="footerContent"/>
        <variable description="The content to be added to the header section. This will replace any existing content&#10;in the header. If you want to append, or insert new content, use the &lt;a href=&quot;#method_setStdModContent&quot;&gt;setStdModContent&lt;/a&gt; method.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="headerContent" name="headerContent"/>
        <variable description="String with units, or number, representing the height of the Widget. If a number is provided,&#10;the default unit, defined by the Widgets DEF_UNIT, property is used.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="height" name="height"/>
        <variable description="css class added to hide the &lt;code&gt;boundingBox&lt;/code&gt; when&#10;&lt;a href=&quot;Component.html#config_visible&quot;&gt;visible&lt;/a&gt; is set to&#10;&lt;code&gt;false&lt;/code&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="hideClass" name="hideClass"/>
        <variable description="See &lt;a href=&quot;OverlayContext.html#config_hideDelay&quot;&gt;OverlayContext hideDelay&lt;/a&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="hideDelay" name="hideDelay"/>
        <variable description="See &lt;a href=&quot;OverlayContext.html#config_showOn&quot;&gt;OverlayContext showOn&lt;/a&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="hideOn" name="hideOn"/>
        <variable description="If true the instance is registered on the&#10;&lt;a href=&quot;OverlayContextManager.html&quot;&gt;OverlayContextManager&lt;/a&gt; static&#10;class and will be hide when the user click on document.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="hideOnDocumentClick" name="hideOnDocumentClick"/>
        <variable description="&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="tooltipId" name="tooltipId"/>
        <variable description="Flag indicating whether or not this object&#10;has been through the init lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="initialized" name="initialized"/>
        <variable description="The default locale for the widget. NOTE: Using get/set on the &quot;strings&quot; attribute will&#10;return/set strings for this locale.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="locale" name="locale"/>
        <variable description="If set to true, and WidgetPositionAlign is also added to the Widget,&#10;constrained positioning will attempt to prevent the widget's bounding box from overlapping&#10;the element to which it has been aligned, by flipping the orientation of the alignment&#10;for corner based alignments&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="preventOverlap" name="preventOverlap"/>
        <variable description="If &lt;code&gt;true&lt;/code&gt; the render phase will be autimatically invoked&#10;preventing the &lt;code&gt;.render()&lt;/code&gt; manual call.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="render" name="render"/>
        <variable description="Flag indicating whether or not this Widget&#10;has been through the render lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="rendered" name="rendered"/>
        <variable description="Boolean flag to indicate whether or not a shim should be added to the Widgets&#10;boundingBox, to protect it from select box bleedthrough.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="shim" name="shim"/>
        <variable description="If true the OverlayContextPanel will show an arrow positioned on the&#10;&lt;a href=&quot;OverlayContextPanel.html#config_arrow&quot;&gt;arrow&lt;/a&gt; point.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="showArrow" name="showArrow"/>
        <variable description="Number of milliseconds after the show method is invoked to show the&#10;OverlayContext.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="showDelay" name="showDelay"/>
        <variable description="See &lt;a href=&quot;OverlayContext.html#config_showOn&quot;&gt;OverlayContext showOn&lt;/a&gt;.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="showOn" name="showOn"/>
        <variable description="The DOM node to parse for configuration values, passed to the Widget's HTML_PARSER definition&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="srcNode" name="srcNode"/>
        <variable description="Gives stacking habilities to the OverlayContextPanel.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="stack" name="stack"/>
        <variable description="Collection of strings used to label elements of the Widget's UI.&lt;!--{&quot;outputType&quot;:&quot;java.util.HashMap&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="strings" name="strings"/>
        <variable description="Number (between -32767 to 32767) indicating the widget's&#10;position in the default tab flow.  The value is used to set the&#10;&quot;tabIndex&quot; attribute on the widget's bounding box.  Negative values allow&#10;the widget to receive DOM focus programmatically (by calling the focus&#10;method), while being removed from the default tab flow.  A value of&#10;null removes the &quot;tabIndex&quot; attribute from the widget's bounding box.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="tabIndex" name="tabIndex"/>
        <variable description="Use the content of the &lt;code&gt;title&lt;/code&gt; attribute as the Tooltip&#10;content.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="title" name="title"/>
        <variable description="Node, NodeList or Selector which will be used as trigger elements&#10;to show or hide the OverlayContext.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="trigger" name="trigger"/>
        <variable description="True if Overlay should use ARIA plugin&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="useARIA" name="useARIA"/>
        <variable description="If true the OverlayContext is visible by default after the render phase.&#10;Inherited from &lt;a href=&quot;Overlay.html&quot;&gt;Overlay&lt;/a&gt;.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="visible" name="visible"/>
        <variable description="String with units, or number, representing the width of the Widget. If a number is provided,&#10;the default unit, defined by the Widgets DEF_UNIT, property is used.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="width" name="width"/>
        <variable description="Page X co-ordinate for the widget. This attribute acts as a facade for the&#10;xy attribute. Changes in position can be monitored by listening for xyChange events.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="x" name="x"/>
        <variable description="Page XY co-ordinate pair for the widget.&lt;!--{&quot;outputType&quot;:&quot;java.util.ArrayList&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="xy" name="xy"/>
        <variable description="Page Y co-ordinate for the widget. This attribute acts as a facade for the&#10;xy attribute. Changes in position can be monitored by listening for xyChange events.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="y" name="y"/>
        <variable description="The z-index to apply to the Widgets boundingBox. Non-numerical values for&#10;zIndex will be converted to 0&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="zIndex" name="zIndex"/>
        <variable description="Fires when the value for the configuration attribute 'align' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterAlignChange" name="afterAlignChange"/>
        <variable description="Fires when the value for the configuration attribute 'anim' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterAnimChange" name="afterAnimChange"/>
        <variable description="Fires when the value for the configuration attribute 'arrow' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterArrowChange" name="afterArrowChange"/>
        <variable description="Fires when the value for the configuration attribute 'bodyContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterBodyContentChange" name="afterBodyContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'boundingBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterBoundingBoxChange" name="afterBoundingBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'cancellableHide' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCancellableHideChange" name="afterCancellableHideChange"/>
        <variable description="Fires when the value for the configuration attribute 'centered' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCenteredChange" name="afterCenteredChange"/>
        <variable description="Fires when the value for the configuration attribute 'constrain' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterConstrainChange" name="afterConstrainChange"/>
        <variable description="Fires when the value for the configuration attribute 'contentBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterContentBoxChange" name="afterContentBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'cssClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCssClassChange" name="afterCssClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'currentNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCurrentNodeChange" name="afterCurrentNodeChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroy" name="afterDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroyedChange" name="afterDestroyedChange"/>
        <variable description="Fires when the value for the configuration attribute 'disabled' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDisabledChange" name="afterDisabledChange"/>
        <variable description="Fires when the value for the configuration attribute 'fillHeight' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterFillHeightChange" name="afterFillHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'focused' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterFocusedChange" name="afterFocusedChange"/>
        <variable description="Fires when the value for the configuration attribute 'footerContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterFooterContentChange" name="afterFooterContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'headerContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHeaderContentChange" name="afterHeaderContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'height' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHeightChange" name="afterHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHideClassChange" name="afterHideClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideDelay' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHideDelayChange" name="afterHideDelayChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideOn' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHideOnChange" name="afterHideOnChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideOnDocumentClick' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHideOnDocumentClickChange" name="afterHideOnDocumentClickChange"/>
        <variable description="Fires when the value for the configuration attribute 'id' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterIdChange" name="afterIdChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInit" name="afterInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInitializedChange" name="afterInitializedChange"/>
        <variable description="Fires when the value for the configuration attribute 'locale' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterLocaleChange" name="afterLocaleChange"/>
        <variable description="Fires when the value for the configuration attribute 'preventOverlap' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterPreventOverlapChange" name="afterPreventOverlapChange"/>
        <variable description="Fires when the value for the configuration attribute 'render' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRenderChange" name="afterRenderChange"/>
        <variable description="Fires when the value for the configuration attribute 'rendered' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRenderedChange" name="afterRenderedChange"/>
        <variable description="Fires when the value for the configuration attribute 'shim' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterShimChange" name="afterShimChange"/>
        <variable description="Fires when the value for the configuration attribute 'showArrow' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterShowArrowChange" name="afterShowArrowChange"/>
        <variable description="Fires when the value for the configuration attribute 'showDelay' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterShowDelayChange" name="afterShowDelayChange"/>
        <variable description="Fires when the value for the configuration attribute 'showOn' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterShowOnChange" name="afterShowOnChange"/>
        <variable description="Fires when the value for the configuration attribute 'srcNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterSrcNodeChange" name="afterSrcNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'stack' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterStackChange" name="afterStackChange"/>
        <variable description="Fires when the value for the configuration attribute 'strings' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterStringsChange" name="afterStringsChange"/>
        <variable description="Fires when the value for the configuration attribute 'tabIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTabIndexChange" name="afterTabIndexChange"/>
        <variable description="Fires when the value for the configuration attribute 'title' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTitleChange" name="afterTitleChange"/>
        <variable description="Fires when the value for the configuration attribute 'trigger' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTriggerChange" name="afterTriggerChange"/>
        <variable description="Fires when the value for the configuration attribute 'useARIA' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterUseARIAChange" name="afterUseARIAChange"/>
        <variable description="Fires when the value for the configuration attribute 'visible' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterVisibleChange" name="afterVisibleChange"/>
        <variable description="Notification event, which widget implementations can fire, when&#10;they change the content of the widget. This event has no default&#10;behavior and cannot be prevented, so the &quot;on&quot; or &quot;after&quot;&#10;moments are effectively equivalent (with on listeners being invoked before&#10;after listeners).&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterContentUpdate" name="afterContentUpdate"/>
        <variable description="Lifecycle event for the render phase, fired prior to rendering the UI&#10;for the widget (prior to invoking the widget's renderer method).&#10;&lt;p&gt;&#10;Subscribers to the &quot;on&quot; moment of this event, will be notified&#10;before the widget is rendered.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after rendering is complete.&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterRender" name="afterRender"/>
        <variable description="Fires when the value for the configuration attribute 'width' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterWidthChange" name="afterWidthChange"/>
        <variable description="Fires when the value for the configuration attribute 'x' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterXChange" name="afterXChange"/>
        <variable description="Fires when the value for the configuration attribute 'xy' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterXyChange" name="afterXyChange"/>
        <variable description="Fires when the value for the configuration attribute 'y' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterYChange" name="afterYChange"/>
        <variable description="Fires when the value for the configuration attribute 'zIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterZIndexChange" name="afterZIndexChange"/>
        <variable description="Fires when the value for the configuration attribute 'align' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onAlignChange" name="onAlignChange"/>
        <variable description="Fires when the value for the configuration attribute 'anim' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onAnimChange" name="onAnimChange"/>
        <variable description="Fires when the value for the configuration attribute 'arrow' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onArrowChange" name="onArrowChange"/>
        <variable description="Fires when the value for the configuration attribute 'bodyContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onBodyContentChange" name="onBodyContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'boundingBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onBoundingBoxChange" name="onBoundingBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'cancellableHide' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCancellableHideChange" name="onCancellableHideChange"/>
        <variable description="Fires when the value for the configuration attribute 'centered' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCenteredChange" name="onCenteredChange"/>
        <variable description="Fires when the value for the configuration attribute 'constrain' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onConstrainChange" name="onConstrainChange"/>
        <variable description="Fires when the value for the configuration attribute 'contentBox' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onContentBoxChange" name="onContentBoxChange"/>
        <variable description="Fires when the value for the configuration attribute 'cssClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCssClassChange" name="onCssClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'currentNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCurrentNodeChange" name="onCurrentNodeChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroy" name="onDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroyedChange" name="onDestroyedChange"/>
        <variable description="Fires when the value for the configuration attribute 'disabled' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDisabledChange" name="onDisabledChange"/>
        <variable description="Fires when the value for the configuration attribute 'fillHeight' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onFillHeightChange" name="onFillHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'focused' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onFocusedChange" name="onFocusedChange"/>
        <variable description="Fires when the value for the configuration attribute 'footerContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onFooterContentChange" name="onFooterContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'headerContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHeaderContentChange" name="onHeaderContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'height' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHeightChange" name="onHeightChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideClass' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHideClassChange" name="onHideClassChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideDelay' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHideDelayChange" name="onHideDelayChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideOn' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHideOnChange" name="onHideOnChange"/>
        <variable description="Fires when the value for the configuration attribute 'hideOnDocumentClick' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHideOnDocumentClickChange" name="onHideOnDocumentClickChange"/>
        <variable description="Fires when the value for the configuration attribute 'id' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onIdChange" name="onIdChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInit" name="onInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInitializedChange" name="onInitializedChange"/>
        <variable description="Fires when the value for the configuration attribute 'locale' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onLocaleChange" name="onLocaleChange"/>
        <variable description="Fires when the value for the configuration attribute 'preventOverlap' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onPreventOverlapChange" name="onPreventOverlapChange"/>
        <variable description="Fires when the value for the configuration attribute 'render' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRenderChange" name="onRenderChange"/>
        <variable description="Fires when the value for the configuration attribute 'rendered' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRenderedChange" name="onRenderedChange"/>
        <variable description="Fires when the value for the configuration attribute 'shim' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onShimChange" name="onShimChange"/>
        <variable description="Fires when the value for the configuration attribute 'showArrow' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onShowArrowChange" name="onShowArrowChange"/>
        <variable description="Fires when the value for the configuration attribute 'showDelay' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onShowDelayChange" name="onShowDelayChange"/>
        <variable description="Fires when the value for the configuration attribute 'showOn' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onShowOnChange" name="onShowOnChange"/>
        <variable description="Fires when the value for the configuration attribute 'srcNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onSrcNodeChange" name="onSrcNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'stack' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onStackChange" name="onStackChange"/>
        <variable description="Fires when the value for the configuration attribute 'strings' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onStringsChange" name="onStringsChange"/>
        <variable description="Fires when the value for the configuration attribute 'tabIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTabIndexChange" name="onTabIndexChange"/>
        <variable description="Fires when the value for the configuration attribute 'title' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTitleChange" name="onTitleChange"/>
        <variable description="Fires when the value for the configuration attribute 'trigger' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTriggerChange" name="onTriggerChange"/>
        <variable description="Fires when the value for the configuration attribute 'useARIA' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onUseARIAChange" name="onUseARIAChange"/>
        <variable description="Fires when the value for the configuration attribute 'visible' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onVisibleChange" name="onVisibleChange"/>
        <variable description="Notification event, which widget implementations can fire, when&#10;they change the content of the widget. This event has no default&#10;behavior and cannot be prevented, so the &quot;on&quot; or &quot;after&quot;&#10;moments are effectively equivalent (with on listeners being invoked before&#10;after listeners).&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onContentUpdate" name="onContentUpdate"/>
        <variable description="Lifecycle event for the render phase, fired prior to rendering the UI&#10;for the widget (prior to invoking the widget's renderer method).&#10;&lt;p&gt;&#10;Subscribers to the &quot;on&quot; moment of this event, will be notified&#10;before the widget is rendered.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after rendering is complete.&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onRender" name="onRender"/>
        <variable description="Fires when the value for the configuration attribute 'width' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onWidthChange" name="onWidthChange"/>
        <variable description="Fires when the value for the configuration attribute 'x' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onXChange" name="onXChange"/>
        <variable description="Fires when the value for the configuration attribute 'xy' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onXyChange" name="onXyChange"/>
        <variable description="Fires when the value for the configuration attribute 'y' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onYChange" name="onYChange"/>
        <variable description="Fires when the value for the configuration attribute 'zIndex' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onZIndexChange" name="onZIndexChange"/>
      </item>
      <item class="com.liferay.ide.taglib.ui.snippets.AlloyTagSnippetInsertion" description="tree-node-task" id="com.liferay.ide.ui.snippets.item.tree-node-task" label="tree-node-task" smallicon="icons/snippets/tag-generic.gif">
        <content>
          &lt;alloy:tree-node-task${alwaysShowHitArea}${cache}${checkContainerEl}${checkEl}${checkName}${checked}${children}${container}${destroyed}${draggable}${expanded}${hitAreaEl}${iconEl}${treenodetaskId}${index}${initialized}${io}${label}${labelEl}${leaf}${loaded}${loading}${nextSibling}${ownerTree}${parentNode}${prevSibling}${afterAlwaysShowHitAreaChange}${afterCacheChange}${afterCheckContainerElChange}${afterCheckElChange}${afterCheckNameChange}${afterCheckedChange}${afterChildrenChange}${afterContainerChange}${afterDestroy}${afterDestroyedChange}${afterDraggableChange}${afterExpandedChange}${afterHitAreaElChange}${afterIconElChange}${afterIdChange}${afterIndexChange}${afterInit}${afterInitializedChange}${afterIoChange}${afterLabelChange}${afterLabelElChange}${afterLeafChange}${afterLoadedChange}${afterLoadingChange}${afterNextSiblingChange}${afterOwnerTreeChange}${afterParentNodeChange}${afterPrevSiblingChange}${onAlwaysShowHitAreaChange}${onCacheChange}${onCheckContainerElChange}${onCheckElChange}${onCheckNameChange}${onCheckedChange}${onChildrenChange}${onContainerChange}${onDestroy}${onDestroyedChange}${onDraggableChange}${onExpandedChange}${onHitAreaElChange}${onIconElChange}${onIdChange}${onIndexChange}${onInit}${onInitializedChange}${onIoChange}${onLabelChange}${onLabelElChange}${onLeafChange}${onLoadedChange}${onLoadingChange}${onNextSiblingChange}${onOwnerTreeChange}${onParentNodeChange}${onPrevSiblingChange}&gt;&lt;/alloy:tree-node-task&gt;
        </content>
        <variable description="Always show the hitarea icon.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="alwaysShowHitArea" name="alwaysShowHitArea"/>
        <variable description="Whether the current TreeNode should cache the loaded content or not.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="cache" name="cache"/>
        <variable description="Container element for the checkbox.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="checkContainerEl" name="checkContainerEl"/>
        <variable description="Checkbox element.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="checkEl" name="checkEl"/>
        <variable description="Name of the checkbox element used on the current TreeNode.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="checkName" name="checkName"/>
        <variable description="Whether the TreeNode is checked or not.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="checked" name="checked"/>
        <variable description="Array of children (i.e. could be a JSON metadata object or a TreeNode instance).&lt;!--{&quot;outputType&quot;:&quot;java.util.ArrayList&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="children" name="children"/>
        <variable description="Container to nest children nodes. If has cntainer it's not a leaf.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="container" name="container"/>
        <variable description="Flag indicating whether or not this object&#10;has been through the destroy lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="destroyed" name="destroyed"/>
        <variable description="If true the TreeNode is draggable.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="draggable" name="draggable"/>
        <variable description="Whether the TreeNode is expanded by default.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="expanded" name="expanded"/>
        <variable description="Hitarea element.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="hitAreaEl" name="hitAreaEl"/>
        <variable description="Icon element.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="iconEl" name="iconEl"/>
        <variable description="Id of the TreeNode.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="treenodetaskId" name="treenodetaskId"/>
        <variable description="Index the nodes.&lt;!--{&quot;outputType&quot;:&quot;java.util.HashMap&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="index" name="index"/>
        <variable description="Flag indicating whether or not this object&#10;has been through the init lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="initialized" name="initialized"/>
        <variable description="IO options for the current TreeNode load the children.&lt;!--{&quot;outputType&quot;:&quot;java.util.HashMap&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="io" name="io"/>
        <variable description="Label of the TreeNode.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="label" name="label"/>
        <variable description="Label element to house the &lt;code&gt;label&lt;/code&gt; attribute.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="labelEl" name="labelEl"/>
        <variable description="Whether the TreeNode could have children or not (i.e. if any&#10;children is present the TreeNode is a leaf).&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="leaf" name="leaf"/>
        <variable description="Whether the current TreeNode has loaded the content.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="loaded" name="loaded"/>
        <variable description="Whether the current TreeNode IO transaction is loading.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="loading" name="loading"/>
        <variable description="Next sibling of the current TreeNode.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="nextSibling" name="nextSibling"/>
        <variable description="TreeView which contains the current TreeNode.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="ownerTree" name="ownerTree"/>
        <variable description="Parent node of the current TreeNode.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="parentNode" name="parentNode"/>
        <variable description="Previous sibling of the current TreeNode.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="prevSibling" name="prevSibling"/>
        <variable description="Fires when the value for the configuration attribute 'alwaysShowHitArea' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterAlwaysShowHitAreaChange" name="afterAlwaysShowHitAreaChange"/>
        <variable description="Fires when the value for the configuration attribute 'cache' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCacheChange" name="afterCacheChange"/>
        <variable description="Fires when the value for the configuration attribute 'checkContainerEl' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCheckContainerElChange" name="afterCheckContainerElChange"/>
        <variable description="Fires when the value for the configuration attribute 'checkEl' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCheckElChange" name="afterCheckElChange"/>
        <variable description="Fires when the value for the configuration attribute 'checkName' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCheckNameChange" name="afterCheckNameChange"/>
        <variable description="Fires when the value for the configuration attribute 'checked' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCheckedChange" name="afterCheckedChange"/>
        <variable description="Fires when the value for the configuration attribute 'children' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterChildrenChange" name="afterChildrenChange"/>
        <variable description="Fires when the value for the configuration attribute 'container' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterContainerChange" name="afterContainerChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroy" name="afterDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroyedChange" name="afterDestroyedChange"/>
        <variable description="Fires when the value for the configuration attribute 'draggable' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDraggableChange" name="afterDraggableChange"/>
        <variable description="Fires when the value for the configuration attribute 'expanded' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterExpandedChange" name="afterExpandedChange"/>
        <variable description="Fires when the value for the configuration attribute 'hitAreaEl' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHitAreaElChange" name="afterHitAreaElChange"/>
        <variable description="Fires when the value for the configuration attribute 'iconEl' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterIconElChange" name="afterIconElChange"/>
        <variable description="Fires when the value for the configuration attribute 'id' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterIdChange" name="afterIdChange"/>
        <variable description="Fires when the value for the configuration attribute 'index' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterIndexChange" name="afterIndexChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInit" name="afterInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInitializedChange" name="afterInitializedChange"/>
        <variable description="Fires when the value for the configuration attribute 'io' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterIoChange" name="afterIoChange"/>
        <variable description="Fires when the value for the configuration attribute 'label' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterLabelChange" name="afterLabelChange"/>
        <variable description="Fires when the value for the configuration attribute 'labelEl' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterLabelElChange" name="afterLabelElChange"/>
        <variable description="Fires when the value for the configuration attribute 'leaf' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterLeafChange" name="afterLeafChange"/>
        <variable description="Fires when the value for the configuration attribute 'loaded' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterLoadedChange" name="afterLoadedChange"/>
        <variable description="Fires when the value for the configuration attribute 'loading' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterLoadingChange" name="afterLoadingChange"/>
        <variable description="Fires when the value for the configuration attribute 'nextSibling' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterNextSiblingChange" name="afterNextSiblingChange"/>
        <variable description="Fires when the value for the configuration attribute 'ownerTree' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterOwnerTreeChange" name="afterOwnerTreeChange"/>
        <variable description="Fires when the value for the configuration attribute 'parentNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterParentNodeChange" name="afterParentNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'prevSibling' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterPrevSiblingChange" name="afterPrevSiblingChange"/>
        <variable description="Fires when the value for the configuration attribute 'alwaysShowHitArea' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onAlwaysShowHitAreaChange" name="onAlwaysShowHitAreaChange"/>
        <variable description="Fires when the value for the configuration attribute 'cache' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCacheChange" name="onCacheChange"/>
        <variable description="Fires when the value for the configuration attribute 'checkContainerEl' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCheckContainerElChange" name="onCheckContainerElChange"/>
        <variable description="Fires when the value for the configuration attribute 'checkEl' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCheckElChange" name="onCheckElChange"/>
        <variable description="Fires when the value for the configuration attribute 'checkName' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCheckNameChange" name="onCheckNameChange"/>
        <variable description="Fires when the value for the configuration attribute 'checked' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCheckedChange" name="onCheckedChange"/>
        <variable description="Fires when the value for the configuration attribute 'children' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onChildrenChange" name="onChildrenChange"/>
        <variable description="Fires when the value for the configuration attribute 'container' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onContainerChange" name="onContainerChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroy" name="onDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroyedChange" name="onDestroyedChange"/>
        <variable description="Fires when the value for the configuration attribute 'draggable' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDraggableChange" name="onDraggableChange"/>
        <variable description="Fires when the value for the configuration attribute 'expanded' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onExpandedChange" name="onExpandedChange"/>
        <variable description="Fires when the value for the configuration attribute 'hitAreaEl' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHitAreaElChange" name="onHitAreaElChange"/>
        <variable description="Fires when the value for the configuration attribute 'iconEl' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onIconElChange" name="onIconElChange"/>
        <variable description="Fires when the value for the configuration attribute 'id' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onIdChange" name="onIdChange"/>
        <variable description="Fires when the value for the configuration attribute 'index' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onIndexChange" name="onIndexChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInit" name="onInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInitializedChange" name="onInitializedChange"/>
        <variable description="Fires when the value for the configuration attribute 'io' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onIoChange" name="onIoChange"/>
        <variable description="Fires when the value for the configuration attribute 'label' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onLabelChange" name="onLabelChange"/>
        <variable description="Fires when the value for the configuration attribute 'labelEl' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onLabelElChange" name="onLabelElChange"/>
        <variable description="Fires when the value for the configuration attribute 'leaf' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onLeafChange" name="onLeafChange"/>
        <variable description="Fires when the value for the configuration attribute 'loaded' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onLoadedChange" name="onLoadedChange"/>
        <variable description="Fires when the value for the configuration attribute 'loading' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onLoadingChange" name="onLoadingChange"/>
        <variable description="Fires when the value for the configuration attribute 'nextSibling' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onNextSiblingChange" name="onNextSiblingChange"/>
        <variable description="Fires when the value for the configuration attribute 'ownerTree' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onOwnerTreeChange" name="onOwnerTreeChange"/>
        <variable description="Fires when the value for the configuration attribute 'parentNode' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onParentNodeChange" name="onParentNodeChange"/>
        <variable description="Fires when the value for the configuration attribute 'prevSibling' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onPrevSiblingChange" name="onPrevSiblingChange"/>
      </item>
      <item class="com.liferay.ide.taglib.ui.snippets.AlloyTagSnippetInsertion" description="tree-view" id="com.liferay.ide.ui.snippets.item.tree-view" label="tree-view" smallicon="icons/snippets/tag-generic.gif">
        <content>
          &lt;alloy:tree-view${children}${container}${destroyed}${index}${initialized}${io}${lastSelected}${type}${afterChildrenChange}${afterContainerChange}${afterDestroy}${afterDestroyedChange}${afterIndexChange}${afterInit}${afterInitializedChange}${afterIoChange}${afterLastSelectedChange}${afterTypeChange}${onChildrenChange}${onContainerChange}${onDestroy}${onDestroyedChange}${onIndexChange}${onInit}${onInitializedChange}${onIoChange}${onLastSelectedChange}${onTypeChange}&gt;&lt;/alloy:tree-view&gt;
        </content>
        <variable description="Array of children (i.e. could be a JSON metadata object or a TreeNode instance).&lt;!--{&quot;outputType&quot;:&quot;java.util.ArrayList&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="children" name="children"/>
        <variable description="Container to nest children nodes. If has cntainer it's not a leaf.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="container" name="container"/>
        <variable description="Flag indicating whether or not this object&#10;has been through the destroy lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="destroyed" name="destroyed"/>
        <variable description="Index the nodes.&lt;!--{&quot;outputType&quot;:&quot;java.util.HashMap&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="index" name="index"/>
        <variable description="Flag indicating whether or not this object&#10;has been through the init lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="initialized" name="initialized"/>
        <variable description="IO metadata for loading the children using ajax.&lt;!--{&quot;outputType&quot;:&quot;java.util.HashMap&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="io" name="io"/>
        <variable description="Last selected TreeNode.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="lastSelected" name="lastSelected"/>
        <variable description="Type of the treeview (i.e. could be 'file' or 'normal').&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="type" name="type"/>
        <variable description="Fires when the value for the configuration attribute 'children' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterChildrenChange" name="afterChildrenChange"/>
        <variable description="Fires when the value for the configuration attribute 'container' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterContainerChange" name="afterContainerChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroy" name="afterDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroyedChange" name="afterDestroyedChange"/>
        <variable description="Fires when the value for the configuration attribute 'index' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterIndexChange" name="afterIndexChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInit" name="afterInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInitializedChange" name="afterInitializedChange"/>
        <variable description="Fires when the value for the configuration attribute 'io' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterIoChange" name="afterIoChange"/>
        <variable description="Fires when the value for the configuration attribute 'lastSelected' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterLastSelectedChange" name="afterLastSelectedChange"/>
        <variable description="Fires when the value for the configuration attribute 'type' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTypeChange" name="afterTypeChange"/>
        <variable description="Fires when the value for the configuration attribute 'children' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onChildrenChange" name="onChildrenChange"/>
        <variable description="Fires when the value for the configuration attribute 'container' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onContainerChange" name="onContainerChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroy" name="onDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroyedChange" name="onDestroyedChange"/>
        <variable description="Fires when the value for the configuration attribute 'index' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onIndexChange" name="onIndexChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInit" name="onInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInitializedChange" name="onInitializedChange"/>
        <variable description="Fires when the value for the configuration attribute 'io' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onIoChange" name="onIoChange"/>
        <variable description="Fires when the value for the configuration attribute 'lastSelected' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onLastSelectedChange" name="onLastSelectedChange"/>
        <variable description="Fires when the value for the configuration attribute 'type' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTypeChange" name="onTypeChange"/>
      </item>
      <item class="com.liferay.ide.taglib.ui.snippets.AlloyTagSnippetInsertion" description="tree-view-dd" id="com.liferay.ide.ui.snippets.item.tree-view-dd" label="tree-view-dd" smallicon="icons/snippets/tag-generic.gif">
        <content>
          &lt;alloy:tree-view-dd${checkContainerEl}${checkEl}${checkName}${checked}${children}${container}${destroyed}${dropAction}${helper}${index}${initialized}${io}${lastSelected}${lastY}${nodeContent}${scrollDelay}${type}${afterCheckContainerElChange}${afterCheckElChange}${afterCheckNameChange}${afterCheckedChange}${afterChildrenChange}${afterContainerChange}${afterDestroy}${afterDestroyedChange}${afterDropActionChange}${afterHelperChange}${afterIndexChange}${afterInit}${afterInitializedChange}${afterIoChange}${afterLastSelectedChange}${afterLastYChange}${afterNodeContentChange}${afterScrollDelayChange}${afterTypeChange}${onCheckContainerElChange}${onCheckElChange}${onCheckNameChange}${onCheckedChange}${onChildrenChange}${onContainerChange}${onDestroy}${onDestroyedChange}${onDropActionChange}${onHelperChange}${onIndexChange}${onInit}${onInitializedChange}${onIoChange}${onLastSelectedChange}${onLastYChange}${onNodeContentChange}${onScrollDelayChange}${onTypeChange}&gt;&lt;/alloy:tree-view-dd&gt;
        </content>
        <variable description="Container element for the checkbox.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="checkContainerEl" name="checkContainerEl"/>
        <variable description="Checkbox element.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="checkEl" name="checkEl"/>
        <variable description="Name of the checkbox element used on the current TreeNode.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="checkName" name="checkName"/>
        <variable description="Whether the TreeNode is checked or not.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="checked" name="checked"/>
        <variable description="Array of children (i.e. could be a JSON metadata object or a TreeNode instance).&lt;!--{&quot;outputType&quot;:&quot;java.util.ArrayList&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="children" name="children"/>
        <variable description="Container to nest children nodes. If has cntainer it's not a leaf.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="container" name="container"/>
        <variable description="Flag indicating whether or not this object&#10;has been through the destroy lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="destroyed" name="destroyed"/>
        <variable description="Drop action (i.e. could be 'append', 'below' or 'above').&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="dropAction" name="dropAction"/>
        <variable description="Dragdrop helper element.&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="helper" name="helper"/>
        <variable description="Index the nodes.&lt;!--{&quot;outputType&quot;:&quot;java.util.HashMap&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="index" name="index"/>
        <variable description="Flag indicating whether or not this object&#10;has been through the init lifecycle phase.&lt;!--{&quot;outputType&quot;:&quot;boolean&quot;,&quot;inputType&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="initialized" name="initialized"/>
        <variable description="IO metadata for loading the children using ajax.&lt;!--{&quot;outputType&quot;:&quot;java.util.HashMap&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="io" name="io"/>
        <variable description="Last selected TreeNode.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="lastSelected" name="lastSelected"/>
        <variable description="Last Y.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="lastY" name="lastY"/>
        <variable description="Reference for the current drop node.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="nodeContent" name="nodeContent"/>
        <variable description="Delay of the scroll while dragging the TreeNodes.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Number&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="scrollDelay" name="scrollDelay"/>
        <variable description="Type of the treeview (i.e. could be 'file' or 'normal').&lt;!--{&quot;outputType&quot;:&quot;java.lang.String&quot;,&quot;inputType&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;event&quot;:false}--&gt;" id="type" name="type"/>
        <variable description="Fires when the value for the configuration attribute 'checkContainerEl' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCheckContainerElChange" name="afterCheckContainerElChange"/>
        <variable description="Fires when the value for the configuration attribute 'checkEl' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCheckElChange" name="afterCheckElChange"/>
        <variable description="Fires when the value for the configuration attribute 'checkName' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCheckNameChange" name="afterCheckNameChange"/>
        <variable description="Fires when the value for the configuration attribute 'checked' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterCheckedChange" name="afterCheckedChange"/>
        <variable description="Fires when the value for the configuration attribute 'children' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterChildrenChange" name="afterChildrenChange"/>
        <variable description="Fires when the value for the configuration attribute 'container' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterContainerChange" name="afterContainerChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroy" name="afterDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDestroyedChange" name="afterDestroyedChange"/>
        <variable description="Fires when the value for the configuration attribute 'dropAction' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterDropActionChange" name="afterDropActionChange"/>
        <variable description="Fires when the value for the configuration attribute 'helper' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterHelperChange" name="afterHelperChange"/>
        <variable description="Fires when the value for the configuration attribute 'index' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterIndexChange" name="afterIndexChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInit" name="afterInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterInitializedChange" name="afterInitializedChange"/>
        <variable description="Fires when the value for the configuration attribute 'io' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterIoChange" name="afterIoChange"/>
        <variable description="Fires when the value for the configuration attribute 'lastSelected' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterLastSelectedChange" name="afterLastSelectedChange"/>
        <variable description="Fires when the value for the configuration attribute 'lastY' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterLastYChange" name="afterLastYChange"/>
        <variable description="Fires when the value for the configuration attribute 'nodeContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterNodeContentChange" name="afterNodeContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'scrollDelay' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterScrollDelayChange" name="afterScrollDelayChange"/>
        <variable description="Fires when the value for the configuration attribute 'type' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="afterTypeChange" name="afterTypeChange"/>
        <variable description="Fires when the value for the configuration attribute 'checkContainerEl' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCheckContainerElChange" name="onCheckContainerElChange"/>
        <variable description="Fires when the value for the configuration attribute 'checkEl' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCheckElChange" name="onCheckElChange"/>
        <variable description="Fires when the value for the configuration attribute 'checkName' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCheckNameChange" name="onCheckNameChange"/>
        <variable description="Fires when the value for the configuration attribute 'checked' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onCheckedChange" name="onCheckedChange"/>
        <variable description="Fires when the value for the configuration attribute 'children' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onChildrenChange" name="onChildrenChange"/>
        <variable description="Fires when the value for the configuration attribute 'container' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onContainerChange" name="onContainerChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the destroy phase,&#10;fired prior to destruction. Invoking the preventDefault&#10;method on the event object provided to subscribers will&#10;prevent destruction from proceeding.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; moment of this event, will be notified&#10;after destruction is complete (and as a result cannot prevent&#10;destruction).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroy" name="onDestroy"/>
        <variable description="Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDestroyedChange" name="onDestroyedChange"/>
        <variable description="Fires when the value for the configuration attribute 'dropAction' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onDropActionChange" name="onDropActionChange"/>
        <variable description="Fires when the value for the configuration attribute 'helper' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onHelperChange" name="onHelperChange"/>
        <variable description="Fires when the value for the configuration attribute 'index' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onIndexChange" name="onIndexChange"/>
        <variable description="&lt;p&gt;&#10;Lifecycle event for the init phase, fired prior to initialization.&#10;Invoking the preventDefault() method on the event object provided&#10;to subscribers will prevent initialization from occuring.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;Subscribers to the &quot;after&quot; momemt of this event, will be notified&#10;after initialization of the object is complete (and therefore&#10;cannot prevent initialization).&#10;&lt;/p&gt;&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInit" name="onInit"/>
        <variable description="Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onInitializedChange" name="onInitializedChange"/>
        <variable description="Fires when the value for the configuration attribute 'io' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onIoChange" name="onIoChange"/>
        <variable description="Fires when the value for the configuration attribute 'lastSelected' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onLastSelectedChange" name="onLastSelectedChange"/>
        <variable description="Fires when the value for the configuration attribute 'lastY' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onLastYChange" name="onLastYChange"/>
        <variable description="Fires when the value for the configuration attribute 'nodeContent' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onNodeContentChange" name="onNodeContentChange"/>
        <variable description="Fires when the value for the configuration attribute 'scrollDelay' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onScrollDelayChange" name="onScrollDelayChange"/>
        <variable description="Fires when the value for the configuration attribute 'type' is changed. You can listen for the event using the &lt;a href=&quot;Attribute.html#method_on&quot;&gt;on&lt;/a&gt; method if you wish to be notified before the attribute's value has changed, or using the &lt;a href=&quot;Event.Target.html#method_after&quot;&gt;after&lt;/a&gt; method if you wish to be notified after the attribute's value has changed.&lt;!--{&quot;outputType&quot;:&quot;java.lang.Object&quot;,&quot;inputType&quot;:&quot;java.lang.Object&quot;,&quot;required&quot;:false,&quot;event&quot;:true}--&gt;" id="onTypeChange" name="onTypeChange"/>
      </item>
    </category>
   </extension>

</plugin>
